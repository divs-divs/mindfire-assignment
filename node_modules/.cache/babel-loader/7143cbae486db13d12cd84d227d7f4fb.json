{"ast":null,"code":"import _objectWithoutProperties from \"/home/divyas/mindfire-assignment-react/react/reactbaserepo/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport _regeneratorRuntime from \"/home/divyas/mindfire-assignment-react/react/reactbaserepo/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/home/divyas/mindfire-assignment-react/react/reactbaserepo/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"/home/divyas/mindfire-assignment-react/react/reactbaserepo/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/divyas/mindfire-assignment-react/react/reactbaserepo/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _assertThisInitialized from \"/home/divyas/mindfire-assignment-react/react/reactbaserepo/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"/home/divyas/mindfire-assignment-react/react/reactbaserepo/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _createSuper from \"/home/divyas/mindfire-assignment-react/react/reactbaserepo/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";\nvar _jsxFileName = \"/home/divyas/mindfire-assignment-react/react/reactbaserepo/src/containers/DefaultLayout/DefaultHeader.js\";\nimport React, { Component } from 'react';\nimport { Redirect } from 'react-router';\nimport { NavLink, Route } from 'react-router-dom';\nimport { Badge, UncontrolledDropdown, DropdownItem, DropdownMenu, DropdownToggle, Nav, NavItem } from 'reactstrap';\nimport PropTypes from 'prop-types';\nimport { AppAsideToggler, AppNavbarBrand, AppSidebarToggler } from '@coreui/react';\nimport profile from '../../assets/img/profile-avatar.png';\nimport AuthenticationService from '../../../src/utils/authentication';\nimport constant from '../.././constants/constant';\nimport HttpTransferService from \"../../../src/utils/httptransfer\";\nimport utils from '../../../src/utils/date';\nimport firebase from '../../../src/firebase';\nimport InfiniteScroll from \"react-infinite-scroll-component\";\nimport { withTranslation } from \"react-i18next\";\nimport moment from 'moment';\nvar authentication = new AuthenticationService();\nvar httptransfer = new HttpTransferService();\nvar propTypes = {\n  children: PropTypes.node\n};\nvar defaultProps = {};\n\nvar DefaultHeader = /*#__PURE__*/function (_Component) {\n  _inherits(DefaultHeader, _Component);\n\n  var _super = _createSuper(DefaultHeader);\n\n  function DefaultHeader(props) {\n    var _this;\n\n    _classCallCheck(this, DefaultHeader);\n\n    _this = _super.call(this, props);\n\n    _this.getUnReadCountOfNotifications = function () {\n      var notificationCount = 0;\n      var notificationEnqueryJson = {\n        \"status\": [\"UNREAD\"],\n        \"pagination_details\": {\n          \"page_size\": 1,\n          \"page_no\": 1\n        }\n      };\n      httptransfer.enqueryNotification(notificationEnqueryJson, constant.ENTITY_ID).then(function (response) {\n        if (response.status === 200) {\n          if (response.data.notifications.length > 0) {\n            notificationCount = response.data.page_details.total_records;\n          }\n\n          _this.setState({\n            notificationCount: notificationCount\n          });\n        }\n      });\n    };\n\n    _this.getNotifications = function () {\n      _this.getUnReadCountOfNotifications();\n\n      var notificationEnqueryJson = {\n        \"pagination_details\": {\n          \"page_size\": _this.state.pageSize\n        }\n      };\n      _this.state.notificationIds = [];\n      var notificationId = 0;\n      var notificationContent = [];\n      var notificationType = \"\";\n      var totalRecord = 0;\n      var pageSize = _this.state.pageSize;\n      httptransfer.enqueryNotification(notificationEnqueryJson, constant.ENTITY_ID).then(function (response) {\n        if (response.status === 200) {\n          totalRecord = response.data.page_details.total_records;\n\n          for (var i = 0; i < response.data.notifications.length; i++) {\n            notificationType = response.data.notifications[i].body.object_type;\n\n            _this.state.notificationIds.push(response.data.notifications[i].notification_history_id);\n\n            notificationId = response.data.notifications[i].notification_history_id;\n\n            if (response.data.notifications[i].status == constant.UNREAD) {\n              if (response.data.notifications[i].body.object_type == \"TRIP\") {\n                notificationContent.push( /*#__PURE__*/React.createElement(DropdownItem, {\n                  __self: _assertThisInitialized(_this),\n                  __source: {\n                    fileName: _jsxFileName,\n                    lineNumber: 100,\n                    columnNumber: 42\n                  }\n                }, /*#__PURE__*/React.createElement(NavLink, {\n                  id: notificationId,\n                  name: notificationType,\n                  type: response.data.notifications[i].body.object_type_details.object_type_id,\n                  to: \"\",\n                  onClick: function onClick(e) {\n                    return _this.readNotifications(e);\n                  },\n                  className: \"nav-link text-dark\",\n                  __self: _assertThisInitialized(_this),\n                  __source: {\n                    fileName: _jsxFileName,\n                    lineNumber: 100,\n                    columnNumber: 57\n                  }\n                }, /*#__PURE__*/React.createElement(\"span\", {\n                  className: \"dot\",\n                  __self: _assertThisInitialized(_this),\n                  __source: {\n                    fileName: _jsxFileName,\n                    lineNumber: 100,\n                    columnNumber: 268\n                  }\n                }), response.data.notifications[i].body.message), /*#__PURE__*/React.createElement(\"span\", {\n                  className: \"notificationTime\",\n                  __self: _assertThisInitialized(_this),\n                  __source: {\n                    fileName: _jsxFileName,\n                    lineNumber: 100,\n                    columnNumber: 352\n                  }\n                }, /*#__PURE__*/React.createElement(\"i\", {\n                  className: \"fa fa-clock-o mr-2\",\n                  \"aria-hidden\": \"true\",\n                  __self: _assertThisInitialized(_this),\n                  __source: {\n                    fileName: _jsxFileName,\n                    lineNumber: 100,\n                    columnNumber: 387\n                  }\n                }), utils.timeAgo(response.data.notifications[i].notification_time))));\n              } else {\n                notificationContent.push( /*#__PURE__*/React.createElement(DropdownItem, {\n                  __self: _assertThisInitialized(_this),\n                  __source: {\n                    fileName: _jsxFileName,\n                    lineNumber: 103,\n                    columnNumber: 42\n                  }\n                }, /*#__PURE__*/React.createElement(NavLink, {\n                  id: notificationId,\n                  name: notificationType,\n                  to: \"\",\n                  onClick: function onClick(e) {\n                    return _this.readNotifications(e);\n                  },\n                  className: \"nav-link text-dark\",\n                  __self: _assertThisInitialized(_this),\n                  __source: {\n                    fileName: _jsxFileName,\n                    lineNumber: 103,\n                    columnNumber: 57\n                  }\n                }, /*#__PURE__*/React.createElement(\"span\", {\n                  className: \"dot\",\n                  __self: _assertThisInitialized(_this),\n                  __source: {\n                    fileName: _jsxFileName,\n                    lineNumber: 103,\n                    columnNumber: 190\n                  }\n                }), response.data.notifications[i].body.message), /*#__PURE__*/React.createElement(\"span\", {\n                  className: \"notificationTime\",\n                  __self: _assertThisInitialized(_this),\n                  __source: {\n                    fileName: _jsxFileName,\n                    lineNumber: 103,\n                    columnNumber: 274\n                  }\n                }, /*#__PURE__*/React.createElement(\"i\", {\n                  className: \"fa fa-clock-o mr-2\",\n                  \"aria-hidden\": \"true\",\n                  __self: _assertThisInitialized(_this),\n                  __source: {\n                    fileName: _jsxFileName,\n                    lineNumber: 103,\n                    columnNumber: 309\n                  }\n                }), utils.timeAgo(response.data.notifications[i].notification_time))));\n              }\n            } else {\n              if (response.data.notifications[i].body.object_type == \"TRIP\") {\n                notificationContent.push( /*#__PURE__*/React.createElement(DropdownItem, {\n                  __self: _assertThisInitialized(_this),\n                  __source: {\n                    fileName: _jsxFileName,\n                    lineNumber: 108,\n                    columnNumber: 42\n                  }\n                }, /*#__PURE__*/React.createElement(NavLink, {\n                  id: notificationId,\n                  name: notificationType,\n                  type: response.data.notifications[i].body.object_type_details.object_type_id,\n                  to: \"\",\n                  onClick: function onClick(e) {\n                    return _this.handleRedirection(e);\n                  },\n                  className: \"nav-link text-dark\",\n                  __self: _assertThisInitialized(_this),\n                  __source: {\n                    fileName: _jsxFileName,\n                    lineNumber: 108,\n                    columnNumber: 57\n                  }\n                }, response.data.notifications[i].body.message), /*#__PURE__*/React.createElement(\"span\", {\n                  className: \"notificationTime\",\n                  __self: _assertThisInitialized(_this),\n                  __source: {\n                    fileName: _jsxFileName,\n                    lineNumber: 108,\n                    columnNumber: 323\n                  }\n                }, /*#__PURE__*/React.createElement(\"i\", {\n                  className: \"fa fa-clock-o mr-2\",\n                  \"aria-hidden\": \"true\",\n                  __self: _assertThisInitialized(_this),\n                  __source: {\n                    fileName: _jsxFileName,\n                    lineNumber: 108,\n                    columnNumber: 358\n                  }\n                }), utils.timeAgo(response.data.notifications[i].notification_time))));\n              } else {\n                notificationContent.push( /*#__PURE__*/React.createElement(DropdownItem, {\n                  __self: _assertThisInitialized(_this),\n                  __source: {\n                    fileName: _jsxFileName,\n                    lineNumber: 111,\n                    columnNumber: 42\n                  }\n                }, /*#__PURE__*/React.createElement(NavLink, {\n                  id: notificationId,\n                  name: notificationType,\n                  to: \"\",\n                  onClick: function onClick(e) {\n                    return _this.handleRedirection(e);\n                  },\n                  className: \"nav-link text-dark\",\n                  __self: _assertThisInitialized(_this),\n                  __source: {\n                    fileName: _jsxFileName,\n                    lineNumber: 111,\n                    columnNumber: 57\n                  }\n                }, response.data.notifications[i].body.message), /*#__PURE__*/React.createElement(\"span\", {\n                  className: \"notificationTime\",\n                  __self: _assertThisInitialized(_this),\n                  __source: {\n                    fileName: _jsxFileName,\n                    lineNumber: 111,\n                    columnNumber: 245\n                  }\n                }, /*#__PURE__*/React.createElement(\"i\", {\n                  className: \"fa fa-clock-o mr-2\",\n                  \"aria-hidden\": \"true\",\n                  __self: _assertThisInitialized(_this),\n                  __source: {\n                    fileName: _jsxFileName,\n                    lineNumber: 111,\n                    columnNumber: 280\n                  }\n                }), utils.timeAgo(response.data.notifications[i].notification_time))));\n              }\n            }\n          }\n\n          _this.setState({\n            notificationContent: notificationContent,\n            totalRecords: totalRecord,\n            pageSize: pageSize + 10\n          });\n\n          if (pageSize == totalRecord) {\n            _this.setState({\n              hasMoreNotifications: false\n            });\n          }\n        }\n      });\n    };\n\n    _this.readNotifications = _this.readNotifications.bind(_assertThisInitialized(_this));\n    _this.state = {\n      showPopup: false,\n      name: '',\n      notificationCount: 0,\n      notificationContent: [],\n      notificationIds: [],\n      markAllAsRead: false,\n      redirectToDashboard: false,\n      redirectToScustEnquiry: false,\n      redirectToEnquiry: false,\n      redirectToTrip: false,\n      redirectToQuotation: false,\n      redirectToPopUp: false,\n      redirectToMessage: false,\n      redirectToDriverEnrollRequest: false,\n      redirectToEnrolledDriver: false,\n      redirectToDocument: false,\n      tripId: '',\n      pageSize: 10,\n      hasMoreNotifications: true,\n      change_password: false\n    };\n    return _this;\n  }\n\n  _createClass(DefaultHeader, [{\n    key: \"handleReadRedirection\",\n    value: function handleReadRedirection(notificationObject) {\n      if (this.state.entityType == constant.SOURCE_CUSTOMER) {\n        switch (notificationObject.notification_object_type) {\n          case 'TRIP':\n            this.setState({\n              redirectToTrip: true,\n              tripId: notificationObject.notification_trip_id\n            });\n            break;\n\n          default:\n            this.setState({\n              redirectToScustEnquiry: this.state.redirectToScustEnquiry = true\n            });\n            break;\n        }\n      } else {\n        switch (notificationObject.notification_object_type) {\n          case 'SC_ENQUIRY':\n            this.setState({\n              redirectToEnquiry: true\n            });\n            break;\n\n          case 'CT_ENQUIRY':\n            this.setState({\n              redirectToEnquiry: true\n            });\n            break;\n\n          case 'TRIP':\n            this.setState({\n              redirectToTrip: true,\n              tripId: notificationObject.notification_trip_id\n            });\n            break;\n\n          case 'CT_QUOTATION':\n            this.setState({\n              redirectToQuotation: true\n            });\n            break;\n\n          case 'TRANSPORTER_QUOTATION':\n            this.setState({\n              redirectToQuotation: true\n            });\n            break;\n\n          case 'ENROLLED_DRIVER':\n            this.setState({\n              redirectToEnrolledDriver: true\n            });\n            break;\n\n          case 'DRIVER_ENROLL_REQUEST':\n            this.setState({\n              redirectToDriverEnrollRequest: true\n            });\n            break;\n\n          case 'MESSAGE':\n            this.setState({\n              redirectToMessage: true\n            });\n            break;\n\n          case 'POP_UP':\n            this.setState({\n              redirectToPopUp: true\n            });\n            break;\n\n          case 'DOCUMENT':\n            this.setState({\n              redirectToDocument: true\n            });\n            break;\n        }\n      }\n    }\n  }, {\n    key: \"readNotifications\",\n    value: function () {\n      var _readNotifications = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(notificationObject) {\n        var _this2 = this;\n\n        var notificationobject, userDetails, notificationHistoryIds, userId, notificationStatusJson;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                notificationobject = {\n                  \"notification_history_id\": notificationObject.target.id,\n                  \"notification_object_type\": notificationObject.target.name,\n                  \"notification_trip_id\": notificationObject.target.type\n                };\n                userDetails = authentication.getUserInfo();\n                notificationHistoryIds = [];\n                notificationHistoryIds.push(notificationObject.target.id);\n                userId = JSON.parse(userDetails).user_id;\n                notificationStatusJson = {\n                  \"notification_history_id\": notificationHistoryIds,\n                  \"status\": \"READ\"\n                };\n                _context.next = 8;\n                return httptransfer.readNotification(notificationStatusJson, constant.ENTITY_ID, userId).then(function (response) {\n                  if (response.status === 200) {\n                    _this2.setState({\n                      notificationCount: _this2.state.notificationCount - 1\n                    });\n\n                    _this2.getNotifications();\n\n                    _this2.handleReadRedirection(notificationobject);\n                  }\n                });\n\n              case 8:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee);\n      }));\n\n      function readNotifications(_x) {\n        return _readNotifications.apply(this, arguments);\n      }\n\n      return readNotifications;\n    }()\n  }, {\n    key: \"readAllNotifications\",\n    value: function readAllNotifications() {\n      var _this3 = this;\n\n      this.setState({\n        markAllAsRead: true\n      });\n      var userDetails = authentication.getUserInfo();\n      var notificationHistoryIds = this.state.notificationIds;\n      var userId = JSON.parse(userDetails).user_id;\n      var notificationStatusJson = {\n        \"status\": \"READ\",\n        \"notification_time\": {\n          \"to\": new Date().getTime()\n        }\n      };\n      httptransfer.readNotification(notificationStatusJson, constant.ENTITY_ID, userId).then(function (response) {\n        if (response.status === 200) {\n          _this3.setState({\n            notificationCount: 0,\n            redirectToDashboard: false\n          });\n\n          _this3.getNotifications();\n        }\n      });\n    }\n  }, {\n    key: \"handleRedirection\",\n    value: function handleRedirection(notificationtype) {\n      var notificationType = notificationtype.target.name;\n\n      switch (notificationType) {\n        case 'MESSAGE':\n          this.setState({\n            redirectToMessage: true\n          });\n          break;\n      }\n    }\n  }, {\n    key: \"componentWillMount\",\n    value: function componentWillMount() {\n      var _this4 = this;\n\n      var messaging = firebase.messaging.isSupported() ? firebase.messaging() : null;\n\n      if (messaging) {\n        messaging.onMessage(function (payload) {\n          _this4.getNotifications();\n        });\n      }\n\n      this.setState({\n        change_password: localStorage.getItem(\"change_password\")\n      });\n    }\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var userName = authentication.getUserInfo();\n      this.setState({\n        name: \"a\",\n        entityType: \"CONTROL TOWER\"\n      });\n      this.getNotifications();\n    }\n  }, {\n    key: \"togglePopup\",\n    value: function togglePopup() {\n      this.setState({\n        showPopup: !this.state.showPopup\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this5 = this;\n\n      // eslint-disable-next-line\n      var _this$props = this.props,\n          children = _this$props.children,\n          attributes = _objectWithoutProperties(_this$props, [\"children\"]);\n\n      var _this$props2 = this.props,\n          t = _this$props2.t,\n          i18n = _this$props2.i18n;\n      return /*#__PURE__*/React.createElement(React.Fragment, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 270,\n          columnNumber: 7\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 271,\n          columnNumber: 7\n        }\n      }, /*#__PURE__*/React.createElement(AppSidebarToggler, {\n        className: \"d-lg-none\",\n        display: \"md\",\n        mobile: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 272,\n          columnNumber: 9\n        }\n      }), /*#__PURE__*/React.createElement(\"p\", {\n        className: \"navbar-brand font-weight-bold mb-0\",\n        style: {\n          color: '#5bcae8'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 273,\n          columnNumber: 9\n        }\n      }, t(\"PROJECT_NAME\")), /*#__PURE__*/React.createElement(AppSidebarToggler, {\n        className: \"d-md-down-none\",\n        display: \"lg\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 274,\n          columnNumber: 9\n        }\n      })), this.state.redirectToMessage ? /*#__PURE__*/React.createElement(Redirect, {\n        to: '/dashboard',\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 275,\n          columnNumber: 40\n        }\n      }) : '', this.state.change_password == \"false\" && /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 276,\n          columnNumber: 51\n        }\n      }, /*#__PURE__*/React.createElement(Nav, {\n        className: \"d-md-down-none\",\n        navbar: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 277,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(NavItem, {\n        className: \"px-3\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 278,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(NavLink, {\n        to: \"/dashboard\",\n        className: \"nav-link\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 279,\n          columnNumber: 13\n        }\n      }, t(\"DASHBOARD\"))))), /*#__PURE__*/React.createElement(Nav, {\n        className: \"ml-auto\",\n        navbar: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 282,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(UncontrolledDropdown, {\n        nav: true,\n        direction: \"down\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 283,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(DropdownToggle, {\n        nav: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 284,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(\"span\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 285,\n          columnNumber: 13\n        }\n      }, \" \", /*#__PURE__*/React.createElement(\"i\", {\n        className: \"icon-bell\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 285,\n          columnNumber: 20\n        }\n      }), this.state.notificationCount > 0 ? /*#__PURE__*/React.createElement(Badge, {\n        pill: true,\n        color: \"danger\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 285,\n          columnNumber: 83\n        }\n      }, this.state.notificationCount) : '')), /*#__PURE__*/React.createElement(DropdownMenu, {\n        direction: \"down\",\n        className: \"notifications\",\n        id: \"scrollableDiv\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 287,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(InfiniteScroll, {\n        dataLength: this.state.notificationContent.length,\n        next: this.getNotifications,\n        hasMore: this.state.hasMoreNotifications,\n        scrollableTarget: \"scrollableDiv\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 288,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(DropdownItem, {\n        header: true,\n        tag: \"div\",\n        className: \"text-center notificationsList\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 294,\n          columnNumber: 15\n        }\n      }, /*#__PURE__*/React.createElement(\"strong\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 294,\n          columnNumber: 88\n        }\n      }, t(\"NOTIFICATIONS\")), this.state.notificationCount > 0 ? /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 295,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(\"input\", {\n        type: \"checkbox\",\n        checked: this.state.markAllAsRead,\n        className: \"markAll\",\n        onClick: function onClick() {\n          return _this5.readAllNotifications();\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 295,\n          columnNumber: 22\n        }\n      }), /*#__PURE__*/React.createElement(\"label\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 296,\n          columnNumber: 17\n        }\n      }, \" \", t(\"MARK_ALL_AS_READ\"))) : \"\"), this.state.notificationContent))), /*#__PURE__*/React.createElement(UncontrolledDropdown, {\n        nav: true,\n        direction: \"down\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 302,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(DropdownToggle, {\n        nav: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 303,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(\"img\", {\n        src: profile,\n        className: \"img-avatar mr-2\",\n        alt: \"profile\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 304,\n          columnNumber: 15\n        }\n      }), /*#__PURE__*/React.createElement(\"span\", {\n        className: \"mr-5\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 304,\n          columnNumber: 78\n        }\n      }, /*#__PURE__*/React.createElement(\"b\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 304,\n          columnNumber: 101\n        }\n      }, this.state.name))), /*#__PURE__*/React.createElement(DropdownMenu, {\n        direction: \"down\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 306,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(DropdownItem, {\n        header: true,\n        tag: \"div\",\n        className: \"text-center\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 307,\n          columnNumber: 15\n        }\n      }, /*#__PURE__*/React.createElement(\"strong\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 307,\n          columnNumber: 70\n        }\n      }, t(\"ACCOUNT\"))), /*#__PURE__*/React.createElement(DropdownItem, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 308,\n          columnNumber: 3\n        }\n      }, /*#__PURE__*/React.createElement(NavLink, {\n        to: \"/profile\",\n        className: \"nav-link text-dark\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 308,\n          columnNumber: 18\n        }\n      }, /*#__PURE__*/React.createElement(\"i\", {\n        className: \"fa fa-user\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 308,\n          columnNumber: 72\n        }\n      }), t(\"PROFILE\"))), /*#__PURE__*/React.createElement(DropdownItem, {\n        onClick: function onClick(e) {\n          return _this5.props.onLogout(e);\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 309,\n          columnNumber: 15\n        }\n      }, /*#__PURE__*/React.createElement(\"i\", {\n        className: \"fa fa-lock\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 309,\n          columnNumber: 67\n        }\n      }), t(\"LOGOUT\"))))));\n    }\n  }]);\n\n  return DefaultHeader;\n}(Component);\n\nDefaultHeader.propTypes = propTypes;\nDefaultHeader.defaultProps = defaultProps;\nDefaultHeader.propTypes = {\n  classes: PropTypes.object.isRequired\n};\nexport default withTranslation(\"translations\")(DefaultHeader);","map":{"version":3,"sources":["/home/divyas/mindfire-assignment-react/react/reactbaserepo/src/containers/DefaultLayout/DefaultHeader.js"],"names":["React","Component","Redirect","NavLink","Route","Badge","UncontrolledDropdown","DropdownItem","DropdownMenu","DropdownToggle","Nav","NavItem","PropTypes","AppAsideToggler","AppNavbarBrand","AppSidebarToggler","profile","AuthenticationService","constant","HttpTransferService","utils","firebase","InfiniteScroll","withTranslation","moment","authentication","httptransfer","propTypes","children","node","defaultProps","DefaultHeader","props","getUnReadCountOfNotifications","notificationCount","notificationEnqueryJson","enqueryNotification","ENTITY_ID","then","response","status","data","notifications","length","page_details","total_records","setState","getNotifications","state","pageSize","notificationIds","notificationId","notificationContent","notificationType","totalRecord","i","body","object_type","push","notification_history_id","UNREAD","object_type_details","object_type_id","e","readNotifications","message","timeAgo","notification_time","handleRedirection","totalRecords","hasMoreNotifications","bind","showPopup","name","markAllAsRead","redirectToDashboard","redirectToScustEnquiry","redirectToEnquiry","redirectToTrip","redirectToQuotation","redirectToPopUp","redirectToMessage","redirectToDriverEnrollRequest","redirectToEnrolledDriver","redirectToDocument","tripId","change_password","notificationObject","entityType","SOURCE_CUSTOMER","notification_object_type","notification_trip_id","notificationobject","target","id","type","userDetails","getUserInfo","notificationHistoryIds","userId","JSON","parse","user_id","notificationStatusJson","readNotification","handleReadRedirection","Date","getTime","notificationtype","messaging","isSupported","onMessage","payload","localStorage","getItem","userName","attributes","t","i18n","color","readAllNotifications","onLogout","classes","object","isRequired"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { Redirect } from 'react-router';\nimport {  NavLink,Route} from 'react-router-dom';\nimport { Badge, UncontrolledDropdown, DropdownItem, DropdownMenu, DropdownToggle, Nav, NavItem } from 'reactstrap';\nimport PropTypes from 'prop-types';\nimport { AppAsideToggler, AppNavbarBrand, AppSidebarToggler } from '@coreui/react';\nimport profile from '../../assets/img/profile-avatar.png'\nimport AuthenticationService from '../../../src/utils/authentication';\nimport constant from '../.././constants/constant';\nimport HttpTransferService from \"../../../src/utils/httptransfer\";\nimport utils from '../../../src/utils/date'\nimport firebase from '../../../src/firebase';\nimport InfiniteScroll from \"react-infinite-scroll-component\";\nimport {  withTranslation } from \"react-i18next\";\nimport moment from 'moment';\n\nconst  authentication = new AuthenticationService()\nconst httptransfer = new HttpTransferService();\n\n\nconst propTypes = {\n  children: PropTypes.node,\n};\n\nconst defaultProps = {};\n\nclass DefaultHeader extends Component {\n  constructor(props) {\n    super(props);\n    this.readNotifications=this.readNotifications.bind(this);\n\n    this.state = {\n        showPopup: false,\n        name : '',\n        notificationCount:0,\n        notificationContent:[],\n        notificationIds:[],\n        markAllAsRead: false,\n        redirectToDashboard: false,\n        redirectToScustEnquiry:false,\n        redirectToEnquiry: false,\n        redirectToTrip: false,\n        redirectToQuotation:false,\n        redirectToPopUp:false,\n        redirectToMessage:false,\n        redirectToDriverEnrollRequest:false,\n        redirectToEnrolledDriver:false,\n        redirectToDocument:false,\n        tripId:'',\n        pageSize:10,\n        hasMoreNotifications:true,\n        change_password:false\n    }\n}\n\n  getUnReadCountOfNotifications = () => {\n    var notificationCount = 0;\n    var notificationEnqueryJson = {\n      \"status\": [\"UNREAD\"],\n      \"pagination_details\":{\t\t\n        \"page_size\": 1,\n        \"page_no\": 1\n    }\n    }\n    httptransfer.enqueryNotification(notificationEnqueryJson, constant.ENTITY_ID)\n      .then(response => {\n        if (response.status === 200) {\n          if (response.data.notifications.length > 0) {\n            notificationCount = response.data.page_details.total_records;\n          }\n          this.setState({\n            notificationCount: notificationCount,\n          })\n        }\n      })\n  }\n\n  getNotifications = () => {\n    this.getUnReadCountOfNotifications();\n    var notificationEnqueryJson = {\n      \"pagination_details\": {\t\t\n        \"page_size\": this.state.pageSize,\n    }}\n    this.state.notificationIds=[];\n    let notificationId = 0;\n    var notificationContent=[];\n    var notificationType=\"\";\n    let totalRecord=0;\n    let pageSize= this.state.pageSize;\n    httptransfer.enqueryNotification(notificationEnqueryJson, constant.ENTITY_ID)\n      .then(response => {\n        if (response.status === 200) {\n          totalRecord=response.data.page_details.total_records\n          for (var i = 0; i < response.data.notifications.length; i++) {\n              notificationType=response.data.notifications[i].body.object_type\n            this.state.notificationIds.push(response.data.notifications[i].notification_history_id);\n            notificationId = response.data.notifications[i].notification_history_id;\n            if (response.data.notifications[i].status == constant.UNREAD) {\n              if (response.data.notifications[i].body.object_type==\"TRIP\") {\n                notificationContent.push(<DropdownItem ><NavLink id={notificationId} name={notificationType} type={response.data.notifications[i].body.object_type_details.object_type_id} to=\"\" onClick={(e) => this.readNotifications(e)} className=\"nav-link text-dark\"><span className=\"dot\"></span>{response.data.notifications[i].body.message}</NavLink><span className=\"notificationTime\"><i className=\"fa fa-clock-o mr-2\" aria-hidden=\"true\"></i>{utils.timeAgo(response.data.notifications[i].notification_time)}</span></DropdownItem>)\n              }\n              else{\n                notificationContent.push(<DropdownItem ><NavLink id={notificationId} name={notificationType} to=\"\" onClick={(e) => this.readNotifications(e)} className=\"nav-link text-dark\"><span className=\"dot\"></span>{response.data.notifications[i].body.message}</NavLink><span className=\"notificationTime\"><i className=\"fa fa-clock-o mr-2\" aria-hidden=\"true\"></i>{utils.timeAgo(response.data.notifications[i].notification_time)}</span></DropdownItem>)\n              }\n            }\n            else {\n              if (response.data.notifications[i].body.object_type ==\"TRIP\") {\n                notificationContent.push(<DropdownItem ><NavLink id={notificationId} name={notificationType} type={response.data.notifications[i].body.object_type_details.object_type_id} to=\"\" onClick={(e) => this.handleRedirection(e)} className=\"nav-link text-dark\">{response.data.notifications[i].body.message}</NavLink><span className=\"notificationTime\"><i className=\"fa fa-clock-o mr-2\" aria-hidden=\"true\"></i>{utils.timeAgo(response.data.notifications[i].notification_time)}</span></DropdownItem>)\n              }\n              else{\n                notificationContent.push(<DropdownItem ><NavLink id={notificationId} name={notificationType} to=\"\" onClick={(e) => this.handleRedirection(e)} className=\"nav-link text-dark\">{response.data.notifications[i].body.message}</NavLink><span className=\"notificationTime\"><i className=\"fa fa-clock-o mr-2\" aria-hidden=\"true\"></i>{utils.timeAgo(response.data.notifications[i].notification_time)}</span></DropdownItem>)\n              }\n            }\n        }\n        this.setState({\n          notificationContent:notificationContent,\n          totalRecords:totalRecord,\n          pageSize:pageSize+10\n        })\n        if(pageSize==totalRecord){\n          this.setState({\n            hasMoreNotifications:false\n          })\n        }\n        }\n      })\n  }\n\n  handleReadRedirection(notificationObject){\n    if(this.state.entityType==constant.SOURCE_CUSTOMER){\n      switch (notificationObject.notification_object_type) {\n        case 'TRIP':\n          this.setState({ redirectToTrip: true, tripId: notificationObject.notification_trip_id });\n          break;\n        default :\n            this.setState({ redirectToScustEnquiry : this.state.redirectToScustEnquiry=true })\n          break;\n      }\n    }\n    else{\n    switch (notificationObject.notification_object_type) {\n      case 'SC_ENQUIRY':\n        this.setState({ redirectToEnquiry: true });\n        break;\n      case 'CT_ENQUIRY':\n          this.setState({ redirectToEnquiry: true });\n        break;\n      case 'TRIP':\n        this.setState({ redirectToTrip: true, tripId: notificationObject.notification_trip_id });\n        break;\n      case 'CT_QUOTATION':\n        this.setState({ redirectToQuotation: true });\n        break;\n      case 'TRANSPORTER_QUOTATION':\n        this.setState({ redirectToQuotation: true });\n        break;\n      case 'ENROLLED_DRIVER':\n        this.setState({ redirectToEnrolledDriver: true });\n        break;\n      case 'DRIVER_ENROLL_REQUEST':\n        this.setState({ redirectToDriverEnrollRequest: true });\n        break;\n      case 'MESSAGE':\n        this.setState({ redirectToMessage: true });\n        break;\n      case 'POP_UP':\n        this.setState({ redirectToPopUp: true });\n        break;\n      case 'DOCUMENT':\n        this.setState({ redirectToDocument: true });\n        break;\n    }\n  }\n  }\n\n\n async readNotifications(notificationObject){\n    let notificationobject = {\n      \"notification_history_id\" : notificationObject.target.id,\n      \"notification_object_type\" : notificationObject.target.name,\n      \"notification_trip_id\" : notificationObject.target.type\n    }\n    var userDetails = authentication.getUserInfo();\n    var notificationHistoryIds = []\n    notificationHistoryIds.push(notificationObject.target.id)\n    var userId = JSON.parse(userDetails).user_id\n    var notificationStatusJson = {\n      \"notification_history_id\": notificationHistoryIds,\n      \"status\": \"READ\"\n    }\n     await httptransfer.readNotification(notificationStatusJson, constant.ENTITY_ID, userId)\n      .then(response => {\n        if (response.status === 200) {\n          this.setState({\n            notificationCount: this.state.notificationCount - 1,\n          })\n          this.getNotifications();\n          this.handleReadRedirection(notificationobject);\n        }\n      })\n  }\n\n  readAllNotifications() {\n    this.setState({\n      markAllAsRead: true\n    })\n    var userDetails = authentication.getUserInfo();\n    let notificationHistoryIds = this.state.notificationIds\n    var userId = JSON.parse(userDetails).user_id\n    var notificationStatusJson = {\n      \"status\": \"READ\",\n      \"notification_time\": {\n        \"to\":new Date().getTime(),\t\t\n      }\n    }\n    httptransfer.readNotification(notificationStatusJson, constant.ENTITY_ID, userId)\n      .then(response => {\n        if (response.status === 200) {\n          this.setState({\n            notificationCount: 0,\n            redirectToDashboard:false\n          })\n          this.getNotifications();\n        }\n      })\n  }\n\n   handleRedirection(notificationtype){\n    let notificationType=notificationtype.target.name;\n    switch (notificationType) {\n      case 'MESSAGE':\n        this.setState({ redirectToMessage: true });\n        break;\n    }\n  }\n\n  componentWillMount() {\n    const messaging =  firebase.messaging.isSupported() ? firebase.messaging() : null;\n    if(messaging){\n    messaging.onMessage(payload => {\n      this.getNotifications();\n    })\n  }\n  this.setState({\n    change_password:localStorage.getItem(\"change_password\")\n  })\n  }\n\n  componentDidMount() {\n    var userName = authentication.getUserInfo()\n    this.setState({\n      name:\"a\",\n      entityType:\"CONTROL TOWER\"\n    })\n    this.getNotifications()\n  }\n\ntogglePopup() {\n  this.setState({\n    showPopup: !this.state.showPopup\n  });\n}\n\n  render() {\n\n    // eslint-disable-next-line\n    const { children, ...attributes } = this.props;\n    const { t, i18n } = this.props;\n    return (\n      <React.Fragment>\n      <div>\n        <AppSidebarToggler className=\"d-lg-none\" display=\"md\" mobile />\n        <p className=\"navbar-brand font-weight-bold mb-0\" style={{color:'#5bcae8'}}>{t(\"PROJECT_NAME\")}</p>\n        <AppSidebarToggler className=\"d-md-down-none\" display=\"lg\" /></div>\n         {this.state.redirectToMessage?<Redirect to={'/dashboard'}/>:''}\n         {this.state.change_password == \"false\" &&<div>\n        <Nav className=\"d-md-down-none\" navbar>\n          <NavItem className=\"px-3\">\n            <NavLink to=\"/dashboard\" className=\"nav-link\" >{t(\"DASHBOARD\")}</NavLink>\n          </NavItem>\n        </Nav></div>}\n        <Nav className=\"ml-auto\" navbar>  \n          <UncontrolledDropdown nav direction=\"down\">\n            <DropdownToggle nav>\n            <span> <i className=\"icon-bell\"></i>{this.state.notificationCount>0 ? <Badge pill color=\"danger\">{this.state.notificationCount}</Badge> :''}</span>\n            </DropdownToggle>\n            <DropdownMenu direction=\"down\" className=\"notifications\" id=\"scrollableDiv\">\n            <InfiniteScroll\n            dataLength={this.state.notificationContent.length}\n            next={this.getNotifications}\n            hasMore={this.state.hasMoreNotifications}\n            scrollableTarget=\"scrollableDiv\"\n          >\n              <DropdownItem header tag=\"div\" className=\"text-center notificationsList\"><strong>{t(\"NOTIFICATIONS\")}</strong>{this.state.notificationCount>0 ?\n                <div><input type=\"checkbox\" checked={this.state.markAllAsRead} className=\"markAll\" onClick={() => this.readAllNotifications()} />\n                <label> {t(\"MARK_ALL_AS_READ\")}</label></div> :\"\"}\n              </DropdownItem>\n              {this.state.notificationContent}\n              </InfiniteScroll>\n            </DropdownMenu>\n          </UncontrolledDropdown>            \n          <UncontrolledDropdown nav direction=\"down\">\n            <DropdownToggle nav>\n              <img src={profile} className=\"img-avatar mr-2\" alt=\"profile\" /><span className=\"mr-5\"><b>{this.state.name}</b></span>\n            </DropdownToggle>\n            <DropdownMenu direction=\"down\">\n              <DropdownItem header tag=\"div\" className=\"text-center\"><strong>{t(\"ACCOUNT\")}</strong></DropdownItem>\n  <DropdownItem ><NavLink to=\"/profile\" className=\"nav-link text-dark\"><i className=\"fa fa-user\"></i>{t(\"PROFILE\")}</NavLink></DropdownItem>\n              <DropdownItem onClick={e => this.props.onLogout(e)}><i className=\"fa fa-lock\"></i>{t(\"LOGOUT\")}</DropdownItem>\n            </DropdownMenu>\n          </UncontrolledDropdown>\n        </Nav>\n        {/* <AppAsideToggler className=\"d-md-down-none\" /> */}\n        {/*<AppAsideToggler className=\"d-lg-none\" mobile />*/}\n      </React.Fragment>\n    );\n  }\n}\n\nDefaultHeader.propTypes = propTypes;\nDefaultHeader.defaultProps = defaultProps;\n\nDefaultHeader.propTypes = {\n  classes: PropTypes.object.isRequired\n};\n\nexport default (withTranslation(\"translations\")(DefaultHeader));\n"]},"metadata":{},"sourceType":"module"}