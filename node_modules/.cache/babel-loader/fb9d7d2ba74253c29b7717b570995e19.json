{"ast":null,"code":"import _classCallCheck from \"/app/mindfire-assignment/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/app/mindfire-assignment/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _assertThisInitialized from \"/app/mindfire-assignment/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"/app/mindfire-assignment/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _createSuper from \"/app/mindfire-assignment/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";\nvar _jsxFileName = \"/app/mindfire-assignment/src/views/components/SourceCustomer/addSourceCustomer.js\";\nimport React, { Component } from 'react';\nimport { Label, Input } from 'reactstrap';\nimport HttpTransferService from \"../../../utils/httptransfer\";\nimport SimpleReactValidator from 'simple-react-validator';\nimport validate from \"../../../utils/validations\";\nimport 'react-phone-input-2/lib/style.css';\nimport constant from '../../../constants/constant';\nimport { withTranslation } from \"react-i18next\";\nimport PropTypes from \"prop-types\";\nimport { ToastContainer } from \"react-toastify\";\nimport \"react-toastify/dist/ReactToastify.css\";\nvar httptransfer = new HttpTransferService();\n\nvar AddSourceCustomer = /*#__PURE__*/function (_Component) {\n  _inherits(AddSourceCustomer, _Component);\n\n  var _super = _createSuper(AddSourceCustomer);\n\n  function AddSourceCustomer(props) {\n    var _this;\n\n    _classCallCheck(this, AddSourceCustomer);\n\n    _this = _super.call(this, props);\n    _this.validator = new SimpleReactValidator({\n      autoForceUpdate: _assertThisInitialized(_this)\n    });\n    _this.handleInputChange = _this.handleInputChange.bind(_assertThisInitialized(_this));\n    _this.initialState = {\n      name: \"\",\n      type: \"\",\n      state: \"\",\n      email: \"\",\n      city: \"\",\n      pincode: \"\",\n      contact: \"\",\n      stateList: [],\n      cityList: [],\n      contacttype: \"MOBILE\",\n      address_line_1: '',\n      pan: '',\n      fssai: ''\n    };\n    _this.state = _this.initialState;\n    return _this;\n  }\n\n  _createClass(AddSourceCustomer, [{\n    key: \"handleInputChange\",\n    value: function handleInputChange(e, index, value) {\n      e.persist();\n      var id = e.target.id;\n\n      switch (id) {\n        case 'name':\n          this.setState({\n            name: e.target.value\n          });\n          break;\n\n        case 'state':\n          this.setState({\n            state: e.target.value\n          });\n          this.getCity(e.target.value);\n          break;\n\n        case 'city':\n          this.setState({\n            city: e.target.value\n          });\n          break;\n\n        case 'pincode':\n          this.setState({\n            pincode: e.target.value\n          });\n          break;\n\n        case 'contact':\n          this.setState({\n            contact: e.target.value\n          });\n          break;\n\n        case 'address_line_1':\n          this.setState({\n            address_line_1: e.target.value\n          });\n          break;\n\n        case 'type':\n          this.setState({\n            type: e.target.value\n          });\n          break;\n\n        default:\n          break;\n      }\n    }\n  }, {\n    key: \"createUserJson\",\n    value: function createUserJson() {\n      var userJson = {\n        name: validate.capitalizeText(this.state.name),\n        type: this.state.type ? this.state.type : this.props.type,\n        state: this.state.state,\n        city_id: this.state.city,\n        pincode: this.state.pincode,\n        address_line_1: validate.capitalizeText(this.state.address_line_1),\n        contacts: [{\n          contact: this.state.contact,\n          type: this.state.contacttype\n        }]\n      };\n      return userJson;\n    }\n  }, {\n    key: \"SubmitAddCustomer\",\n    value: function SubmitAddCustomer(event) {\n      if (validate.validate(this.validator)) {\n        this.addEntity();\n      }\n    }\n  }, {\n    key: \"addEntity\",\n    value: function addEntity() {\n      var _this2 = this;\n\n      var userJson = {};\n      userJson = this.createUserJson();\n      httptransfer.addSourceCustomerEntity(userJson).then(function (response) {\n        _this2.props.closeModal();\n      });\n    }\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.getStateList();\n    }\n  }, {\n    key: \"getStateList\",\n    value: function getStateList() {\n      var _this3 = this;\n\n      httptransfer.getStateList().then(function (response) {\n        _this3.setState({\n          stateList: response.data.states\n        });\n      });\n    }\n  }, {\n    key: \"getCity\",\n    value: function getCity(state_id) {\n      var _this4 = this;\n\n      httptransfer.getCityList({\n        state_id: [state_id]\n      }).then(function (response) {\n        _this4.setState({\n          cityList: response.data.cities\n        });\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this5 = this;\n\n      var t = this.props.t;\n      var statesOptions = this.state.stateList.length ? this.state.stateList.map(function (element) {\n        return /*#__PURE__*/React.createElement(\"option\", {\n          key: element.state_name,\n          value: element.state_id,\n          __self: _this5,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 130,\n            columnNumber: 43\n          }\n        }, element.state_name);\n      }) : [];\n      var cityOptions = this.state.cityList.length ? this.state.cityList.map(function (element) {\n        return /*#__PURE__*/React.createElement(\"option\", {\n          key: element.city_name,\n          value: element.city_id,\n          __self: _this5,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 133,\n            columnNumber: 42\n          }\n        }, element.city_name);\n      }) : [];\n      return /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 136,\n          columnNumber: 7\n        }\n      }, /*#__PURE__*/React.createElement(ToastContainer, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 137,\n          columnNumber: 9\n        }\n      }), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"position-relative form-group\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 138,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(Label, {\n        for: \"name\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 139,\n          columnNumber: 9\n        }\n      }, t(\"NAME\")), /*#__PURE__*/React.createElement(Input, {\n        type: \"text\",\n        className: \"text-capitalize\",\n        onChange: this.handleInputChange,\n        id: \"name\",\n        placeholder: \"Enter your name\",\n        required: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 140,\n          columnNumber: 11\n        }\n      }), this.validator.message('name', this.state.name, 'required')), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"position-relative form-group\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 143,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(Label, {\n        for: \"address_line_1\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 144,\n          columnNumber: 11\n        }\n      }, t(\"ADDRESS\"), \" \"), /*#__PURE__*/React.createElement(Input, {\n        type: \"text\",\n        onChange: this.handleInputChange,\n        className: \"form-control\",\n        id: \"address_line_1\",\n        placeholder: \"Enter Address\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 145,\n          columnNumber: 11\n        }\n      }), this.validator.message('address_line_1', this.state.address_line_1, validate.required)), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"my-0 position-relative row form-group\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 148,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"col-4\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 149,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"position-relative form-group\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 150,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(Label, {\n        for: \"state\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 151,\n          columnNumber: 15\n        }\n      }, t(\"STATE\")), /*#__PURE__*/React.createElement(\"select\", {\n        id: \"state\",\n        onChange: this.handleInputChange,\n        className: \"form-control\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 152,\n          columnNumber: 15\n        }\n      }, /*#__PURE__*/React.createElement(\"option\", {\n        defaultValue: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 153,\n          columnNumber: 17\n        }\n      }, \"Choose state\"), statesOptions), this.validator.message('state', this.state.state, validate.required))), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"col-4\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 159,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"position-relative form-group\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 160,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(Label, {\n        for: \"city\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 161,\n          columnNumber: 15\n        }\n      }, t(\"CITY\")), /*#__PURE__*/React.createElement(\"select\", {\n        disabled: cityOptions.length ? false : true,\n        id: \"city\",\n        onChange: this.handleInputChange,\n        className: \"form-control\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 162,\n          columnNumber: 15\n        }\n      }, /*#__PURE__*/React.createElement(\"option\", {\n        value: \"\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 163,\n          columnNumber: 17\n        }\n      }, \"Choose city\"), cityOptions), this.validator.message('city', this.state.city, validate.required))), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"col-4\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 169,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"position-relative form-group\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 170,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(Label, {\n        for: \"pincode\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 171,\n          columnNumber: 13\n        }\n      }, t(\"PINCODE\")), /*#__PURE__*/React.createElement(Input, {\n        type: \"number\",\n        onChange: this.handleInputChange,\n        className: \"form-control\",\n        id: \"pincode\",\n        placeholder: \"Enter Pincode\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 172,\n          columnNumber: 13\n        }\n      }), this.validator.message('pincode', this.state.pincode, validate.requiredPincode)))), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"position-relative form-group\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 177,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(Label, {\n        for: \"contact\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 178,\n          columnNumber: 11\n        }\n      }, t(\"CONTACT\")), /*#__PURE__*/React.createElement(Input, {\n        id: \"contact\",\n        onChange: this.handleInputChange,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 179,\n          columnNumber: 11\n        }\n      }), this.validator.message('contact', this.state.contact, validate.required)), /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 185,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(\"button\", {\n        type: \"submit\",\n        className: \"btn btn-primary btn-md\",\n        onClick: this.SubmitAddCustomer.bind(this),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 186,\n          columnNumber: 5\n        }\n      }, t(\"CREATE\"))));\n    }\n  }]);\n\n  return AddSourceCustomer;\n}(Component);\n\nAddSourceCustomer.propTypes = {\n  classes: PropTypes.object.isRequired\n};\nexport default withTranslation(\"translations\")(AddSourceCustomer);","map":{"version":3,"sources":["/app/mindfire-assignment/src/views/components/SourceCustomer/addSourceCustomer.js"],"names":["React","Component","Label","Input","HttpTransferService","SimpleReactValidator","validate","constant","withTranslation","PropTypes","ToastContainer","httptransfer","AddSourceCustomer","props","validator","autoForceUpdate","handleInputChange","bind","initialState","name","type","state","email","city","pincode","contact","stateList","cityList","contacttype","address_line_1","pan","fssai","e","index","value","persist","id","target","setState","getCity","userJson","capitalizeText","city_id","contacts","event","addEntity","createUserJson","addSourceCustomerEntity","then","response","closeModal","getStateList","data","states","state_id","getCityList","cities","t","statesOptions","length","map","element","state_name","cityOptions","city_name","message","required","requiredPincode","SubmitAddCustomer","propTypes","classes","object","isRequired"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { Label, Input } from 'reactstrap';\nimport HttpTransferService from \"../../../utils/httptransfer\";\nimport SimpleReactValidator from 'simple-react-validator';\nimport validate from \"../../../utils/validations\";\nimport 'react-phone-input-2/lib/style.css';\nimport constant from '../../../constants/constant';\nimport {  withTranslation } from \"react-i18next\";\nimport PropTypes from \"prop-types\";\nimport { ToastContainer } from \"react-toastify\";\nimport \"react-toastify/dist/ReactToastify.css\";\n\nconst httptransfer = new HttpTransferService();\n\nclass AddSourceCustomer extends Component {\n\n  constructor(props) {\n    super(props);\n    this.validator = new SimpleReactValidator({autoForceUpdate: this});\n    this.handleInputChange = this.handleInputChange.bind(this);\n  \n    this.initialState = {\n      name : \"\",\n      type : \"\",\n      state : \"\",\n      email : \"\",\n      city : \"\",\n      pincode : \"\",\n      contact:\"\",\n      stateList: [],\n      cityList: [],\n      contacttype:\"MOBILE\",\n      address_line_1: '',\n      pan: '',\n      fssai: ''\n    }\n    this.state = this.initialState;\n  };\n\n  handleInputChange(e, index, value) {\n    e.persist();\n    let id = e.target.id\n    switch (id) {\n      case 'name':\n        this.setState({ name: e.target.value });\n        break;\n      case 'state':\n        this.setState({ state: e.target.value  });\n        this.getCity(e.target.value );\n        break;\n      case 'city':\n        this.setState({ city:  e.target.value  });\n        break;\n      case 'pincode':\n        this.setState({ pincode: e.target.value});\n        break;\n      case 'contact':\n        this.setState({ contact: e.target.value });\n        break;\n      case 'address_line_1': \n        this.setState({ address_line_1: e.target.value });\n        break;\n      case 'type': \n        this.setState({ type: e.target.value });\n        break;\n      default:\n        break;\n    }\n  }\n\n  createUserJson() {\n    var userJson = {\n      name: validate.capitalizeText(this.state.name),\n      type: this.state.type ? this.state.type : this.props.type,\n      state: this.state.state,\n      city_id: this.state.city,\n      pincode: this.state.pincode,\n      address_line_1: validate.capitalizeText(this.state.address_line_1),\n      contacts: [\n        {\n          contact: this.state.contact,\n          type: this.state.contacttype\n        }\n      ]\n    }\n    return userJson\n  }\n\n  SubmitAddCustomer(event) {\n    if (validate.validate(this.validator)) {\n      this.addEntity()\n    }\n  }\n  \n  addEntity(){\n    var userJson = {}\n   userJson = this.createUserJson()\n    httptransfer.addSourceCustomerEntity(userJson)\n      .then(response => {\n          this.props.closeModal()\n    });\n  }\n\n\n  componentDidMount() {\n    this.getStateList()\n  }\n\n  getStateList () {\n    httptransfer.getStateList()\n      .then(response => {\n        this.setState({\n          stateList: response.data.states\n        })\n      })\n  }\n\n  getCity (state_id) {\n    httptransfer.getCityList({state_id: [state_id]})\n      .then(response => {\n        this.setState({\n          cityList: response.data.cities\n        })\n      })\n  }\n\n  render() {\n    const {t}=this.props;\n    let statesOptions = this.state.stateList.length ? \n      this.state.stateList.map(element => <option key={element.state_name} value={element.state_id}>{element.state_name}</option>) :\n      []\n    let cityOptions = this.state.cityList.length ? \n      this.state.cityList.map(element => <option key={element.city_name} value={element.city_id}>{element.city_name}</option>) :\n      []\n    return (\n      <div>\n        <ToastContainer/>\n        <div className=\"position-relative form-group\">\n        <Label for=\"name\">{t(\"NAME\")}</Label>\n          <Input type=\"text\" className=\"text-capitalize\" onChange={this.handleInputChange} id=\"name\" placeholder=\"Enter your name\" required/>\n          {this.validator.message('name', this.state.name, 'required')}\n        </div>\n        <div className=\"position-relative form-group\">\n          <Label for=\"address_line_1\">{t(\"ADDRESS\")} </Label>\n          <Input type=\"text\"  onChange={this.handleInputChange} className=\"form-control\" id=\"address_line_1\" placeholder=\"Enter Address\"/>\n          {this.validator.message('address_line_1', this.state.address_line_1, validate.required)}\n        </div>    \n        <div className=\"my-0 position-relative row form-group\">\n          <div className=\"col-4\">\n            <div className=\"position-relative form-group\">\n              <Label for=\"state\">{t(\"STATE\")}</Label>\n              <select id=\"state\"  onChange={this.handleInputChange} className=\"form-control\">\n                <option defaultValue >Choose state</option>\n                {statesOptions}\n              </select>\n              {this.validator.message('state', this.state.state, validate.required)}\n            </div>\n          </div>\n          <div className=\"col-4\">\n            <div className=\"position-relative form-group\">\n              <Label for=\"city\">{t(\"CITY\")}</Label>\n              <select disabled={cityOptions.length ? false : true} id=\"city\"  onChange={this.handleInputChange} className=\"form-control\">\n                <option value=\"\">Choose city</option>\n                {cityOptions}\n              </select>\n              {this.validator.message('city', this.state.city, validate.required)}\n            </div>\n          </div>\n          <div className=\"col-4\">\n            <div className=\"position-relative form-group\">\n            <Label for=\"pincode\">{t(\"PINCODE\")}</Label>\n            <Input type=\"number\"  onChange={this.handleInputChange} className=\"form-control\" id=\"pincode\" placeholder=\"Enter Pincode\"/>\n            {this.validator.message('pincode', this.state.pincode, validate.requiredPincode)}\n            </div>     \n          </div>\n        </div>\n        <div className=\"position-relative form-group\">\n          <Label for=\"contact\">{t(\"CONTACT\")}</Label>\n          <Input\n            id=\"contact\"\n            onChange={this.handleInputChange}\n          />\n          {this.validator.message('contact', this.state.contact, validate.required)}\n        </div>\n        <div>\n    <button type=\"submit\" className=\"btn btn-primary btn-md\" onClick={this.SubmitAddCustomer.bind(this)}>{t(\"CREATE\")}</button>\n        </div>\n      </div>  \n    )\n  }\n}\n\nAddSourceCustomer.propTypes = {\n  classes: PropTypes.object.isRequired\n};\n\nexport default (withTranslation(\"translations\")(AddSourceCustomer));\n"]},"metadata":{},"sourceType":"module"}