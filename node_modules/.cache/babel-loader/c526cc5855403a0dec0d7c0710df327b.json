{"ast":null,"code":"import _classCallCheck from \"/home/divyas/mindfire-assignment-react/react/reactbaserepo/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/divyas/mindfire-assignment-react/react/reactbaserepo/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _assertThisInitialized from \"/home/divyas/mindfire-assignment-react/react/reactbaserepo/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"/home/divyas/mindfire-assignment-react/react/reactbaserepo/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _createSuper from \"/home/divyas/mindfire-assignment-react/react/reactbaserepo/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";\nvar _jsxFileName = \"/home/divyas/mindfire-assignment-react/react/reactbaserepo/src/views/components/SourceCustomer/User/editUser.js\";\nimport React, { Component } from 'react';\nimport { Label, Input } from 'reactstrap';\nimport HttpTransferService from \"../../../../utils/httptransfer\";\nimport { ToastContainer } from \"react-toastify\";\nimport { Multiselect } from 'multiselect-react-dropdown';\nimport constants from '../../../../constants/constant';\nimport SimpleReactValidator from 'simple-react-validator';\nimport validate from \"../../../../utils/validations\";\nimport PhoneInput from 'react-phone-input-2';\nimport 'react-phone-input-2/lib/style.css';\nimport constant from '../../../../constants/constant';\nvar httptransfer = new HttpTransferService();\n\nvar EditUser = /*#__PURE__*/function (_Component) {\n  _inherits(EditUser, _Component);\n\n  var _super = _createSuper(EditUser);\n\n  function EditUser(props) {\n    var _this;\n\n    _classCallCheck(this, EditUser);\n\n    _this = _super.call(this, props);\n    _this.validator = new SimpleReactValidator({\n      autoForceUpdate: _assertThisInitialized(_this)\n    });\n    _this.initialState = {\n      first_name: \"\",\n      last_name: \"\",\n      mobile: \"\",\n      email: \"\",\n      role: [],\n      user_id: '',\n      landlineNumber: '',\n      prefered_language: \"English\",\n      generate_password: false,\n      country_code: _this.props.userDetails.country_code ? _this.props.userDetails.country_code : \"+91\"\n    };\n    _this.state = _this.initialState;\n    _this.handleSubmit = _this.handleSubmit.bind(_assertThisInitialized(_this));\n    _this.handleInputChange = _this.handleInputChange.bind(_assertThisInitialized(_this));\n    return _this;\n  }\n\n  _createClass(EditUser, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.getUserAdditionalDetails();\n      this.setState({\n        first_name: this.props.userDetails.first_name,\n        last_name: this.props.userDetails.last_name,\n        email: this.props.userDetails.email,\n        user_id: this.props.userDetails.user_id,\n        mobile: this.state.country_code + this.props.userDetails.mobile\n      });\n      document.getElementById('first_name').value = this.props.userDetails.first_name;\n      document.getElementById('last_name').value = this.props.userDetails.last_name;\n      document.getElementById('email').value = this.props.userDetails.email;\n\n      if (this.props.userDetails.role.length) {\n        var role = [];\n        this.props.userDetails.role.map(function (element) {\n          role.push(constants.ROLES.filter(function (a) {\n            return a.id === element;\n          })[0]);\n        });\n        this.setState({\n          role: role\n        });\n      }\n    }\n  }, {\n    key: \"getUserAdditionalDetails\",\n    value: function getUserAdditionalDetails() {\n      var _this2 = this;\n\n      var params = {\n        user_id: [this.props.userDetails.user_id]\n      };\n      httptransfer.queryUserAdditionalAttributes(params, constant.ENTITY_ID).then(function (response) {\n        if (response.status === 200) {\n          if (response.data.users.length) {\n            _this2.setState({\n              landlineNumber: response.data.users[0].additional_attributes.landline_number\n            });\n\n            document.getElementById('landlineNumber').value = response.data.users[0].additional_attributes.landline_number;\n          }\n        }\n      });\n    }\n  }, {\n    key: \"handleInputChange\",\n    value: function handleInputChange(e) {\n      var id = e.target.id;\n\n      switch (id) {\n        case 'first_name':\n          this.setState({\n            first_name: e.target.value\n          });\n          break;\n\n        case 'last_name':\n          this.setState({\n            last_name: e.target.value\n          });\n          break;\n\n        case 'email':\n          this.setState({\n            email: e.target.value\n          });\n          break;\n\n        case 'role':\n          this.setState({\n            role: e.target.value\n          });\n          break;\n\n        case 'landlineNumber':\n          this.setState({\n            landlineNumber: e.target.value\n          });\n          break;\n\n        default:\n          console.log('undefined field');\n          break;\n      }\n    }\n  }, {\n    key: \"handleSubmit\",\n    value: function handleSubmit(event) {\n      if (validate.validate(this.validator)) {\n        this.editUser();\n      }\n    }\n  }, {\n    key: \"editUser\",\n    value: function editUser() {\n      var _this3 = this;\n\n      var userJson = {};\n      userJson = this.editUserJson();\n      httptransfer.updateUserQuery(userJson, this.props.entityId).then(function (response) {\n        if (response.status === 200) {\n          _this3.updateUserAdditionalAttributes(_this3.props.userDetails.user_id);\n        }\n      });\n    }\n  }, {\n    key: \"updateUserAdditionalAttributes\",\n    value: function updateUserAdditionalAttributes(userId) {\n      var _this4 = this;\n\n      var params = {\n        landline_number: this.state.landlineNumber\n      };\n      httptransfer.updateUserAdditionalAttributes(params, constant.ENTITY_ID, userId).then(function (response) {\n        if (response.status === 200) {\n          _this4.props.togglePopup();\n        }\n      });\n    }\n  }, {\n    key: \"onSelect\",\n    value: function onSelect(selectedList) {\n      this.setState({\n        role: selectedList\n      });\n    }\n  }, {\n    key: \"onRemove\",\n    value: function onRemove(selectedList) {\n      this.setState({\n        role: selectedList\n      });\n    }\n  }, {\n    key: \"editUserJson\",\n    value: function editUserJson() {\n      var userJson = {};\n      var role = [];\n\n      if (this.state.role.length) {\n        this.state.role.map(function (element) {\n          role.push(element.id);\n        });\n      }\n\n      userJson['first_name'] = validate.capitalizeText(this.state.first_name);\n      userJson['last_name'] = validate.capitalizeText(this.state.last_name);\n      userJson['email'] = this.state.email;\n      userJson['role'] = role;\n      userJson['user_id'] = this.state.user_id;\n      userJson['generate_password'] = false;\n      userJson['prefered_language'] = this.state.prefered_language;\n      userJson['mobile'] = this.state.mobile.slice(-10);\n      userJson['country_code'] = constant.plus + this.state.mobile.replace(userJson['mobile'], '');\n      return userJson;\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this5 = this;\n\n      var roles = constants.ROLES.filter(function (a) {\n        return a.value === _this5.props.entityType;\n      });\n      return /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 170,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(ToastContainer, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 171,\n          columnNumber: 11\n        }\n      }), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"my-0 position-relative row form-group\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 172,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"col-6\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 173,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"position-relative form-group\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 174,\n          columnNumber: 15\n        }\n      }, /*#__PURE__*/React.createElement(Label, {\n        for: \"first_name\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 175,\n          columnNumber: 15\n        }\n      }, \"First Name\"), /*#__PURE__*/React.createElement(Input, {\n        type: \"text\",\n        className: \"text-capitalize\",\n        name: \"first_name\",\n        onChange: this.handleInputChange,\n        id: \"first_name\",\n        placeholder: \"Enter first name\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 176,\n          columnNumber: 15\n        }\n      }), this.validator.message('first_name', this.state.first_name, validate.required))), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"col-6\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 180,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"position-relative form-group\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 181,\n          columnNumber: 15\n        }\n      }, /*#__PURE__*/React.createElement(Label, {\n        for: \"last_name\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 182,\n          columnNumber: 15\n        }\n      }, \"Last Name\"), /*#__PURE__*/React.createElement(Input, {\n        type: \"text\",\n        className: \"text-capitalize\",\n        name: \"last_name\",\n        onChange: this.handleInputChange,\n        id: \"last_name\",\n        placeholder: \"Enter last name\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 183,\n          columnNumber: 15\n        }\n      }), this.validator.message('last_name', this.state.last_name, validate.required)))), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"my-0 position-relative row form-group\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 188,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"col-6\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 189,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"position-relative form-group\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 190,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(Label, {\n        for: \"email\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 191,\n          columnNumber: 17\n        }\n      }, \"Email\"), /*#__PURE__*/React.createElement(Input, {\n        disabled: true,\n        type: \"email\",\n        className: \"form-control\",\n        name: \"email\",\n        id: \"email\",\n        placeholder: \"Enter email-id\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 192,\n          columnNumber: 17\n        }\n      }), this.validator.message('email', this.state.email, validate.requiredEmail))), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"col-6\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 196,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"position-relative form-group\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 197,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(Label, {\n        for: \"mobile\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 198,\n          columnNumber: 17\n        }\n      }, \"Contact Number\"), /*#__PURE__*/React.createElement(PhoneInput, {\n        disabled: true // country={constants.IndiaCode}\n        ,\n        value: this.state.mobile,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 199,\n          columnNumber: 17\n        }\n      }), this.validator.message('mobile', this.state.mobile, validate.phone)))), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"my-0 position-relative row form-group\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 208,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"col-6\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 209,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"position-relative form-group\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 210,\n          columnNumber: 15\n        }\n      }, /*#__PURE__*/React.createElement(Label, {\n        for: \"role\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 211,\n          columnNumber: 15\n        }\n      }, \"Role\"), /*#__PURE__*/React.createElement(Multiselect, {\n        id: \"role\",\n        className: \"form-control text-capitalize\",\n        selectedValues: this.state.role,\n        onSelect: this.onSelect.bind(this),\n        onRemove: this.onRemove.bind(this),\n        options: roles,\n        displayValue: \"name\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 212,\n          columnNumber: 15\n        }\n      }), this.validator.message('role', this.state.role, validate.required))), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"col-6\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 222,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"position-relative form-group\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 223,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(Label, {\n        for: \"userTitle\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 224,\n          columnNumber: 15\n        }\n      }, \"Landline Number\"), /*#__PURE__*/React.createElement(Input, {\n        type: \"number\",\n        className: \"form-control\",\n        name: \"landlineNumber\",\n        onChange: this.handleInputChange,\n        id: \"landlineNumber\",\n        placeholder: \"Enter landline number\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 225,\n          columnNumber: 15\n        }\n      })))), /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 229,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(\"button\", {\n        type: \"submit\",\n        className: \"btn btn-primary btn-md\",\n        onClick: function onClick(e) {\n          return _this5.handleSubmit(e);\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 230,\n          columnNumber: 11\n        }\n      }, \"Update\")));\n    }\n  }]);\n\n  return EditUser;\n}(Component);\n\nexport default EditUser;","map":{"version":3,"sources":["/home/divyas/mindfire-assignment-react/react/reactbaserepo/src/views/components/SourceCustomer/User/editUser.js"],"names":["React","Component","Label","Input","HttpTransferService","ToastContainer","Multiselect","constants","SimpleReactValidator","validate","PhoneInput","constant","httptransfer","EditUser","props","validator","autoForceUpdate","initialState","first_name","last_name","mobile","email","role","user_id","landlineNumber","prefered_language","generate_password","country_code","userDetails","state","handleSubmit","bind","handleInputChange","getUserAdditionalDetails","setState","document","getElementById","value","length","map","element","push","ROLES","filter","a","id","params","queryUserAdditionalAttributes","ENTITY_ID","then","response","status","data","users","additional_attributes","landline_number","e","target","console","log","event","editUser","userJson","editUserJson","updateUserQuery","entityId","updateUserAdditionalAttributes","userId","togglePopup","selectedList","capitalizeText","slice","plus","replace","roles","entityType","message","required","requiredEmail","phone","onSelect","onRemove"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { Label, Input} from 'reactstrap';\nimport HttpTransferService from \"../../../../utils/httptransfer\";\nimport { ToastContainer } from \"react-toastify\";\nimport { Multiselect } from 'multiselect-react-dropdown';\nimport constants from '../../../../constants/constant';\nimport SimpleReactValidator from 'simple-react-validator';\nimport validate from \"../../../../utils/validations\"\nimport PhoneInput from 'react-phone-input-2'\nimport 'react-phone-input-2/lib/style.css'\nimport constant from '../../../../constants/constant';\n\n\nconst httptransfer = new HttpTransferService();\n\nclass EditUser extends Component {\n\n  constructor (props) {\n    super(props);\n    this.validator = new SimpleReactValidator({autoForceUpdate: this});\n    this.initialState = {\n        first_name : \"\",\n        last_name : \"\",\n        mobile : \"\",\n        email : \"\",\n        role: [],\n        user_id: '',\n        landlineNumber: '',\n        prefered_language: \"English\",\n        generate_password:false,\n        country_code:this.props.userDetails.country_code ? this.props.userDetails.country_code : \"+91\"\n      }\n\n      this.state = this.initialState;\n      this.handleSubmit = this.handleSubmit.bind(this);\n      this.handleInputChange = this.handleInputChange.bind(this)\n    }\n\n    componentDidMount () {\n      this.getUserAdditionalDetails()\n      this.setState({\n        first_name: this.props.userDetails.first_name,\n        last_name: this.props.userDetails.last_name,\n        email: this.props.userDetails.email,\n        user_id: this.props.userDetails.user_id,\n        mobile: this.state.country_code +this.props.userDetails.mobile,\n      })\n      document.getElementById('first_name').value = this.props.userDetails.first_name\n      document.getElementById('last_name').value =  this.props.userDetails.last_name\n      document.getElementById('email').value =  this.props.userDetails.email\n\n      if (this.props.userDetails.role.length) {\n        let role = []\n        this.props.userDetails.role.map(element => {\n          role.push(constants.ROLES.filter(a => a.id === element)[0])\n        })\n        this.setState({role: role})\n      }\n    }\n    getUserAdditionalDetails () {\n      var params = {\n        user_id: [this.props.userDetails.user_id]\n      }\n      httptransfer.queryUserAdditionalAttributes(params, constant.ENTITY_ID)\n      .then(response => {\n       if (response.status === 200) {\n         if (response.data.users.length) {\n           this.setState({\n            landlineNumber: response.data.users[0].additional_attributes.landline_number\n           })\n           document.getElementById('landlineNumber').value = response.data.users[0].additional_attributes.landline_number\n         }\n       }\n      })\n    }\n    \n\n    handleInputChange(e) {\n      let id = e.target.id\n      switch (id) {\n        case 'first_name':\n          this.setState({ first_name: e.target.value });\n          break;\n          case 'last_name':\n          this.setState({ last_name: e.target.value });\n          break;\n        case 'email':\n          this.setState({ email: e.target.value });\n          break;\n        case 'role':\n          this.setState({ role: e.target.value });\n          break;\n        case 'landlineNumber':\n          this.setState({ landlineNumber: e.target.value });\n          break;\n        default:\n          console.log('undefined field');\n          break;\n      }\n  \n    }\n\n  handleSubmit(event) {\n    if (validate.validate(this.validator)) {\n      this.editUser()\n    }\n  }\n\n  editUser(){\n    var userJson = {}\n    userJson = this.editUserJson()\n    httptransfer.updateUserQuery(userJson,this.props.entityId)\n      .then(response => {\n        if (response.status === 200) {\n        this.updateUserAdditionalAttributes(this.props.userDetails.user_id)\n        } \n      });\n  }\n\n  updateUserAdditionalAttributes (userId) {\n    var params = {\n      landline_number: this.state.landlineNumber\n    }\n    httptransfer.updateUserAdditionalAttributes(params, constant.ENTITY_ID, userId)\n    .then(response => {\n      if (response.status === 200) {\n        this.props.togglePopup();\n      }\n    })\n  }\n\n  onSelect(selectedList) {\n\n    this.setState ({\n      role: selectedList\n    })\n  }\n  \n  onRemove(selectedList) {\n    this.setState ({\n      role: selectedList\n    })\n  }\n\n  editUserJson()\n  {\n    var userJson = {}\n    let role = []\n    if (this.state.role.length) {\n      this.state.role.map(element => {\n        role.push(element.id)\n      })\n    }\n    userJson['first_name'] = validate.capitalizeText(this.state.first_name)\n    userJson['last_name'] = validate.capitalizeText(this.state.last_name)\n    userJson['email'] = this.state.email\n    userJson['role'] = role\n    userJson['user_id'] = this.state.user_id\n    userJson['generate_password'] = false\n    userJson['prefered_language'] = this.state.prefered_language\n    userJson['mobile'] = this.state.mobile.slice(-10)\n    userJson['country_code'] = constant.plus + this.state.mobile.replace(userJson['mobile'], '')\n    return userJson\n\n  }\n\n    render() {\n      const roles = constants.ROLES.filter(a => a.value === this.props.entityType)\n      return (\n        <div>\n          <ToastContainer />\n          <div className=\"my-0 position-relative row form-group\">\n          <div className=\"col-6\">\n              <div className=\"position-relative form-group\">\n              <Label for=\"first_name\">First Name</Label>\n              <Input type=\"text\" className=\"text-capitalize\" name=\"first_name\" onChange={this.handleInputChange} id=\"first_name\" placeholder=\"Enter first name\" />\n              {this.validator.message('first_name', this.state.first_name, validate.required)}\n              </div>\n          </div>\n          <div className=\"col-6\">\n              <div className=\"position-relative form-group\">\n              <Label for=\"last_name\">Last Name</Label>\n              <Input type=\"text\" className=\"text-capitalize\" name=\"last_name\" onChange={this.handleInputChange} id=\"last_name\" placeholder=\"Enter last name\" />\n              {this.validator.message('last_name', this.state.last_name, validate.required)}\n              </div>\n          </div>\n          </div>\n          <div className=\"my-0 position-relative row form-group\">\n            <div className=\"col-6\">\n                <div className=\"position-relative form-group\">\n                <Label for=\"email\">Email</Label>\n                <Input disabled type=\"email\" className=\"form-control\" name=\"email\" id=\"email\" placeholder=\"Enter email-id\"/>\n                {this.validator.message('email', this.state.email, validate.requiredEmail)}\n                </div>\n            </div>\n            <div className=\"col-6\">\n                <div className=\"position-relative form-group\">\n                <Label for=\"mobile\">Contact Number</Label>\n                <PhoneInput\n                  disabled\n                  // country={constants.IndiaCode}\n                  value={this.state.mobile}\n                />\n                {this.validator.message('mobile', this.state.mobile, validate.phone)}\n                </div>\n            </div>\n          </div>\n          <div className=\"my-0 position-relative row form-group\">\n          <div className=\"col-6\">\n              <div className=\"position-relative form-group\">\n              <Label for=\"role\">Role</Label>\n              <Multiselect id=\"role\" className=\"form-control text-capitalize\"\n                selectedValues={this.state.role} \n                onSelect={this.onSelect.bind(this)} \n                onRemove={this.onRemove.bind(this)} \n                options={roles}\n                displayValue=\"name\"\n              />\n              {this.validator.message('role', this.state.role, validate.required)}\n              </div>\n          </div>\n          <div className=\"col-6\">\n            <div className=\"position-relative form-group\">\n              <Label for=\"userTitle\">Landline Number</Label>\n              <Input type=\"number\" className=\"form-control\" name=\"landlineNumber\" onChange={this.handleInputChange} id=\"landlineNumber\" placeholder=\"Enter landline number\"/>\n            </div>\n          </div>\n          </div>\n          <div>\n          <button type=\"submit\" className=\"btn btn-primary btn-md\" onClick={(e) => this.handleSubmit(e)}>Update</button>\n          </div>\n        </div>\n        )\n    }\n}\nexport default EditUser"]},"metadata":{},"sourceType":"module"}