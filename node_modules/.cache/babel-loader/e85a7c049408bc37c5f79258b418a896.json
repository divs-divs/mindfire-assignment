{"ast":null,"code":"import _assertThisInitialized from \"/home/divyas/mindfire-assignment/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _classCallCheck from \"/home/divyas/mindfire-assignment/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/divyas/mindfire-assignment/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _inherits from \"/home/divyas/mindfire-assignment/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _createSuper from \"/home/divyas/mindfire-assignment/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";\nvar _jsxFileName = \"/home/divyas/mindfire-assignment/src/views/components/SourceCustomer/queryCustomer.js\";\nimport React, { Component } from \"react\";\nimport { Input } from 'reactstrap';\nimport HttpTransferService from \"../../../utils/httptransfer\";\nimport '../../../views/modal.css';\nimport '../../../scss/_custom.scss';\nimport UserListModal from './User/UserListModal';\nimport { Modal, ModalHeader, ModalBody } from 'reactstrap';\nimport AddSourceCoustomer from \"./addSourceCustomer\";\nimport EditSourceCoustomer from \"./editSourceCustomer\";\nimport DataTable from 'react-data-table-component';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faPlus } from '@fortawesome/free-solid-svg-icons';\nimport constant from \"../../../constants/constant\";\nimport { withTranslation } from \"react-i18next\";\nimport PropTypes from \"prop-types\";\nimport { ToastContainer } from \"react-toastify\";\nimport \"react-toastify/dist/ReactToastify.css\";\nvar httptransfer = new HttpTransferService();\n\nvar AddSourceCoustomerModal = /*#__PURE__*/function (_React$Component) {\n  _inherits(AddSourceCoustomerModal, _React$Component);\n\n  var _super = _createSuper(AddSourceCoustomerModal);\n\n  function AddSourceCoustomerModal() {\n    var _this;\n\n    _classCallCheck(this, AddSourceCoustomerModal);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _super.call.apply(_super, [this].concat(args));\n\n    _this.closePopup = function () {\n      _this.props.closePopup();\n    };\n\n    return _this;\n  }\n\n  _createClass(AddSourceCoustomerModal, [{\n    key: \"render\",\n    value: function render() {\n      var closebtn = /*#__PURE__*/React.createElement(\"button\", {\n        className: \"close\",\n        onClick: this.closePopup,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 22\n        }\n      }, \"\\xD7\");\n      return /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 7\n        }\n      }, /*#__PURE__*/React.createElement(Modal, {\n        size: \"lg\",\n        isOpen: this.props.showPopup,\n        toggle: this.props.closePopup,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(ModalHeader, {\n        toggle: this.props.closePopup,\n        close: closebtn,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 11\n        }\n      }, this.props.titles.addCustomerTitle), /*#__PURE__*/React.createElement(ModalBody, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(ToastContainer, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 11\n        }\n      }), /*#__PURE__*/React.createElement(AddSourceCoustomer, {\n        type: this.props.queryEntity,\n        closeModal: this.closePopup,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 13\n        }\n      }))));\n    }\n  }]);\n\n  return AddSourceCoustomerModal;\n}(React.Component);\n\nvar EditSourceCoustomerModal = /*#__PURE__*/function (_React$Component2) {\n  _inherits(EditSourceCoustomerModal, _React$Component2);\n\n  var _super2 = _createSuper(EditSourceCoustomerModal);\n\n  function EditSourceCoustomerModal() {\n    var _this2;\n\n    _classCallCheck(this, EditSourceCoustomerModal);\n\n    for (var _len2 = arguments.length, args = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n      args[_key2] = arguments[_key2];\n    }\n\n    _this2 = _super2.call.apply(_super2, [this].concat(args));\n\n    _this2.closePopup = function () {\n      _this2.props.toggleSourceEditModal();\n    };\n\n    return _this2;\n  }\n\n  _createClass(EditSourceCoustomerModal, [{\n    key: \"render\",\n    value: function render() {\n      var closebtn = /*#__PURE__*/React.createElement(\"button\", {\n        className: \"close\",\n        onClick: this.closePopup,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 22\n        }\n      }, \"\\xD7\");\n      return /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 7\n        }\n      }, /*#__PURE__*/React.createElement(Modal, {\n        size: \"lg\",\n        isOpen: this.props.showAddressEditModal,\n        toggle: this.closePopup,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(ModalHeader, {\n        toggle: this.props.toggleSourceEditModal,\n        close: closebtn,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 11\n        }\n      }, this.props.titles.editCustomerTitle), /*#__PURE__*/React.createElement(ModalBody, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(EditSourceCoustomer, {\n        type: this.props.queryEntity,\n        sourceCustomerDetails: this.props.sourceCustomerDetails,\n        closeModal: this.closePopup,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 13\n        }\n      }))));\n    }\n  }]);\n\n  return EditSourceCoustomerModal;\n}(React.Component);\n\nvar QueryCustomer = /*#__PURE__*/function (_Component) {\n  _inherits(QueryCustomer, _Component);\n\n  var _super3 = _createSuper(QueryCustomer);\n\n  function QueryCustomer(props) {\n    var _this3;\n\n    _classCallCheck(this, QueryCustomer);\n\n    _this3 = _super3.call(this, props);\n    _this3.state = {\n      queryEntity: '',\n      entities: [],\n      userData: {},\n      titles: {\n        cardTitle: '',\n        addCustomerTitle: '',\n        editCustomerTitle: '',\n        addCustomerUserTitle: '',\n        addCustomerAddressTitle: ''\n      },\n      transporterDetails: {},\n      sourceCustomerDetails: {},\n      showAddressEditModal: false,\n      showPopupAddress: false,\n      showPopup: false,\n      showUserListModal: false,\n      showAddressListModal: false,\n      sourceEntityId: '',\n      fadeAddress: false,\n      showTransporterRouteModal: false,\n      showVehicleTypeModal: false,\n      activeTransporter: '',\n      fade: true,\n      popoverOpen: false,\n      typeFilter: false,\n      transportersOption: [],\n      columns: [],\n      entitiesAdditionalList: [],\n      defaultColumns: [{\n        name: props.t(\"NAME\"),\n        selector: 'name',\n        sortable: true\n      }, {\n        name: props.t(\"CITY\"),\n        selector: 'city',\n        sortable: false,\n        cell: function cell(row) {\n          return row.city_details.city_name + ', ' + row.state_details.state_name;\n        }\n      }, {\n        name: props.t(\"STATUS\"),\n        selector: 'status',\n        sortable: false\n      }, {\n        name: props.t(\"USER_ACTIONS\"),\n        cell: function cell(row) {\n          return /*#__PURE__*/React.createElement(\"div\", {\n            __self: _assertThisInitialized(_this3),\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 119,\n              columnNumber: 24\n            }\n          }, /*#__PURE__*/React.createElement(\"i\", {\n            className: \"fa fa-users mr-2\",\n            \"aria-hidden\": \"true\",\n            title: \"Users\",\n            onClick: _this3.toggleUserListModal.bind(_assertThisInitialized(_this3), row),\n            __self: _assertThisInitialized(_this3),\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 120,\n              columnNumber: 17\n            }\n          }), /*#__PURE__*/React.createElement(\"i\", {\n            className: \"fa fa-edit mr-2\",\n            \"aria-hidden\": \"true\",\n            onClick: _this3.toggleSourceEditModal.bind(_assertThisInitialized(_this3), row),\n            title: \"Edit\",\n            __self: _assertThisInitialized(_this3),\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 121,\n              columnNumber: 17\n            }\n          }));\n        }\n      }]\n    };\n    _this3.getAdditionTransporterValues = _this3.getAdditionTransporterValues.bind(_assertThisInitialized(_this3));\n    _this3.toggleUserListModal = _this3.toggleUserListModal.bind(_assertThisInitialized(_this3));\n    _this3.toggleTransporterRouteModal = _this3.toggleTransporterRouteModal.bind(_assertThisInitialized(_this3));\n    _this3.resetTypeFilter = _this3.resetTypeFilter.bind(_assertThisInitialized(_this3));\n    _this3.setColumns = _this3.setColumns.bind(_assertThisInitialized(_this3));\n    _this3.getAdditionalAttributesList = _this3.getAdditionalAttributesList.bind(_assertThisInitialized(_this3));\n    return _this3;\n  }\n\n  _createClass(QueryCustomer, [{\n    key: \"toggleVehicleTypeModal\",\n    value: function toggleVehicleTypeModal(row) {\n      this.setState({\n        showVehicleTypeModal: !this.state.showVehicleTypeModal,\n        transporterDetails: row // activeTransporter: row\n\n      });\n    }\n  }, {\n    key: \"toggleAddressModal\",\n    value: function toggleAddressModal(userData) {\n      this.setState({\n        showAddressListModal: !this.state.showAddressListModal,\n        fadeAddress: !this.state.fadeAddress,\n        userData: userData\n      });\n    }\n  }, {\n    key: \"toggleTransporterRouteModal\",\n    value: function toggleTransporterRouteModal(row) {\n      this.setState({\n        showTransporterRouteModal: !this.state.showTransporterRouteModal,\n        activeTransporter: row\n      });\n    }\n  }, {\n    key: \"toggleSourceEditModal\",\n    value: function toggleSourceEditModal(sourceCustomer) {\n      if (this.state.showAddressEditModal) {\n        this.getSourceCustomerEntity();\n      }\n\n      this.setState({\n        showAddressEditModal: !this.state.showAddressEditModal,\n        fade: !this.state.fade,\n        sourceCustomerDetails: sourceCustomer\n      });\n    }\n  }, {\n    key: \"closePopUp\",\n    value: function closePopUp() {\n      this.setState({\n        modal: this.state.modal,\n        fade: !this.state.fade\n      });\n    }\n  }, {\n    key: \"toggleUserListModal\",\n    value: function toggleUserListModal(userData) {\n      this.setState({\n        showUserListModal: !this.state.showUserListModal,\n        fade: !this.state.fade,\n        userData: userData\n      });\n    }\n  }, {\n    key: \"togglePopup\",\n    value: function togglePopup() {\n      this.setState({\n        showPopup: !this.state.showPopup,\n        fade: !this.state.fade\n      });\n      this.getSourceCustomerEntity();\n    }\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this4 = this;\n\n      this.setEntityType().then(function (response) {\n        _this4.getSourceCustomerEntity();\n      });\n    }\n  }, {\n    key: \"setColumns\",\n    value: function setColumns() {\n      this.setState({\n        columns: this.state.defaultColumns\n      });\n    }\n  }, {\n    key: \"setEntityType\",\n    value: function setEntityType() {\n      var _this5 = this;\n\n      var _this$props = this.props,\n          t = _this$props.t,\n          i18n = _this$props.i18n;\n      return new Promise(function (resolve, reject) {\n        var entityType = _this5.props.match.params.type;\n\n        if (entityType === constant.SOURCE_CUSTOMER_ENTITY_TYPE) {\n          _this5.setState({\n            queryEntity: 'SOURCE_CUSTOMER',\n            titles: {\n              cardTitle: t(\"SOURCE_CUSTOMER\"),\n              addCustomerTitle: t('ADD_SOURCE_CUSTOMER'),\n              editCustomerTitle: t('EDIT_SOURCE_CUSTOMER'),\n              addCustomerUserTitle: t('SOURCE_CUSTOMER_USERS'),\n              addCustomerAddressTitle: t('SOURCE_CUSTOMER_ADDRESSES')\n            }\n          });\n\n          _this5.setColumns();\n\n          resolve();\n        } else if (entityType === constant.MANAGE_USER_ENTITY_TYPE) {\n          _this5.setState({\n            queryEntity: 'CONTROL_TOWER',\n            titles: {\n              cardTitle: t(\"MANAGE_USER\"),\n              addCustomerTitle: t('ADD_USER'),\n              editCustomerTitle: t('EDIT_USER'),\n              addCustomerUserTitle: t('ADD_USER_USERS')\n            }\n          });\n\n          _this5.setColumns();\n\n          resolve();\n        }\n      });\n    }\n  }, {\n    key: \"getAdditionTransporterValues\",\n    value: function getAdditionTransporterValues(item, forValue) {\n      if (this.state.entitiesAdditionalList.filter(function (a) {\n        return a.entity_id === item.entity_id;\n      }).length) {\n        return this.state.entitiesAdditionalList.filter(function (a) {\n          return a.entity_id === item.entity_id;\n        })[0].additional_attributes[forValue];\n      }\n\n      return '';\n    }\n  }, {\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate(props) {\n      var _this6 = this;\n\n      if (props.match.params['type'] !== this.props.match.params['type']) {\n        this.setEntityType().then(function (response) {\n          _this6.getSourceCustomerEntity();\n        });\n      }\n    }\n  }, {\n    key: \"searchSourceCustomerEntity\",\n    value: function searchSourceCustomerEntity(event) {\n      var _this7 = this;\n\n      var searchParam = {\n        \"type\": this.state.typeFilter ? [this.state.typeFilter] : this.state.queryEntity === constant.TRANSPORTER ? this.state.transportersOption : [this.state.queryEntity],\n        \"search_params\": {\n          \"search_text\": event.target.value,\n          \"fields\": [\"name\"]\n        }\n      };\n      httptransfer.getSourceCustomerEntity(searchParam).then(function (response) {\n        _this7.getAdditionalAttributesList(response);\n      });\n    }\n  }, {\n    key: \"getSourceCustomerEntity\",\n    value: function getSourceCustomerEntity(column, sortDirection) {\n      var _this8 = this;\n\n      var searchParam = {\n        \"type\": this.state.typeFilter ? [this.state.typeFilter] : this.state.queryEntity === constant.TRANSPORTER ? this.state.transportersOption : [this.state.queryEntity],\n        \"sorting_details\": [{\n          \"sort_by\": 'name',\n          \"sort_order\": 'ASC'\n        }]\n      };\n\n      if (column !== undefined) {\n        searchParam[\"sorting_details\"][\"sort_by\"] = column.name.toLowerCase();\n        searchParam[\"sorting_details\"][\"sort_order\"] = sortDirection.toUpperCase();\n      }\n\n      httptransfer.getSourceCustomerEntity(searchParam).then(function (response) {\n        _this8.getAdditionalAttributesList(response);\n      });\n    }\n  }, {\n    key: \"getAdditionalAttributesList\",\n    value: function getAdditionalAttributesList(entites) {\n      var _this9 = this;\n\n      if (entites.status === 200) {\n        if (entites.data.hasOwnProperty('entity_details')) {\n          var entityIds = entites.data.entity_details.map(function (element) {\n            return element.entity_id;\n          });\n          var params = {\n            entity_id: entityIds\n          };\n          httptransfer.queryEntityAdditionalAttributes(params).then(function (response) {\n            if (response.status === 200) {\n              if (response.data.entities.length) {\n                _this9.setState({\n                  entitiesAdditionalList: response.data.entities\n                });\n              }\n\n              _this9.setState({\n                entities: entites['data']['entity_details']\n              });\n            }\n          });\n        } else {\n          this.setState({\n            entities: []\n          });\n        }\n      }\n    }\n  }, {\n    key: \"togglePopover\",\n    value: function togglePopover() {\n      this.setState({\n        popoverOpen: !this.state.popoverOpen\n      });\n    }\n  }, {\n    key: \"setTypeFilter\",\n    value: function setTypeFilter(event) {\n      event.persist();\n      this.setState({\n        typeFilter: event.target.value\n      });\n    }\n  }, {\n    key: \"resetTypeFilter\",\n    value: function resetTypeFilter() {\n      this.setState({\n        typeFilter: '',\n        popoverOpen: false\n      });\n    }\n  }, {\n    key: \"applyTransporterFilter\",\n    value: function applyTransporterFilter() {\n      this.getSourceCustomerEntity();\n      this.resetTypeFilter();\n    }\n  }, {\n    key: \"resetTransporterFilter\",\n    value: function resetTransporterFilter() {\n      this.resetTypeFilter();\n      this.getSourceCustomerEntity();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var t = this.props.t;\n      var customStyles = {\n        rows: {\n          style: {\n            minHeight: '50px' //the row height\n\n          }\n        },\n        headCells: {\n          style: {\n            fontWeight: 600,\n            paddingLeft: '8px',\n            //the cell padding for head cells\n            paddingRight: '8px',\n            fontSize: '14px'\n          }\n        },\n        cells: {\n          style: {\n            paddingLeft: '8px',\n            //the cell padding for data cells\n            paddingRight: '8px',\n            fontSize: '13px'\n          }\n        }\n      };\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: \"mt-4\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 378,\n          columnNumber: 7\n        }\n      }, /*#__PURE__*/React.createElement(ToastContainer, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 379,\n          columnNumber: 9\n        }\n      }), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"col-sm-12 col-12\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 380,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"card\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 381,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"card-header font-weight-bold\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 382,\n          columnNumber: 13\n        }\n      }, this.state.titles.cardTitle), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"card-body\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 385,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"row\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 386,\n          columnNumber: 15\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"col-xs-6 col-sm-6 col-md-6 col-lg-8 mb-1\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 387,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(Input, {\n        type: \"text\",\n        name: \"search\",\n        onInput: this.searchSourceCustomerEntity.bind(this),\n        className: \"search-bar\",\n        id: \"search\",\n        placeholder: t(\"SEARCH\"),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 388,\n          columnNumber: 19\n        }\n      })), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"col-xs-4 col-sm-4 col-md-4 col-lg-3\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 390,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(\"button\", {\n        className: \"btn btn-info pull-right\",\n        onClick: this.togglePopup.bind(this),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 391,\n          columnNumber: 19\n        }\n      }, /*#__PURE__*/React.createElement(FontAwesomeIcon, {\n        icon: faPlus,\n        size: \"xs\",\n        className: \"mr-1\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 392,\n          columnNumber: 21\n        }\n      }), \" \", this.state.titles.addCustomerTitle, \" \"), this.state.showPopup ? /*#__PURE__*/React.createElement(AddSourceCoustomerModal, {\n        titles: this.state.titles,\n        queryEntity: this.state.queryEntity,\n        showPopup: this.state.showPopup,\n        closePopup: this.togglePopup.bind(this),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 395,\n          columnNumber: 23\n        }\n      }) : null)), this.state.entities.length ? /*#__PURE__*/React.createElement(DataTable, {\n        onSort: this.getSourceCustomerEntity.bind(this),\n        sortServer: true,\n        title: \"\",\n        columns: this.state.columns,\n        keyField: \"entity_id\",\n        data: this.state.entities,\n        customStyles: customStyles,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 406,\n          columnNumber: 19\n        }\n      }) : ''))), /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 420,\n          columnNumber: 9\n        }\n      }, this.state.showUserListModal ? /*#__PURE__*/React.createElement(UserListModal, {\n        key: \"userListModal\",\n        titles: this.state.titles,\n        userData: this.state.userData,\n        toggleUserListModal: this.toggleUserListModal.bind(this),\n        showUserListModal: this.state.showUserListModal,\n        entityId: this.state.entityId,\n        entityType: this.state.queryEntity,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 422,\n          columnNumber: 13\n        }\n      }) : null, this.state.showAddressEditModal ? /*#__PURE__*/React.createElement(EditSourceCoustomerModal, {\n        key: \"sourceCustomerEditModal\",\n        titles: this.state.titles,\n        queryEntity: this.state.queryEntity,\n        showAddressEditModal: this.state.showAddressEditModal,\n        toggleSourceEditModal: this.toggleSourceEditModal.bind(this),\n        sourceCustomerDetails: this.state.sourceCustomerDetails,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 434,\n          columnNumber: 15\n        }\n      }) : null));\n    }\n  }]);\n\n  return QueryCustomer;\n}(Component);\n\n;\nQueryCustomer.propTypes = {\n  classes: PropTypes.object.isRequired\n};\nexport default withTranslation(\"translations\")(QueryCustomer);","map":{"version":3,"sources":["/home/divyas/mindfire-assignment/src/views/components/SourceCustomer/queryCustomer.js"],"names":["React","Component","Input","HttpTransferService","UserListModal","Modal","ModalHeader","ModalBody","AddSourceCoustomer","EditSourceCoustomer","DataTable","FontAwesomeIcon","faPlus","constant","withTranslation","PropTypes","ToastContainer","httptransfer","AddSourceCoustomerModal","closePopup","props","closebtn","showPopup","titles","addCustomerTitle","queryEntity","EditSourceCoustomerModal","toggleSourceEditModal","showAddressEditModal","editCustomerTitle","sourceCustomerDetails","QueryCustomer","state","entities","userData","cardTitle","addCustomerUserTitle","addCustomerAddressTitle","transporterDetails","showPopupAddress","showUserListModal","showAddressListModal","sourceEntityId","fadeAddress","showTransporterRouteModal","showVehicleTypeModal","activeTransporter","fade","popoverOpen","typeFilter","transportersOption","columns","entitiesAdditionalList","defaultColumns","name","t","selector","sortable","cell","row","city_details","city_name","state_details","state_name","toggleUserListModal","bind","getAdditionTransporterValues","toggleTransporterRouteModal","resetTypeFilter","setColumns","getAdditionalAttributesList","setState","sourceCustomer","getSourceCustomerEntity","modal","setEntityType","then","response","i18n","Promise","resolve","reject","entityType","match","params","type","SOURCE_CUSTOMER_ENTITY_TYPE","MANAGE_USER_ENTITY_TYPE","item","forValue","filter","a","entity_id","length","additional_attributes","event","searchParam","TRANSPORTER","target","value","column","sortDirection","undefined","toLowerCase","toUpperCase","entites","status","data","hasOwnProperty","entityIds","entity_details","map","element","queryEntityAdditionalAttributes","persist","customStyles","rows","style","minHeight","headCells","fontWeight","paddingLeft","paddingRight","fontSize","cells","searchSourceCustomerEntity","togglePopup","entityId","propTypes","classes","object","isRequired"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport { Input } from 'reactstrap';\nimport HttpTransferService from \"../../../utils/httptransfer\";\nimport '../../../views/modal.css';\nimport '../../../scss/_custom.scss';\nimport UserListModal from './User/UserListModal';\nimport { Modal, ModalHeader, ModalBody} from 'reactstrap';\nimport AddSourceCoustomer from \"./addSourceCustomer\";\nimport EditSourceCoustomer from \"./editSourceCustomer\";\nimport DataTable from 'react-data-table-component';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faPlus } from '@fortawesome/free-solid-svg-icons';\nimport constant from \"../../../constants/constant\";\nimport {  withTranslation } from \"react-i18next\";\nimport PropTypes from \"prop-types\";\nimport { ToastContainer } from \"react-toastify\";\nimport \"react-toastify/dist/ReactToastify.css\";\n\n\nconst httptransfer = new HttpTransferService();\n\nclass AddSourceCoustomerModal extends React.Component {\n  closePopup = () => {\n    this.props.closePopup();\n  }\n  render() {\n    const closebtn = <button className=\"close\" onClick={this.closePopup}>&times;</button>;\n    return (\n      <div>\n        <Modal\n          size=\"lg\"\n          isOpen={this.props.showPopup}\n          toggle={this.props.closePopup}\n        >\n          <ModalHeader toggle={this.props.closePopup} close={closebtn}>{this.props.titles.addCustomerTitle}</ModalHeader>\n          <ModalBody>\n          <ToastContainer/>\n            <AddSourceCoustomer type={this.props.queryEntity} closeModal={this.closePopup} />\n          </ModalBody>\n        </Modal>\n      </div>\n    );\n  }\n}\n\nclass EditSourceCoustomerModal extends React.Component {\n  closePopup = () => {\n    this.props.toggleSourceEditModal();\n  }\n  render() {\n    const closebtn = <button className=\"close\" onClick={this.closePopup}>&times;</button>;\n    return (\n      <div>\n        <Modal\n          size=\"lg\"\n          isOpen={this.props.showAddressEditModal}\n          toggle={this.closePopup}\n        >\n          <ModalHeader toggle={this.props.toggleSourceEditModal} close={closebtn}>{this.props.titles.editCustomerTitle}</ModalHeader>\n          <ModalBody>\n            <EditSourceCoustomer type={this.props.queryEntity} sourceCustomerDetails={this.props.sourceCustomerDetails} closeModal={this.closePopup} />\n          </ModalBody>\n        </Modal>\n      </div>\n    );\n  }\n}\nclass QueryCustomer extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      queryEntity: '',\n      entities: [],\n      userData: {},\n      titles: {\n        cardTitle: '',\n        addCustomerTitle: '',\n        editCustomerTitle: '',\n        addCustomerUserTitle: '',\n        addCustomerAddressTitle: '',\n      },\n      transporterDetails : {},\n      sourceCustomerDetails: {},\n      showAddressEditModal: false,\n      showPopupAddress: false,\n      showPopup: false,\n      showUserListModal: false,\n      showAddressListModal: false,\n      sourceEntityId: '',\n      fadeAddress: false,\n      showTransporterRouteModal: false,\n      showVehicleTypeModal:false,\n      activeTransporter: '',\n      fade: true,\n      popoverOpen: false,\n      typeFilter: false,\n      transportersOption: [],\n      columns: [],\n      entitiesAdditionalList: [],\n      defaultColumns: [\n        {\n          name: props.t(\"NAME\"),\n          selector: 'name',\n          sortable: true\n        },\n        {\n          name: props.t(\"CITY\"),\n          selector: 'city',\n          sortable: false,\n          cell: row => row.city_details.city_name+ ', ' + row.state_details.state_name\n        },\n        {\n          name: props.t(\"STATUS\"),\n          selector: 'status',\n          sortable: false,\n        },\n        {\n          name: props.t(\"USER_ACTIONS\"),\n          cell: row => <div>             \n                <i className=\"fa fa-users mr-2\" aria-hidden=\"true\" title=\"Users\" onClick={this.toggleUserListModal.bind(this,row)}></i>\n                <i className=\"fa fa-edit mr-2\" aria-hidden=\"true\"  onClick={this.toggleSourceEditModal.bind(this, row)} title=\"Edit\"></i>            \n            </div>\n        }\n      ]\n    };\n    this.getAdditionTransporterValues = this.getAdditionTransporterValues.bind(this)\n    this.toggleUserListModal = this.toggleUserListModal.bind(this);\n    this.toggleTransporterRouteModal = this.toggleTransporterRouteModal.bind(this)\n    this.resetTypeFilter = this.resetTypeFilter.bind(this)\n    this.setColumns = this.setColumns.bind(this)\n    this.getAdditionalAttributesList = this.getAdditionalAttributesList.bind(this)\n  }\n \n\n  toggleVehicleTypeModal (row) {\n    this.setState({\n      showVehicleTypeModal: !this.state.showVehicleTypeModal,\n      transporterDetails : row\n      // activeTransporter: row\n    })\n  }\n\n  toggleAddressModal(userData) {\n    this.setState({\n      showAddressListModal: !this.state.showAddressListModal,\n      fadeAddress: !this.state.fadeAddress,\n      userData: userData\n\n    })\n  }\n  toggleTransporterRouteModal(row) {\n    this.setState({\n      showTransporterRouteModal: !this.state.showTransporterRouteModal,\n      activeTransporter: row\n    })\n  }\n\n  toggleSourceEditModal(sourceCustomer) {\n    if (this.state.showAddressEditModal) {\n      this.getSourceCustomerEntity()\n    }\n    this.setState({\n      showAddressEditModal: !this.state.showAddressEditModal,\n      fade: !this.state.fade,\n      sourceCustomerDetails: sourceCustomer\n    })\n\n  }\n  closePopUp() {\n    this.setState({\n      modal: this.state.modal,\n      fade: !this.state.fade\n    })\n\n  }\n\n  toggleUserListModal(userData) {\n    this.setState(\n      {\n        showUserListModal: !this.state.showUserListModal,\n        fade: !this.state.fade,\n        userData: userData\n      }\n    );\n  }\n\n  togglePopup() {\n    this.setState({\n      showPopup: !this.state.showPopup,\n      fade: !this.state.fade,\n    });\n    this.getSourceCustomerEntity()\n  }\n\n  componentDidMount() {\n    this.setEntityType()\n      .then(response => {\n        this.getSourceCustomerEntity();\n      })\n      \n  }\n  setColumns () {\n    this.setState({\n      columns: this.state.defaultColumns\n    })\n  }\n\n  setEntityType() {\n    const { t, i18n } = this.props;\n    return new Promise((resolve, reject) => {\n      let entityType = this.props.match.params.type;\n      if (entityType === constant.SOURCE_CUSTOMER_ENTITY_TYPE) {\n        this.setState({\n          queryEntity: 'SOURCE_CUSTOMER',\n          titles: {\n            cardTitle: t(\"SOURCE_CUSTOMER\"),\n            addCustomerTitle:t('ADD_SOURCE_CUSTOMER'),\n            editCustomerTitle: t('EDIT_SOURCE_CUSTOMER'),\n            addCustomerUserTitle:t('SOURCE_CUSTOMER_USERS'),\n            addCustomerAddressTitle:t('SOURCE_CUSTOMER_ADDRESSES')\n          }\n        })\n        this.setColumns()\n        resolve()\n      }\n    else if (entityType === constant.MANAGE_USER_ENTITY_TYPE) {\n        this.setState({\n          queryEntity: 'CONTROL_TOWER',\n          titles: {\n            cardTitle: t(\"MANAGE_USER\"),\n            addCustomerTitle: t('ADD_USER'),\n            editCustomerTitle: t('EDIT_USER'),\n            addCustomerUserTitle: t('ADD_USER_USERS'),\n          }\n        })\n        this.setColumns()\n        resolve()\n      }\n    })\n  }\n  getAdditionTransporterValues (item, forValue) {\n    if (this.state.entitiesAdditionalList.filter(a => a.entity_id === item.entity_id).length) {\n      return this.state.entitiesAdditionalList.filter(a => a.entity_id === item.entity_id)[0].additional_attributes[forValue]\n    }\n    return ''\n  }\n\n  componentDidUpdate(props) {\n\n    if (props.match.params['type'] !== this.props.match.params['type']) {\n      this.setEntityType()\n        .then(response => {\n          this.getSourceCustomerEntity();\n        })\n    }\n  }\n \n\n  searchSourceCustomerEntity(event) {\n    var searchParam = {\n      \"type\": this.state.typeFilter ? [this.state.typeFilter] : this.state.queryEntity === constant.TRANSPORTER ? this.state.transportersOption : [this.state.queryEntity],\n      \"search_params\": {\n        \"search_text\": event.target.value,\n        \"fields\": [\"name\"]\n      }\n    }\n\n    httptransfer.getSourceCustomerEntity(searchParam)\n      .then(response => {\n        this.getAdditionalAttributesList(response)\n      });\n  }\n\n  getSourceCustomerEntity(column, sortDirection) {\n\n    var searchParam = {\n      \"type\": this.state.typeFilter ? [this.state.typeFilter] : this.state.queryEntity === constant.TRANSPORTER ? this.state.transportersOption : [this.state.queryEntity],\n      \"sorting_details\": [\n        {\n          \"sort_by\": 'name',\n          \"sort_order\": 'ASC'\n        }\n      ]\n    }\n\n    if (column !== undefined) {\n      searchParam[\"sorting_details\"][\"sort_by\"] = column.name.toLowerCase()\n      searchParam[\"sorting_details\"][\"sort_order\"] = sortDirection.toUpperCase()\n\n    }\n    httptransfer.getSourceCustomerEntity(searchParam)\n      .then(response => {\n        this.getAdditionalAttributesList(response)\n      });\n  }\n\n  getAdditionalAttributesList (entites) {\n    if (entites.status === 200) {\n      if (entites.data.hasOwnProperty('entity_details')) {\n        let entityIds = entites.data.entity_details.map(element => {return element.entity_id})\n        var params = {\n          entity_id: entityIds\n        }\n        httptransfer.queryEntityAdditionalAttributes(params)\n        .then(response => {\n          if (response.status === 200) {\n            if (response.data.entities.length) {\n              this.setState({\n                entitiesAdditionalList: response.data.entities\n              })\n            }\n            this.setState({\n              entities: entites['data']['entity_details']\n            })\n          }\n        })\n      } else {\n        this.setState({\n          entities: []\n        })\n      }\n    }\n  }\n\n  togglePopover() {\n    this.setState({\n      popoverOpen: !this.state.popoverOpen\n    })\n  }\n  setTypeFilter(event) {\n    event.persist()\n    this.setState({\n      typeFilter: event.target.value\n    })\n  }\n  resetTypeFilter() {\n    this.setState({\n      typeFilter: '',\n      popoverOpen: false\n    })\n  }\n  applyTransporterFilter() {\n    this.getSourceCustomerEntity()\n    this.resetTypeFilter()\n\n  }\n  resetTransporterFilter() {\n    this.resetTypeFilter()\n    this.getSourceCustomerEntity()\n  }\n\n\n  render() {\n    const {t} = this.props;\n    const customStyles = {\n      rows: {\n        style: {\n          minHeight: '50px', //the row height\n        }\n      },\n      headCells: {\n        style: {\n          fontWeight: 600,\n          paddingLeft: '8px', //the cell padding for head cells\n          paddingRight: '8px',\n          fontSize: '14px',\n        },\n      },\n      cells: {\n        style: {\n          paddingLeft: '8px', //the cell padding for data cells\n          paddingRight: '8px',\n          fontSize: '13px',\n        },\n      },\n    };\n    return (\n      <div className=\"mt-4\">\n        <ToastContainer/>\n        <div className=\"col-sm-12 col-12\">\n          <div className=\"card\">\n            <div className=\"card-header font-weight-bold\">\n              {this.state.titles.cardTitle}\n            </div>\n            <div className=\"card-body\">\n              <div className=\"row\">\n                <div className=\"col-xs-6 col-sm-6 col-md-6 col-lg-8 mb-1\">\n                  <Input type=\"text\" name=\"search\" onInput={this.searchSourceCustomerEntity.bind(this)} className=\"search-bar\" id=\"search\" placeholder={t(\"SEARCH\")} />\n                </div>\n                <div className=\"col-xs-4 col-sm-4 col-md-4 col-lg-3\">\n                  <button className=\"btn btn-info pull-right\" onClick={this.togglePopup.bind(this)} >\n                    <FontAwesomeIcon icon={faPlus} size=\"xs\" className=\"mr-1\" /> {this.state.titles.addCustomerTitle} </button>\n                  {\n                    this.state.showPopup ?\n                      <AddSourceCoustomerModal\n                        titles={this.state.titles}\n                        queryEntity={this.state.queryEntity}\n                        showPopup={this.state.showPopup}\n                        closePopup={this.togglePopup.bind(this)} />\n                      : null\n                  }\n                </div>\n              </div>\n              {\n                this.state.entities.length ?\n                  <DataTable\n                    onSort={this.getSourceCustomerEntity.bind(this)}\n                    sortServer={true}\n                    title=\"\"\n                    columns={this.state.columns}\n                    keyField=\"entity_id\"\n                    data={this.state.entities}\n                    customStyles={customStyles}\n                  />\n                  : ''\n              }\n            </div>\n          </div>\n        </div>\n        <div>\n          {this.state.showUserListModal ?\n            <UserListModal key=\"userListModal\"\n              titles={this.state.titles}\n              userData={this.state.userData}\n              toggleUserListModal={this.toggleUserListModal.bind(this)}\n              showUserListModal={this.state.showUserListModal}\n              entityId={this.state.entityId}\n              entityType={this.state.queryEntity}\n            />\n            : null\n          }\n          {\n            this.state.showAddressEditModal ?\n              <EditSourceCoustomerModal key=\"sourceCustomerEditModal\"\n                titles={this.state.titles}\n                queryEntity={this.state.queryEntity}\n                showAddressEditModal={this.state.showAddressEditModal}\n                toggleSourceEditModal={this.toggleSourceEditModal.bind(this)}\n                sourceCustomerDetails={this.state.sourceCustomerDetails}\n              />\n              : null\n          }\n        </div>\n\n      </div>\n\n\n    );\n  }\n};\n\nQueryCustomer.propTypes = {\n  classes: PropTypes.object.isRequired\n};\n\nexport default (withTranslation(\"translations\")(QueryCustomer));"]},"metadata":{},"sourceType":"module"}