{"ast":null,"code":"import _classCallCheck from \"/home/divyas/mindfire-assignment-react/react/reactbaserepo/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/divyas/mindfire-assignment-react/react/reactbaserepo/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport axios from \"axios\";\nimport constants from \"../constants/constant\";\nimport toastService from \"./toastnotification\";\nvar toastservice = new toastService();\n\nvar AuthenticationService = /*#__PURE__*/function () {\n  function AuthenticationService() {\n    _classCallCheck(this, AuthenticationService);\n\n    this.baseUrl = constants.BASE_URL;\n    this.forgotPasswordUrl = constants.FORGOT_PASSWORD;\n    this.sessionsApi = constants.SESSIONS_API_URL;\n  }\n\n  _createClass(AuthenticationService, [{\n    key: \"getUserInfo\",\n    value: function getUserInfo() {\n      return localStorage.getItem('user_info');\n    }\n  }, {\n    key: \"loginRequest\",\n    value: function loginRequest(username, password) {\n      var url = 'http://localhost:3001/api/v1/users';\n      var loginBody = {};\n      var clientid = this.createJavascriptClientId();\n      loginBody[\"client_id\"] = clientid;\n      localStorage.setItem(\"client_id\", clientid);\n      return this.postRequest(loginBody, url, username, password);\n    }\n  }, {\n    key: \"forgotPassword\",\n    value: function forgotPassword(email) {\n      var url = this.baseUrl + this.forgotPasswordUrl;\n      var forgotPasswordInputJson = {};\n      forgotPasswordInputJson[\"email_id\"] = email;\n      return this.forgotPasswordRequest(url, forgotPasswordInputJson);\n    }\n  }, {\n    key: \"genrateOTP\",\n    value: function genrateOTP(json) {\n      var url = this.baseUrl + constants.GENRATE_OTP;\n      return this.postRequest(json, url);\n    }\n  }, {\n    key: \"fcmTokenRequest\",\n    value: function fcmTokenRequest(fcmToken) {\n      var userId = localStorage.getItem(\"user_info\");\n      var user_id = JSON.parse(userId).user_id;\n      var entity_id = localStorage.getItem(\"entity_id\");\n      var inputJson = {};\n      var url = constants.BASE_URL + constants.API_ENTITY + entity_id + constants.CREATE_USER_QUERY + '/' + user_id + constants.FCMTOKEN;\n      inputJson[\"fcm_token\"] = fcmToken;\n      inputJson[\"client_id\"] = this.createJavascriptClientId();\n      return this.postFcmTokenRequest(url, inputJson);\n    }\n  }, {\n    key: \"postFcmTokenRequest\",\n    value: function postFcmTokenRequest(url, loginBody) {\n      return axios({\n        method: \"post\",\n        url: url,\n        data: loginBody,\n        headers: {\n          \"Content-Type\": \"application/json\",\n          \"x-auth-token\": localStorage.getItem(\"token\")\n        }\n      }).then(function (response) {\n        return response;\n      }).catch(function (error) {\n        return error.response.data;\n      });\n    }\n  }, {\n    key: \"postRequest\",\n    value: function postRequest(body, url, username, password) {\n      var base64 = btoa(username + \":\" + password);\n      return axios({\n        method: \"post\",\n        url: url,\n        data: body,\n        headers: {\n          \"Content-Type\": \"application/json\",\n          Authorization: \"Basic \" + base64\n        }\n      }).then(function (response) {\n        toastservice.success(response.data.message);\n        return response;\n      }).catch(function (error) {\n        toastservice.error(error.response.data.message);\n        return error.response.data;\n      });\n    }\n  }, {\n    key: \"forgotPasswordRequest\",\n    value: function forgotPasswordRequest(url, loginBody) {\n      return axios({\n        method: \"post\",\n        url: url,\n        data: loginBody,\n        headers: {\n          \"Content-Type\": \"application/json\"\n        }\n      }).then(function (response) {\n        toastservice.success(response.data.message);\n        return response;\n      }).catch(function (error) {\n        toastservice.error(error.response.data.message);\n        return error.response.data;\n      });\n    }\n  }, {\n    key: \"createJavascriptClientId\",\n    value: function createJavascriptClientId() {\n      return \"xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx\".replace(/[xy]/g, function (c) {\n        var r = Math.random() * 16 | 0,\n            v = c === \"x\" ? r : r & 0x3 | 0x8;\n        return v.toString(16);\n      });\n    }\n  }]);\n\n  return AuthenticationService;\n}();\n\nexport { AuthenticationService as default };","map":{"version":3,"sources":["/home/divyas/mindfire-assignment-react/react/reactbaserepo/src/utils/authentication.js"],"names":["axios","constants","toastService","toastservice","AuthenticationService","baseUrl","BASE_URL","forgotPasswordUrl","FORGOT_PASSWORD","sessionsApi","SESSIONS_API_URL","localStorage","getItem","username","password","url","loginBody","clientid","createJavascriptClientId","setItem","postRequest","email","forgotPasswordInputJson","forgotPasswordRequest","json","GENRATE_OTP","fcmToken","userId","user_id","JSON","parse","entity_id","inputJson","API_ENTITY","CREATE_USER_QUERY","FCMTOKEN","postFcmTokenRequest","method","data","headers","then","response","catch","error","body","base64","btoa","Authorization","success","message","replace","c","r","Math","random","v","toString"],"mappings":"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","sourcesContent":["import axios from \"axios\";\nimport constants from \"../constants/constant\";\nimport toastService from \"./toastnotification\";\nconst toastservice = new toastService();\n\nexport default class AuthenticationService {\n  baseUrl = constants.BASE_URL;\n  forgotPasswordUrl = constants.FORGOT_PASSWORD;\n  sessionsApi = constants.SESSIONS_API_URL;\n\n    \n  getUserInfo () {\n    return localStorage.getItem('user_info')\n  }\n\n  loginRequest(username, password) {\n    var url = 'http://localhost:3001/api/v1/users';\n    var loginBody = {};\n    var clientid = this.createJavascriptClientId();\n    loginBody[\"client_id\"] = clientid;\n    localStorage.setItem(\"client_id\", clientid);\n    return this.postRequest(loginBody, url, username, password);\n  }\n  forgotPassword(email) {\n    var url = this.baseUrl + this.forgotPasswordUrl;\n    var forgotPasswordInputJson = {};\n    forgotPasswordInputJson[\"email_id\"] = email;\n    return this.forgotPasswordRequest(url, forgotPasswordInputJson);\n  }\n  genrateOTP(json){\n    var url = this.baseUrl + constants.GENRATE_OTP;\n    return this.postRequest(json,url);\n  }\n\n  fcmTokenRequest(fcmToken){\n    var userId =localStorage.getItem(\"user_info\")\n    var user_id = JSON.parse(userId).user_id\n    var entity_id = localStorage.getItem(\"entity_id\")\n    var inputJson = {};\n    var url = constants.BASE_URL+constants.API_ENTITY+entity_id+constants.CREATE_USER_QUERY+'/'+user_id+constants.FCMTOKEN\n    inputJson[\"fcm_token\"] = fcmToken;\n    inputJson[\"client_id\"] = this.createJavascriptClientId();\n    return this.postFcmTokenRequest(url, inputJson);\n  }\n\n  postFcmTokenRequest(url,loginBody){\n      return axios({\n      method: \"post\",\n      url: url,\n      data: loginBody,\n      headers: {\n        \"Content-Type\": \"application/json\",\n        \"x-auth-token\" : localStorage.getItem(\"token\")\n      }\n    })\n      .then(function(response) {\n        return response;\n      })\n      .catch(function(error) {\n        return error.response.data;\n      });\n  }\n\n  postRequest(body, url, username, password) {\n    var base64 = btoa(username + \":\" + password);\n    return axios({\n      method: \"post\",\n      url: url,\n      data: body,\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Authorization: \"Basic \" + base64\n      }\n    })\n      .then(function(response) {\n        toastservice.success(response.data.message);\n        return response;\n      })\n      .catch(function(error) {\n        toastservice.error(error.response.data.message);\n        return error.response.data;\n      });\n  }\n\n forgotPasswordRequest(url, loginBody) {\n    return axios({\n      method: \"post\",\n      url: url,\n      data: loginBody,\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n    })\n      .then(function(response) {\n        toastservice.success(response.data.message);\n        return response;\n      })\n      .catch(function (error) {\n        toastservice.error(error.response.data.message);\n        return error.response.data;\n      });\n  }\n\n  createJavascriptClientId() {\n    return \"xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx\".replace(/[xy]/g, function(c) {\n      var r = (Math.random() * 16) | 0,\n        v = c === \"x\" ? r : (r & 0x3) | 0x8;\n      return v.toString(16);\n    });\n  }\n}\n"]},"metadata":{},"sourceType":"module"}