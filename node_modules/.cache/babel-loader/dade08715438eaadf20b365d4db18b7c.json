{"ast":null,"code":"import _classCallCheck from \"/home/divyas/mindfire-assignment/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/divyas/mindfire-assignment/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _assertThisInitialized from \"/home/divyas/mindfire-assignment/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"/home/divyas/mindfire-assignment/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _createSuper from \"/home/divyas/mindfire-assignment/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";\nvar _jsxFileName = \"/home/divyas/mindfire-assignment/src/views/components/SourceCustomer/User/addUser.js\";\nimport React, { Component } from 'react';\nimport { Label, Input, InputGroupAddon, InputGroup, Button } from 'reactstrap';\nimport HttpTransferService from \"../../../../utils/httptransfer\";\nimport \"react-toastify/dist/ReactToastify.css\";\nimport toastService from \"../../../../utils/toastnotification\";\nimport { ToastContainer } from \"react-toastify\";\nimport { Multiselect } from 'multiselect-react-dropdown';\nimport constants from '../../../../constants/constant';\nimport constant from '../../../../constants/constant';\nimport SimpleReactValidator from 'simple-react-validator';\nimport validate from \"../../../../utils/validations\";\nimport PhoneInput from 'react-phone-input-2';\nimport 'react-phone-input-2/lib/style.css';\nimport { withTranslation } from \"react-i18next\";\nimport PropTypes from \"prop-types\";\nvar httptransfer = new HttpTransferService();\nvar toastservice = new toastService();\n\nvar AddUser = /*#__PURE__*/function (_Component) {\n  _inherits(AddUser, _Component);\n\n  var _super = _createSuper(AddUser);\n\n  function AddUser(props) {\n    var _this;\n\n    _classCallCheck(this, AddUser);\n\n    _this = _super.call(this, props);\n    _this.validator = new SimpleReactValidator({\n      autoForceUpdate: _assertThisInitialized(_this)\n    });\n    _this.handleInputChange = _this.handleInputChange.bind(_assertThisInitialized(_this));\n    _this.initialState = {\n      first_name: \"\",\n      last_name: \"\",\n      mobile: \"\",\n      email: \"\",\n      role: [],\n      prefered_language: \"English\",\n      generate_password: false,\n      password: \"\",\n      userTitles: [],\n      userTitle: '',\n      landlineNumber: '',\n      showPassword: false,\n      userTitleDisplay: 'title',\n      apiLoading: false\n    };\n    _this.state = _this.initialState;\n    _this.getUserTitle = _this.getUserTitle.bind(_assertThisInitialized(_this));\n    return _this;\n  }\n\n  _createClass(AddUser, [{\n    key: \"handleInputChange\",\n    value: function handleInputChange(e) {\n      var id = e.target.id;\n\n      switch (id) {\n        case 'first_name':\n          this.setState({\n            first_name: e.target.value\n          });\n          break;\n\n        case 'last_name':\n          this.setState({\n            last_name: e.target.value\n          });\n          break;\n\n        case 'email':\n          this.setState({\n            email: e.target.value\n          });\n          break;\n\n        case 'user_password':\n          this.setState({\n            password: e.target.value\n          });\n          break;\n\n        case 'landlineNumber':\n          this.setState({\n            landlineNumber: e.target.value\n          });\n          break;\n\n        default:\n          break;\n      }\n    }\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.getUserTitle();\n    }\n  }, {\n    key: \"getUserTitle\",\n    value: function getUserTitle() {\n      var _this2 = this;\n\n      httptransfer.getUserTitle(constant.ENTITY_ID).then(function (response) {\n        if (response.status === 200) {\n          _this2.setState({\n            userTitles: response.data.titles\n          });\n        }\n      });\n    }\n  }, {\n    key: \"addUser\",\n    value: function addUser() {\n      var _this3 = this;\n\n      var entity_id = this.props.entityId;\n      var userJson = {};\n      this.setState({\n        apiLoading: true\n      });\n      userJson = this.createUserJson();\n      httptransfer.createUserQuery(userJson, entity_id).then(function (response) {\n        if (response.status === 200) {\n          _this3.addUserAdditionalAttributes(response.data.user_id);\n        } else {\n          _this3.setState({\n            apiLoading: false\n          });\n        }\n      });\n    }\n  }, {\n    key: \"addUserAdditionalAttributes\",\n    value: function addUserAdditionalAttributes(userId) {\n      var _this4 = this;\n\n      var params = {\n        landline_number: this.state.landlineNumber\n      };\n      httptransfer.updateUserAdditionalAttributes(params, constant.ENTITY_ID, userId).then(function (response) {\n        if (response.status === 200) {\n          _this4.setState({\n            apiLoading: false\n          });\n\n          toastservice.success(constant.USER_ADDED_MESSAGE);\n\n          _this4.props.togglePopup();\n        }\n      });\n    }\n  }, {\n    key: \"createUserJson\",\n    value: function createUserJson() {\n      var userJson = {};\n      userJson['first_name'] = validate.capitalizeText(this.state.first_name);\n      userJson['last_name'] = validate.capitalizeText(this.state.last_name);\n      userJson['mobile'] = this.state.mobile.slice(-10);\n      userJson['country_code'] = constant.plus + this.state.mobile.replace(userJson['mobile'], '');\n      userJson['email'] = this.state.email;\n      userJson['role'] = this.state.role;\n      userJson['password_details'] = {\n        generate_password: false,\n        password: this.state.password\n      };\n      userJson['prefered_language'] = this.state.prefered_language;\n      userJson['user_title_id'] = [this.state.userTitle[0].title_id];\n      return userJson;\n    }\n  }, {\n    key: \"handleSubmit\",\n    value: function handleSubmit(event) {\n      if (validate.validate(this.validator)) {\n        this.addUser();\n      }\n    }\n  }, {\n    key: \"onSelect\",\n    value: function onSelect(selectedList) {\n      var role = [];\n\n      if (selectedList.length) {\n        selectedList.map(function (element) {\n          role.push(element.id);\n        });\n      }\n\n      this.setState({\n        role: role\n      });\n    }\n  }, {\n    key: \"onRemove\",\n    value: function onRemove(selectedList) {\n      var role = [];\n\n      if (selectedList.length) {\n        selectedList.map(function (element) {\n          role.push(element.id);\n        });\n      }\n\n      this.setState({\n        role: role\n      });\n    }\n  }, {\n    key: \"onUserSelect\",\n    value: function onUserSelect(selectedList) {\n      this.setState({\n        userTitle: selectedList\n      });\n    }\n  }, {\n    key: \"onUserRemove\",\n    value: function onUserRemove() {\n      this.setState({\n        userTitle: ''\n      });\n    }\n  }, {\n    key: \"togglePassword\",\n    value: function togglePassword() {\n      this.setState({\n        showPassword: !this.state.showPassword\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this5 = this;\n\n      var t = this.props.t;\n      var roles = constants.ROLES.filter(function (a) {\n        return a.value === _this5.props.entityType;\n      });\n      return /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 195,\n          columnNumber: 7\n        }\n      }, /*#__PURE__*/React.createElement(ToastContainer, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 196,\n          columnNumber: 9\n        }\n      }), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"my-0 position-relative row form-group\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 197,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"col-6\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 198,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"position-relative form-group\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 199,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(Label, {\n        for: \"first_name\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 200,\n          columnNumber: 15\n        }\n      }, t(\"FIRST_NAME\")), /*#__PURE__*/React.createElement(Input, {\n        type: \"text\",\n        className: \"text-capitalize\",\n        name: \"first_name\",\n        onChange: this.handleInputChange,\n        id: \"first_name\",\n        placeholder: \"Enter first name\",\n        required: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 201,\n          columnNumber: 15\n        }\n      }), this.validator.message('first_name', this.state.first_name, validate.required))), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"col-6\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 205,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"position-relative form-group\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 206,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(Label, {\n        for: \"last_name\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 207,\n          columnNumber: 15\n        }\n      }, t(\"LAST_NAME\")), /*#__PURE__*/React.createElement(Input, {\n        type: \"text\",\n        className: \"text-capitalize\",\n        name: \"last_name\",\n        onChange: this.handleInputChange,\n        id: \"last_name\",\n        placeholder: \"Enter last name\",\n        required: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 208,\n          columnNumber: 15\n        }\n      }), this.validator.message('last_name', this.state.last_name, validate.required)))), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"my-0 position-relative row form-group\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 213,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"col-6\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 214,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"position-relative form-group\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 215,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(Label, {\n        for: \"email\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 216,\n          columnNumber: 15\n        }\n      }, t(\"EMAIL\")), /*#__PURE__*/React.createElement(Input, {\n        type: \"email\",\n        className: \"form-control\",\n        name: \"email\",\n        onChange: this.handleInputChange,\n        id: \"email\",\n        placeholder: \"Enter email-id\",\n        required: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 217,\n          columnNumber: 15\n        }\n      }), this.validator.message('email', this.state.email, validate.requiredEmail))), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"col-6\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 221,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"position-relative form-group\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 222,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(Label, {\n        for: \"password\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 223,\n          columnNumber: 15\n        }\n      }, t(\"password\")), this.state.showPassword ? /*#__PURE__*/React.createElement(\"span\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 226,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(InputGroup, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 227,\n          columnNumber: 19\n        }\n      }, /*#__PURE__*/React.createElement(Input, {\n        value: this.state.password,\n        type: \"text\",\n        name: \"password\",\n        onChange: this.handleInputChange,\n        id: \"user_password\",\n        placeholder: \"Enter password\",\n        required: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 228,\n          columnNumber: 19\n        }\n      }), /*#__PURE__*/React.createElement(InputGroupAddon, {\n        addonType: \"append\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 229,\n          columnNumber: 19\n        }\n      }, /*#__PURE__*/React.createElement(Button, {\n        onClick: this.togglePassword.bind(this),\n        color: \"secondary\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 229,\n          columnNumber: 55\n        }\n      }, /*#__PURE__*/React.createElement(\"i\", {\n        className: \"fa fa-eye-slash\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 229,\n          columnNumber: 122\n        }\n      }))))) : /*#__PURE__*/React.createElement(\"span\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 233,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(InputGroup, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 234,\n          columnNumber: 19\n        }\n      }, /*#__PURE__*/React.createElement(Input, {\n        value: this.state.password,\n        type: \"password\",\n        name: \"password\",\n        onChange: this.handleInputChange,\n        id: \"user_password\",\n        placeholder: \"Enter password\",\n        required: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 235,\n          columnNumber: 19\n        }\n      }), /*#__PURE__*/React.createElement(InputGroupAddon, {\n        addonType: \"append\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 236,\n          columnNumber: 19\n        }\n      }, /*#__PURE__*/React.createElement(Button, {\n        onClick: this.togglePassword.bind(this),\n        color: \"secondary\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 237,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(\"i\", {\n        className: \"fa fa-eye\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 237,\n          columnNumber: 88\n        }\n      }))))), this.validator.message('user_password', this.state.password, validate.required)))), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"my-0 position-relative row form-group\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 245,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"col-6\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 246,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"position-relative form-group\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 247,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(Label, {\n        for: \"mobile\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 248,\n          columnNumber: 15\n        }\n      }, t(\"CONTACT_NUMBER\")), /*#__PURE__*/React.createElement(PhoneInput, {\n        country: constant.IndiaCode,\n        value: this.state.mobile,\n        onChange: function onChange(mobile) {\n          return _this5.setState({\n            mobile: mobile\n          });\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 249,\n          columnNumber: 15\n        }\n      }), this.validator.message('mobile', this.state.mobile, validate.phone))), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"col-6\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 257,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"position-relative form-group\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 258,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(Label, {\n        for: \"role\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 259,\n          columnNumber: 15\n        }\n      }, t(\"ROLE\")), /*#__PURE__*/React.createElement(Multiselect, {\n        id: \"role\",\n        className: \"form-control text-capitalize\",\n        onSelect: this.onSelect.bind(this),\n        onRemove: this.onRemove.bind(this),\n        options: roles,\n        displayValue: \"name\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 260,\n          columnNumber: 15\n        }\n      }), this.validator.message('role', this.state.role, validate.required))), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"col-6 search-disable\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 268,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"position-relative form-group\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 269,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(Label, {\n        for: \"userTitle\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 270,\n          columnNumber: 15\n        }\n      }, t(\"DESIGNATION_TITLE\")), /*#__PURE__*/React.createElement(Multiselect, {\n        id: \"userTitle\",\n        className: \"form-control text-capitalize\",\n        onSelect: this.onUserSelect.bind(this),\n        onRemove: this.onUserRemove.bind(this),\n        options: this.state.userTitles,\n        singleSelect: true,\n        displayValue: this.state.userTitleDisplay,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 271,\n          columnNumber: 15\n        }\n      }), this.validator.message('userTitle', this.state.userTitle, validate.required))), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"col-6\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 280,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"position-relative form-group\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 281,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(Label, {\n        for: \"userTitle\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 282,\n          columnNumber: 15\n        }\n      }, t(\"LANDLINE_NUMBER\")), /*#__PURE__*/React.createElement(Input, {\n        type: \"number\",\n        className: \"form-control\",\n        name: \"landlineNumber\",\n        onChange: this.handleInputChange,\n        id: \"landlineNumber\",\n        placeholder: \"Enter landline number\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 283,\n          columnNumber: 15\n        }\n      })))), /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 287,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(\"button\", {\n        disabled: this.state.apiLoading,\n        type: \"submit\",\n        className: \"btn btn-primary btn-md\",\n        onClick: function onClick(e) {\n          return _this5.handleSubmit(e);\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 288,\n          columnNumber: 11\n        }\n      }, this.state.apiLoading ? /*#__PURE__*/React.createElement(\"i\", {\n        class: \"fa fa-spinner fa-spin mr-2\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 289,\n          columnNumber: 38\n        }\n      }) : null, t(\"CREATE\"))));\n    }\n  }]);\n\n  return AddUser;\n}(Component);\n\nAddUser.propTypes = {\n  classes: PropTypes.object.isRequired\n};\nexport default withTranslation(\"translations\")(AddUser);","map":{"version":3,"sources":["/home/divyas/mindfire-assignment/src/views/components/SourceCustomer/User/addUser.js"],"names":["React","Component","Label","Input","InputGroupAddon","InputGroup","Button","HttpTransferService","toastService","ToastContainer","Multiselect","constants","constant","SimpleReactValidator","validate","PhoneInput","withTranslation","PropTypes","httptransfer","toastservice","AddUser","props","validator","autoForceUpdate","handleInputChange","bind","initialState","first_name","last_name","mobile","email","role","prefered_language","generate_password","password","userTitles","userTitle","landlineNumber","showPassword","userTitleDisplay","apiLoading","state","getUserTitle","e","id","target","setState","value","ENTITY_ID","then","response","status","data","titles","entity_id","entityId","userJson","createUserJson","createUserQuery","addUserAdditionalAttributes","user_id","userId","params","landline_number","updateUserAdditionalAttributes","success","USER_ADDED_MESSAGE","togglePopup","capitalizeText","slice","plus","replace","title_id","event","addUser","selectedList","length","map","element","push","t","roles","ROLES","filter","a","entityType","message","required","requiredEmail","togglePassword","IndiaCode","phone","onSelect","onRemove","onUserSelect","onUserRemove","handleSubmit","propTypes","classes","object","isRequired"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { Label, Input, InputGroupAddon, InputGroup, Button} from 'reactstrap';\nimport HttpTransferService from \"../../../../utils/httptransfer\";\nimport \"react-toastify/dist/ReactToastify.css\";\nimport toastService from \"../../../../utils/toastnotification\";\nimport { ToastContainer } from \"react-toastify\";\nimport { Multiselect } from 'multiselect-react-dropdown';\nimport constants from '../../../../constants/constant';\nimport constant from '../../../../constants/constant';\nimport SimpleReactValidator from 'simple-react-validator';\nimport validate from \"../../../../utils/validations\";\nimport PhoneInput from 'react-phone-input-2';\nimport 'react-phone-input-2/lib/style.css';\nimport {  withTranslation } from \"react-i18next\";\nimport PropTypes from \"prop-types\";\n\nconst httptransfer = new HttpTransferService();\nconst toastservice = new toastService();\n\nclass AddUser extends Component {\n\n  constructor(props) {\n    super(props);\n    this.validator = new SimpleReactValidator({autoForceUpdate: this});\n    this.handleInputChange = this.handleInputChange.bind(this);\n\n    this.initialState = {\n      first_name : \"\",\n      last_name : \"\",\n      mobile : \"\",\n      email : \"\",\n      role: [],\n      prefered_language: \"English\",\n      generate_password:false,\n      password: \"\",\n      userTitles: [],\n      userTitle: '',\n      landlineNumber: '',\n      showPassword: false,\n      userTitleDisplay: 'title',\n      apiLoading: false\n    }\n    this.state = this.initialState;\n    this.getUserTitle = this.getUserTitle.bind(this)\n  };\n    \n  handleInputChange(e) {\n    let id = e.target.id\n    switch (id) {\n      case 'first_name':\n        this.setState({ first_name: e.target.value });\n        break;\n        case 'last_name':\n        this.setState({ last_name: e.target.value });\n        break;\n      case 'email':\n        this.setState({ email: e.target.value });\n        break;\n      case 'user_password':\n        this.setState({ password: e.target.value });\n        break;\n      case 'landlineNumber':\n        this.setState({ landlineNumber: e.target.value });\n        break;\n      default:\n        break;\n    }\n\n  }\n\n  componentDidMount () {\n    this.getUserTitle()\n  }\n\n  getUserTitle () {\n    httptransfer.getUserTitle(constant.ENTITY_ID)\n    .then(response => {\n      if (response.status === 200) {\n        this.setState({\n          userTitles: response.data.titles\n        })\n      }\n    })\n  }\n\n  addUser(){\n    var entity_id = this.props.entityId\n    var userJson = {}\n    this.setState({\n      apiLoading: true\n    })\n    userJson = this.createUserJson()\n    httptransfer.createUserQuery(userJson,entity_id)\n      .then(response => {\n        if (response.status === 200) {\n          this.addUserAdditionalAttributes(response.data.user_id)\n        } else {\n          this.setState({\n            apiLoading: false\n          })\n        }\n      });\n  }\n  addUserAdditionalAttributes (userId) {\n    var params = {\n      landline_number: this.state.landlineNumber\n    }\n    httptransfer.updateUserAdditionalAttributes(params, constant.ENTITY_ID, userId)\n    .then(response => {\n      if (response.status === 200) {\n        this.setState({\n          apiLoading: false\n        })\n        toastservice.success(constant.USER_ADDED_MESSAGE)\n        this.props.togglePopup();\n      }\n    })\n  }\n\n  createUserJson()\n  {\n    var userJson = {}\n    userJson['first_name'] = validate.capitalizeText(this.state.first_name)\n    userJson['last_name'] = validate.capitalizeText(this.state.last_name)\n    userJson['mobile'] = this.state.mobile.slice(-10)\n    userJson['country_code'] = constant.plus + this.state.mobile.replace(userJson['mobile'], '')\n    userJson['email'] = this.state.email\n    userJson['role'] = this.state.role\n    userJson['password_details'] = {\n      generate_password: false,\n      password: this.state.password\n    }\n    userJson['prefered_language'] = this.state.prefered_language\n    userJson['user_title_id'] = [this.state.userTitle[0].title_id]\n\n    return userJson\n\n  }\n\n\n\n    handleSubmit(event) {\n      if (validate.validate(this.validator)) {\n        this.addUser()\n      }\n    }\n\n    onSelect(selectedList) {\n      let role = []\n      if (selectedList.length) {\n        selectedList.map(element => {\n          role.push(element.id)\n        })\n      }\n      this.setState ({\n        role: role\n      })\n    }\n    \n    onRemove(selectedList) {\n      let role = []\n      if (selectedList.length) {\n        selectedList.map(element => {\n          role.push(element.id)\n        })\n      }\n      this.setState ({\n        role: role\n      })\n    }\n\n    onUserSelect(selectedList) {\n     \n      this.setState ({\n        userTitle: selectedList\n      })\n    }\n    \n    onUserRemove() {\n      this.setState ({\n        userTitle: ''\n      })\n    }\n    togglePassword (){\n      this.setState ({\n        showPassword: !this.state.showPassword\n      })\n    }\n\n\n  render() {\n    const {t} = this.props;\n    const roles = constants.ROLES.filter(a => a.value === this.props.entityType)\n    return (\n      <div>\n        <ToastContainer />\n        <div className=\"my-0 position-relative row form-group\">\n          <div className=\"col-6\">\n            <div className=\"position-relative form-group\">\n              <Label for=\"first_name\">{t(\"FIRST_NAME\")}</Label>\n              <Input type=\"text\" className=\"text-capitalize\" name=\"first_name\" onChange={this.handleInputChange} id=\"first_name\" placeholder=\"Enter first name\" required/>\n              {this.validator.message('first_name', this.state.first_name, validate.required)}\n            </div>\n          </div>\n          <div className=\"col-6\">\n            <div className=\"position-relative form-group\">\n              <Label for=\"last_name\">{t(\"LAST_NAME\")}</Label>\n              <Input type=\"text\" className=\"text-capitalize\" name=\"last_name\" onChange={this.handleInputChange} id=\"last_name\" placeholder=\"Enter last name\" required/>\n              {this.validator.message('last_name', this.state.last_name, validate.required)}\n            </div>\n          </div>\n        </div>\n        <div className=\"my-0 position-relative row form-group\">\n          <div className=\"col-6\">\n            <div className=\"position-relative form-group\">\n              <Label for=\"email\">{t(\"EMAIL\")}</Label>\n              <Input type=\"email\" className=\"form-control\" name=\"email\" onChange={this.handleInputChange} id=\"email\" placeholder=\"Enter email-id\" required/>\n              {this.validator.message('email', this.state.email, validate.requiredEmail)}\n            </div>\n          </div>\n          <div className=\"col-6\">\n            <div className=\"position-relative form-group\">\n              <Label for=\"password\">{t(\"password\")}</Label>\n              {\n                this.state.showPassword ?\n                <span>\n                  <InputGroup>\n                  <Input  value={this.state.password} type=\"text\" name=\"password\" onChange={this.handleInputChange} id=\"user_password\" placeholder=\"Enter password\" required/>\n                  <InputGroupAddon addonType=\"append\"><Button onClick={this.togglePassword.bind(this)} color=\"secondary\"><i className=\"fa fa-eye-slash\"></i></Button></InputGroupAddon>\n                  </InputGroup>\n                </span>   \n                : \n                <span>\n                  <InputGroup>\n                  <Input  value={this.state.password} type=\"password\" name=\"password\" onChange={this.handleInputChange} id=\"user_password\" placeholder=\"Enter password\" required/>\n                  <InputGroupAddon addonType=\"append\">\n                    <Button onClick={this.togglePassword.bind(this)} color=\"secondary\"><i className=\"fa fa-eye\"></i></Button></InputGroupAddon>\n                  </InputGroup>\n                </span>\n              }\n              {this.validator.message('user_password', this.state.password, validate.required)}\n            </div>\n          </div>\n        </div>\n        <div className=\"my-0 position-relative row form-group\">\n          <div className=\"col-6\">\n            <div className=\"position-relative form-group\">\n              <Label for=\"mobile\">{t(\"CONTACT_NUMBER\")}</Label>\n              <PhoneInput\n                country={constant.IndiaCode}\n                value={this.state.mobile}\n                onChange={mobile => this.setState({ mobile })}\n              />\n              {this.validator.message('mobile', this.state.mobile, validate.phone)}\n            </div>\n          </div>\n          <div className=\"col-6\">\n            <div className=\"position-relative form-group\">\n              <Label for=\"role\">{t(\"ROLE\")}</Label>\n              <Multiselect id=\"role\" className=\"form-control text-capitalize\"\n                onSelect={this.onSelect.bind(this)} \n                onRemove={this.onRemove.bind(this)} \n                options={roles}\n                displayValue=\"name\"/> \n                {this.validator.message('role', this.state.role, validate.required)}\n            </div>\n          </div>\n          <div className=\"col-6 search-disable\">\n            <div className=\"position-relative form-group\">\n              <Label for=\"userTitle\">{t(\"DESIGNATION_TITLE\")}</Label>\n              <Multiselect id=\"userTitle\" className=\"form-control text-capitalize\"\n                onSelect={this.onUserSelect.bind(this)} \n                onRemove={this.onUserRemove.bind(this)} \n                options={this.state.userTitles}\n                singleSelect={true}\n                displayValue={this.state.userTitleDisplay}/> \n                {this.validator.message('userTitle', this.state.userTitle, validate.required)}\n            </div>\n          </div>\n          <div className=\"col-6\">\n            <div className=\"position-relative form-group\">\n              <Label for=\"userTitle\">{t(\"LANDLINE_NUMBER\")}</Label>\n              <Input type=\"number\" className=\"form-control\" name=\"landlineNumber\" onChange={this.handleInputChange} id=\"landlineNumber\" placeholder=\"Enter landline number\"/>\n            </div>\n          </div>\n        </div>\n        <div>\n          <button disabled={this.state.apiLoading} type=\"submit\" className=\"btn btn-primary btn-md\" onClick={(e) => this.handleSubmit(e)}>\n            {this.state.apiLoading ? <i class=\"fa fa-spinner fa-spin mr-2\"></i> : null}{t(\"CREATE\")}\n          </button>\n        </div>\n      </div>\n    )\n  }\n}\nAddUser.propTypes = {\n  classes: PropTypes.object.isRequired\n};\n\nexport default (withTranslation(\"translations\")(AddUser));\n"]},"metadata":{},"sourceType":"module"}