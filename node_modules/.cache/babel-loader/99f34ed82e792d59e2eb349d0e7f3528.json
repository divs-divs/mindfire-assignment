{"ast":null,"code":"import _defineProperty from \"/home/divyas/mindfire-assignment-react/react/reactbaserepo/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _regeneratorRuntime from \"/home/divyas/mindfire-assignment-react/react/reactbaserepo/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/home/divyas/mindfire-assignment-react/react/reactbaserepo/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"/home/divyas/mindfire-assignment-react/react/reactbaserepo/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/divyas/mindfire-assignment-react/react/reactbaserepo/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _assertThisInitialized from \"/home/divyas/mindfire-assignment-react/react/reactbaserepo/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"/home/divyas/mindfire-assignment-react/react/reactbaserepo/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _createSuper from \"/home/divyas/mindfire-assignment-react/react/reactbaserepo/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";\nvar _jsxFileName = \"/home/divyas/mindfire-assignment-react/react/reactbaserepo/src/views/Pages/Login/Login.js\";\nimport React, { Component, useState } from \"react\";\nimport { withTranslation } from \"react-i18next\";\nimport PropTypes from \"prop-types\"; // import { Link } from \"react-router-dom\";\n\nimport { Button, Card, CardBody, CardGroup, Col, Container, Form, Input, InputGroup, InputGroupAddon, InputGroupText, Row, Label } from \"reactstrap\";\nimport authentication from \"../../../utils/authentication\";\nimport firebase from '../../../firebase';\nimport 'react-phone-input-2/lib/style.css';\nimport { ToastContainer } from \"react-toastify\";\nimport \"react-toastify/dist/ReactToastify.css\";\nimport ForgotPassword from \"./ForgotPassword\";\nimport constants from '../../../constants/constant';\nimport PhoneInput from 'react-phone-input-2';\nvar authenticationService = new authentication();\n\nvar Login = /*#__PURE__*/function (_Component) {\n  _inherits(Login, _Component);\n\n  var _super = _createSuper(Login);\n\n  function Login(props) {\n    var _this;\n\n    _classCallCheck(this, Login);\n\n    _this = _super.call(this, props);\n    _this.handleInputChange = _this.handleInputChange.bind(_assertThisInitialized(_this));\n    _this.login = _this.login.bind(_assertThisInitialized(_this));\n    _this.openPopupbox = _this.openPopupbox.bind(_assertThisInitialized(_this));\n    _this.state = {\n      username: \"\",\n      password: \"\",\n      isPopupOpen: false,\n      showOTP: false,\n      showOTPEntryScreen: false,\n      country_code: '',\n      count: 0,\n      changePassword: false\n    };\n    return _this;\n  }\n\n  _createClass(Login, [{\n    key: \"componentWillMount\",\n    value: function componentWillMount() {\n      if (localStorage.getItem('user_info')) {\n        window.location.href = '/dashboard';\n      } else {\n        var messaging = firebase.messaging.isSupported() ? firebase.messaging() : null;\n\n        if (messaging) {\n          messaging.requestPermission().then(function () {\n            return messaging.getToken();\n          }).then(function (token) {\n            localStorage.setItem(\"fcmToken\", token);\n          }).catch(function (err) {\n            console.log(\"Error \" + err);\n          });\n        }\n      }\n    }\n  }, {\n    key: \"fcmToken\",\n    value: function () {\n      var _fcmToken = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(changePassword) {\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.next = 2;\n                return authenticationService.fcmTokenRequest(localStorage.getItem('fcmToken')).then(function (response) {\n                  if (response.status === 200) {\n                    if (!changePassword) {\n                      window.location = \"/dashboard\";\n                    } else {\n                      window.location = \"/profile/password\";\n                    }\n                  } else {\n                    if (localStorage.getItem('user_info')) {\n                      if (!changePassword) {\n                        window.location = \"/dashboard\";\n                      } else {\n                        window.location = \"/profile/password\";\n                      }\n                    }\n                  }\n                });\n\n              case 2:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee);\n      }));\n\n      function fcmToken(_x) {\n        return _fcmToken.apply(this, arguments);\n      }\n\n      return fcmToken;\n    }()\n  }, {\n    key: \"login\",\n    value: function login(event) {\n      var _this2 = this;\n\n      event.preventDefault();\n      var changePassword = false;\n      authenticationService.loginRequest(this.state.username, this.state.password).then(function (response) {\n        if (response.status === 200) {\n          localStorage.setItem('entity_id', response.data.entity_id);\n          changePassword = response.data.change_password;\n\n          _this2.setUserInfoInLocalStorage(response).then(function (response) {\n            _this2.fcmToken(changePassword);\n          });\n\n          _this2.setTranslationLanguage();\n        }\n      });\n    }\n  }, {\n    key: \"setTranslationLanguage\",\n    value: function setTranslationLanguage() {\n      this.props.i18n.changeLanguage(localStorage.getItem(\"user_preffered_language\"));\n    }\n  }, {\n    key: \"genrateOTPlogin\",\n    value: function genrateOTPlogin(event) {\n      var _this3 = this;\n\n      var username;\n      var country_code;\n\n      if (this.state.showOTP) {\n        username = this.state.username.slice(-10);\n        country_code = this.state.username.replace(username, '');\n      }\n\n      event.preventDefault();\n      var params = {\n        \"mobile_no\": username,\n        \"country_code\": \"+\" + country_code\n      };\n      authenticationService.genrateOTP(params).then(function (response) {\n        if (response.status === 200) {\n          _this3.setState({\n            showOTPEntryScreen: true,\n            password: '',\n            username: username,\n            country_code: country_code,\n            userName: username\n          });\n        }\n      });\n    }\n  }, {\n    key: \"setUserInfoInLocalStorage\",\n    value: function setUserInfoInLocalStorage(apiresponse) {\n      return new Promise(function (resolve, reject) {\n        localStorage.setItem(\"user_info\", JSON.stringify(apiresponse[\"data\"]));\n        localStorage.setItem(\"change_password\", JSON.parse(JSON.stringify(apiresponse[\"data\"])).change_password);\n        localStorage.setItem(\"user_preffered_language\", JSON.parse(JSON.stringify(apiresponse[\"data\"])).preffered_language);\n        localStorage.setItem(\"isLoggedin\", \"true\");\n        localStorage.setItem(\"token\", apiresponse[\"headers\"][\"x-auth-token\"]);\n        localStorage.setItem(\"serveruniqueid\", apiresponse[\"headers\"][\"server_unique_id\"]);\n        localStorage.setItem(\"refreshtoken\", apiresponse[\"headers\"][\"refresh-token\"]);\n        resolve();\n      });\n    }\n  }, {\n    key: \"handleInputChange\",\n    value: function handleInputChange(event) {\n      var target = event.target;\n      var value = target.value;\n      var name = target.name;\n      this.setState(_defineProperty({}, name, value));\n    }\n  }, {\n    key: \"handleInputChangeForUserName\",\n    value: function handleInputChangeForUserName(event) {\n      var target = event.target;\n      var value = target.value;\n      var name = target.name;\n\n      if (!isNaN(Number(event.target.value)) && event.target.value.length > 0) {\n        this.setState(_defineProperty({\n          showOTP: true\n        }, name, value));\n      } else {\n        var _this$setState3;\n\n        this.setState((_this$setState3 = {}, _defineProperty(_this$setState3, name, value), _defineProperty(_this$setState3, \"showOTP\", false), _this$setState3));\n      }\n    }\n  }, {\n    key: \"handleInputChangeForNumber\",\n    value: function handleInputChangeForNumber(value, country, event, formattedValue) {\n      if (value.length > 0) {\n        this.setState({\n          username: value\n        });\n      }\n\n      if (event.target != null) {\n        if (event.target.value == \"+\" + country.dialCode) {\n          this.setState({\n            showOTP: false,\n            username: \"\"\n          });\n        }\n      }\n    }\n  }, {\n    key: \"openPopupbox\",\n    value: function openPopupbox() {\n      this.setState({\n        isPopupOpen: !this.state.isPopupOpen\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this4 = this;\n\n      var _this$props = this.props,\n          t = _this$props.t,\n          i18n = _this$props.i18n;\n      var mailLogin = /*#__PURE__*/React.createElement(\"div\", {\n        className: \"app flex-row align-items-center\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 195,\n          columnNumber: 7\n        }\n      }, /*#__PURE__*/React.createElement(\"form\", {\n        className: \"col-12\",\n        onSubmit: this.login,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 196,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(Container, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 197,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(Row, {\n        className: \"justify-content-center\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 198,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(Col, {\n        md: \"8\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 199,\n          columnNumber: 15\n        }\n      }, /*#__PURE__*/React.createElement(CardGroup, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 200,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(Card, {\n        className: \"p-4\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 201,\n          columnNumber: 19\n        }\n      }, /*#__PURE__*/React.createElement(CardBody, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 202,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(Form, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 203,\n          columnNumber: 23\n        }\n      }, /*#__PURE__*/React.createElement(\"h1\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 204,\n          columnNumber: 25\n        }\n      }, t(\"LOGIN\")), /*#__PURE__*/React.createElement(\"p\", {\n        className: \"text-muted\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 205,\n          columnNumber: 25\n        }\n      }, t(\"SIGN_IN_TO_YOUR_ACCOUNT\")), /*#__PURE__*/React.createElement(InputGroup, {\n        className: \"mb-3\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 206,\n          columnNumber: 25\n        }\n      }, /*#__PURE__*/React.createElement(InputGroupAddon, {\n        addonType: \"prepend\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 207,\n          columnNumber: 27\n        }\n      }, /*#__PURE__*/React.createElement(InputGroupText, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 208,\n          columnNumber: 29\n        }\n      }, /*#__PURE__*/React.createElement(\"i\", {\n        className: \"icon-user\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 209,\n          columnNumber: 31\n        }\n      }))), /*#__PURE__*/React.createElement(Input, {\n        type: \"text\",\n        placeholder: t(\"USERNAME\"),\n        autoComplete: \"username\",\n        value: this.state.username,\n        onChange: this.handleInputChangeForUserName.bind(this),\n        name: \"username\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 212,\n          columnNumber: 27\n        }\n      })), /*#__PURE__*/React.createElement(InputGroup, {\n        className: \"mb-4\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 221,\n          columnNumber: 25\n        }\n      }, /*#__PURE__*/React.createElement(InputGroupAddon, {\n        addonType: \"prepend\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 222,\n          columnNumber: 27\n        }\n      }, /*#__PURE__*/React.createElement(InputGroupText, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 223,\n          columnNumber: 29\n        }\n      }, /*#__PURE__*/React.createElement(\"i\", {\n        className: \"icon-lock\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 224,\n          columnNumber: 31\n        }\n      }))), /*#__PURE__*/React.createElement(Input, {\n        type: \"password\",\n        placeholder: t(\"PASSWORD\"),\n        autoComplete: \"current-password\",\n        value: this.state.password,\n        onChange: this.handleInputChange,\n        name: \"password\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 227,\n          columnNumber: 27\n        }\n      })), /*#__PURE__*/React.createElement(Row, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 236,\n          columnNumber: 25\n        }\n      }, /*#__PURE__*/React.createElement(Col, {\n        xs: \"6\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 237,\n          columnNumber: 27\n        }\n      }, /*#__PURE__*/React.createElement(Input, {\n        color: \"primary\",\n        className: \"px-4 btn btn-primary\",\n        disabled: !this.state.username || !this.state.password ? true : false,\n        type: \"submit\",\n        value: t(\"LOGIN\"),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 238,\n          columnNumber: 29\n        }\n      }), /*#__PURE__*/React.createElement(ToastContainer, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 245,\n          columnNumber: 29\n        }\n      })), /*#__PURE__*/React.createElement(Col, {\n        xs: \"6\",\n        className: \"text-right\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 247,\n          columnNumber: 27\n        }\n      }, /*#__PURE__*/React.createElement(Button, {\n        onClick: this.openPopupbox,\n        color: \"link\",\n        className: \"px-0\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 248,\n          columnNumber: 29\n        }\n      }, t(\"FORGOT_PASSWORD\"))))), this.state.isPopupOpen && /*#__PURE__*/React.createElement(ForgotPassword, {\n        toggleForgotPasswordModal: this.openPopupbox,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 255,\n          columnNumber: 25\n        }\n      })))))))));\n      var mobileNoLogin = /*#__PURE__*/React.createElement(Form, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 268,\n          columnNumber: 26\n        }\n      }, /*#__PURE__*/React.createElement(\"h1\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 269,\n          columnNumber: 9\n        }\n      }, t(\"LOGIN\")), /*#__PURE__*/React.createElement(\"p\", {\n        className: \"text-muted\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 270,\n          columnNumber: 9\n        }\n      }, t(\"SIGN_IN_TO_YOUR_ACCOUNT\")), /*#__PURE__*/React.createElement(InputGroup, {\n        className: \"mb-3\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 271,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(PhoneInput, {\n        name: \"username\",\n        country: constants.IndiaCode,\n        value: this.state.username,\n        onChange: this.handleInputChangeForNumber.bind(this),\n        inputProps: {\n          autoFocus: true\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 272,\n          columnNumber: 11\n        }\n      })), /*#__PURE__*/React.createElement(Row, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 283,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(Col, {\n        xs: \"6\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 284,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(Input, {\n        color: \"primary\",\n        className: \"px-4 btn btn-primary\",\n        disabled: !this.state.username ? true : false,\n        type: \"submit\",\n        value: \"Genrate OTP\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 285,\n          columnNumber: 13\n        }\n      }))));\n      var mobileNoLogin = /*#__PURE__*/React.createElement(Form, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 296,\n          columnNumber: 20\n        }\n      }, /*#__PURE__*/React.createElement(\"h1\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 297,\n          columnNumber: 3\n        }\n      }, t(\"LOGIN\")), /*#__PURE__*/React.createElement(\"p\", {\n        className: \"text-muted\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 298,\n          columnNumber: 3\n        }\n      }, t(\"SIGN_IN_TO_YOUR_ACCOUNT\")), /*#__PURE__*/React.createElement(InputGroup, {\n        className: \"mb-3\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 299,\n          columnNumber: 3\n        }\n      }, /*#__PURE__*/React.createElement(PhoneInput, {\n        name: \"username\",\n        country: constants.IndiaCode,\n        value: this.state.username,\n        onChange: this.handleInputChangeForNumber.bind(this),\n        inputProps: {\n          autoFocus: true\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 300,\n          columnNumber: 5\n        }\n      })), /*#__PURE__*/React.createElement(Row, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 311,\n          columnNumber: 3\n        }\n      }, /*#__PURE__*/React.createElement(Col, {\n        xs: \"6\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 312,\n          columnNumber: 5\n        }\n      }, /*#__PURE__*/React.createElement(Input, {\n        color: \"primary\",\n        className: \"px-4 btn btn-primary\",\n        disabled: !this.state.username ? true : false,\n        type: \"submit\",\n        value: \"Genrate OTP\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 313,\n          columnNumber: 7\n        }\n      }))));\n      var enterOtpScreen = /*#__PURE__*/React.createElement(Form, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 325,\n          columnNumber: 22\n        }\n      }, /*#__PURE__*/React.createElement(\"h1\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 326,\n          columnNumber: 17\n        }\n      }, t(\"SIGN_IN_TO_YOUR_ACCOUNT\")), /*#__PURE__*/React.createElement(InputGroup, {\n        className: \"mb-3\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 327,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(InputGroupAddon, {\n        addonType: \"prepend\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 328,\n          columnNumber: 19\n        }\n      }, /*#__PURE__*/React.createElement(Label, {\n        for: \"mobile\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 329,\n          columnNumber: 19\n        }\n      }, t(\"PHONE\"))), /*#__PURE__*/React.createElement(PhoneInput, {\n        disabled: true,\n        country: constants.IndiaCode,\n        value: this.state.country_code + this.state.username,\n        onChange: function onChange(password) {\n          return _this4.setState({\n            password: password\n          });\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 331,\n          columnNumber: 19\n        }\n      })), /*#__PURE__*/React.createElement(InputGroup, {\n        className: \"mb-4\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 338,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(InputGroupAddon, {\n        addonType: \"prepend\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 339,\n          columnNumber: 19\n        }\n      }, /*#__PURE__*/React.createElement(InputGroupText, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 340,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(\"i\", {\n        className: \"icon-lock\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 341,\n          columnNumber: 23\n        }\n      }))), /*#__PURE__*/React.createElement(Input, {\n        type: \"text\",\n        placeholder: \"OTP\",\n        autoFocus: true,\n        value: this.state.password,\n        onChange: this.handleInputChange,\n        name: \"password\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 344,\n          columnNumber: 19\n        }\n      })), /*#__PURE__*/React.createElement(Row, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 353,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(Col, {\n        xs: \"6\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 354,\n          columnNumber: 19\n        }\n      }, /*#__PURE__*/React.createElement(Input, {\n        color: \"primary\",\n        className: \"px-4 btn btn-primary\",\n        disabled: !this.state.password ? true : false,\n        type: \"submit\",\n        value: \"Login\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 355,\n          columnNumber: 21\n        }\n      }), /*#__PURE__*/React.createElement(ToastContainer, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 362,\n          columnNumber: 21\n        }\n      }))));\n      return /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 367,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(ToastContainer, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 368,\n          columnNumber: 23\n        }\n      }), this.state.showOTP ? /*#__PURE__*/React.createElement(\"div\", {\n        className: \"app flex-row align-items-center\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 371,\n          columnNumber: 25\n        }\n      }, /*#__PURE__*/React.createElement(\"form\", {\n        className: \"col-12\",\n        onSubmit: this.state.showOTPEntryScreen ? this.login : this.genrateOTPlogin.bind(this),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 372,\n          columnNumber: 20\n        }\n      }, /*#__PURE__*/React.createElement(Container, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 374,\n          columnNumber: 22\n        }\n      }, /*#__PURE__*/React.createElement(Row, {\n        className: \"justify-content-center\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 375,\n          columnNumber: 24\n        }\n      }, /*#__PURE__*/React.createElement(Col, {\n        md: \"8\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 376,\n          columnNumber: 26\n        }\n      }, /*#__PURE__*/React.createElement(CardGroup, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 377,\n          columnNumber: 28\n        }\n      }, /*#__PURE__*/React.createElement(Card, {\n        className: \"p-4\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 378,\n          columnNumber: 30\n        }\n      }, /*#__PURE__*/React.createElement(CardBody, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 379,\n          columnNumber: 32\n        }\n      }, this.state.showOTPEntryScreen ? enterOtpScreen : mobileNoLogin)))))))) : mailLogin);\n    }\n  }]);\n\n  return Login;\n}(Component);\n\nLogin.propTypes = {\n  classes: PropTypes.object.isRequired\n};\nexport default withTranslation(\"translations\")(Login);","map":{"version":3,"sources":["/home/divyas/mindfire-assignment-react/react/reactbaserepo/src/views/Pages/Login/Login.js"],"names":["React","Component","useState","withTranslation","PropTypes","Button","Card","CardBody","CardGroup","Col","Container","Form","Input","InputGroup","InputGroupAddon","InputGroupText","Row","Label","authentication","firebase","ToastContainer","ForgotPassword","constants","PhoneInput","authenticationService","Login","props","handleInputChange","bind","login","openPopupbox","state","username","password","isPopupOpen","showOTP","showOTPEntryScreen","country_code","count","changePassword","localStorage","getItem","window","location","href","messaging","isSupported","requestPermission","then","getToken","token","setItem","catch","err","console","log","fcmTokenRequest","response","status","event","preventDefault","loginRequest","data","entity_id","change_password","setUserInfoInLocalStorage","fcmToken","setTranslationLanguage","i18n","changeLanguage","slice","replace","params","genrateOTP","setState","userName","apiresponse","Promise","resolve","reject","JSON","stringify","parse","preffered_language","target","value","name","isNaN","Number","length","country","formattedValue","dialCode","t","mailLogin","handleInputChangeForUserName","mobileNoLogin","IndiaCode","handleInputChangeForNumber","autoFocus","enterOtpScreen","genrateOTPlogin","propTypes","classes","object","isRequired"],"mappings":"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","sourcesContent":["import React, { Component, useState } from \"react\";\nimport { withTranslation } from \"react-i18next\";\nimport PropTypes from \"prop-types\";\n// import { Link } from \"react-router-dom\";\nimport {\n  Button,\n  Card,\n  CardBody,\n  CardGroup,\n  Col,\n  Container,\n  Form,\n  Input,\n  InputGroup,\n  InputGroupAddon,\n  InputGroupText,\n  Row,\n  Label,\n} from \"reactstrap\";\nimport authentication from \"../../../utils/authentication\";\nimport firebase from '../../../firebase';\nimport 'react-phone-input-2/lib/style.css'; \nimport { ToastContainer } from \"react-toastify\";\nimport \"react-toastify/dist/ReactToastify.css\";\nimport ForgotPassword from \"./ForgotPassword\";\nimport constants from '../../../constants/constant';\nimport PhoneInput from 'react-phone-input-2'\nconst authenticationService = new authentication();\n\nclass Login extends Component {\n  constructor(props) {\n    super(props);\n    this.handleInputChange = this.handleInputChange.bind(this);\n    this.login = this.login.bind(this);\n    this.openPopupbox = this.openPopupbox.bind(this);\n\n    this.state = {\n      username: \"\",\n      password: \"\",\n      isPopupOpen: false,\n      showOTP:false,\n      showOTPEntryScreen:false,\n      country_code:'',\n      count:0,\n      changePassword:false\n    };\n  }\n  componentWillMount() {\n    if (localStorage.getItem('user_info')) {\n      window.location.href = '/dashboard'\n    }\n    else {\n      const messaging = firebase.messaging.isSupported() ? firebase.messaging() : null;\n      if(messaging){\n      messaging.requestPermission()\n        .then(function () {\n          return messaging.getToken();\n        })\n        .then(function (token) {\n          localStorage.setItem(\"fcmToken\", token);\n        })\n        .catch(function (err) {\n          console.log(\"Error \" + err);\n        })\n    }\n  }\n  }\n\n  async fcmToken(changePassword){\n    await authenticationService\n      .fcmTokenRequest(localStorage.getItem('fcmToken'))\n      .then(response => {\n        if (response.status === 200) {\n          if(!changePassword){window.location= \"/dashboard\"}\n          else{window.location = \"/profile/password\"}\n        }\n        else{\n          if (localStorage.getItem('user_info')) {\n            if(!changePassword){window.location = \"/dashboard\"}\n          else{window.location = \"/profile/password\"}\n       }\n        } \n      });\n    }\n\n\n  login(event) {\n    event.preventDefault();\n    let changePassword=false;\n    authenticationService\n      .loginRequest(this.state.username, this.state.password)\n      .then(response => {\n        if (response.status === 200) {\n          localStorage.setItem('entity_id', response.data.entity_id)\n          changePassword=response.data.change_password\n          this.setUserInfoInLocalStorage(response)\n            .then(response => {\n              this.fcmToken(changePassword)\n            })\n          this.setTranslationLanguage()\n        }\n      });\n  }\n\n  setTranslationLanguage() {\n    this.props.i18n.changeLanguage(localStorage.getItem(\"user_preffered_language\"));\n  }\n\n  genrateOTPlogin (event) {\n    var username;\n    var country_code;\n    if(this.state.showOTP){\n    username=this.state.username.slice(-10);\n    country_code=this.state.username.replace(username, '')\n    } \n    event.preventDefault();\n    var params={\"mobile_no\":username,\"country_code\":\"+\"+country_code}\n   authenticationService\n     .genrateOTP(params)\n     .then(response => {\n       if (response.status === 200) {\n        this.setState({showOTPEntryScreen:true,password:'',username:username,country_code:country_code,userName:username});\n       }\n     });\n\n }\n\n  setUserInfoInLocalStorage(apiresponse) {\n    return new Promise((resolve, reject) => {\n      localStorage.setItem(\"user_info\", JSON.stringify(apiresponse[\"data\"]));\n      localStorage.setItem(\"change_password\", JSON.parse(JSON.stringify(apiresponse[\"data\"])).change_password);\n      localStorage.setItem(\"user_preffered_language\", JSON.parse(JSON.stringify(apiresponse[\"data\"])).preffered_language)\n      localStorage.setItem(\"isLoggedin\", \"true\");\n      localStorage.setItem(\"token\", apiresponse[\"headers\"][\"x-auth-token\"]);\n      localStorage.setItem(\n        \"serveruniqueid\",\n        apiresponse[\"headers\"][\"server_unique_id\"]\n      );\n      localStorage.setItem(\n        \"refreshtoken\",\n        apiresponse[\"headers\"][\"refresh-token\"]\n      );\n      resolve();\n    })\n  }\n\n  handleInputChange(event) {\n    const target = event.target;\n    const value = target.value;\n    const name = target.name;\n    this.setState({\n      [name]: value\n    });\n  }\n\n  handleInputChangeForUserName(event){\n    const target = event.target;\n    const value = target.value;\n    const name = target.name;\n    if(!isNaN(Number(event.target.value)) && event.target.value.length>0){\n    \n    this.setState({showOTP:true, [name]: value})\n    }\n        else {\n    \n    this.setState({\n    [name]: value,showOTP:false\n    });\n    }\n  }\n\n  handleInputChangeForNumber(value, country, event,formattedValue){\n    if(value.length>0){\n      this.setState({\n        username: value\n        });\n    }\n    if(event.target!=null){\n    if(event.target.value==\"+\"+country.dialCode) {\n      this.setState({\n        showOTP: false,\n        username:\"\"\n        });\n    } \n  }\n}\n  openPopupbox() {\n    this.setState({ isPopupOpen: !this.state.isPopupOpen });\n  }\n\n\n  render() {\n    const { t, i18n } = this.props;\n      var mailLogin=(\n      <div className=\"app flex-row align-items-center\">\n        <form className=\"col-12\" onSubmit={this.login}>\n          <Container>\n            <Row className=\"justify-content-center\">\n              <Col md=\"8\">\n                <CardGroup>\n                  <Card className=\"p-4\">\n                    <CardBody>\n                      <Form>\n                        <h1>{t(\"LOGIN\")}</h1>\n                        <p className=\"text-muted\">{t(\"SIGN_IN_TO_YOUR_ACCOUNT\")}</p>\n                        <InputGroup className=\"mb-3\">\n                          <InputGroupAddon addonType=\"prepend\">\n                            <InputGroupText>\n                              <i className=\"icon-user\"></i>\n                            </InputGroupText>\n                          </InputGroupAddon>\n                          <Input\n                            type=\"text\"\n                            placeholder={t(\"USERNAME\")}\n                            autoComplete=\"username\"\n                            value={this.state.username}\n                            onChange={this.handleInputChangeForUserName.bind(this)}\n                            name=\"username\"\n                          />\n                        </InputGroup>\n                        <InputGroup className=\"mb-4\">\n                          <InputGroupAddon addonType=\"prepend\">\n                            <InputGroupText>\n                              <i className=\"icon-lock\"></i>\n                            </InputGroupText>\n                          </InputGroupAddon>\n                          <Input\n                            type=\"password\"\n                            placeholder={t(\"PASSWORD\")}\n                            autoComplete=\"current-password\"\n                            value={this.state.password}\n                            onChange={this.handleInputChange}\n                            name=\"password\"\n                          />\n                        </InputGroup>\n                        <Row>\n                          <Col xs=\"6\">\n                            <Input\n                              color=\"primary\"\n                              className=\"px-4 btn btn-primary\"\n                              disabled={!this.state.username || !this.state.password ? true : false}\n                              type=\"submit\"\n                              value={t(\"LOGIN\")}\n                            />\n                            <ToastContainer />\n                          </Col>\n                          <Col xs=\"6\" className=\"text-right\">\n                            <Button onClick={this.openPopupbox} color=\"link\" className=\"px-0\">\n                            {t(\"FORGOT_PASSWORD\")}\n                            </Button>\n                          </Col>\n                        </Row>\n                      </Form>\n                      {this.state.isPopupOpen && (\n                        <ForgotPassword\n                          toggleForgotPasswordModal={this.openPopupbox}\n                        />\n                      )}\n                    </CardBody>\n                  </Card>\n                </CardGroup>\n              </Col>\n            </Row>\n          </Container>\n        </form>\n      </div>\n      )\n      var mobileNoLogin=(<Form>\n        <h1>{t(\"LOGIN\")}</h1>\n        <p className=\"text-muted\">{t(\"SIGN_IN_TO_YOUR_ACCOUNT\")}</p>\n        <InputGroup className=\"mb-3\">\n          <PhoneInput\n          name=\"username\"\n          country={constants.IndiaCode}\n          value={this.state.username}\n          onChange={this.handleInputChangeForNumber.bind(this)}\n          inputProps={{\n           autoFocus: true,\n         }} \n         />\n        </InputGroup>\n       \n        <Row>\n          <Col xs=\"6\">\n            <Input\n              color=\"primary\"\n              className=\"px-4 btn btn-primary\"\n              disabled={!this.state.username ? true : false }\n              type=\"submit\"\n              value=\"Genrate OTP\"\n            />\n          </Col>\n        </Row>\n      </Form>);\n\nvar mobileNoLogin=(<Form>\n  <h1>{t(\"LOGIN\")}</h1>\n  <p className=\"text-muted\">{t(\"SIGN_IN_TO_YOUR_ACCOUNT\")}</p>\n  <InputGroup className=\"mb-3\">\n    <PhoneInput\n    name=\"username\"\n    country={constants.IndiaCode}\n    value={this.state.username}\n    onChange={this.handleInputChangeForNumber.bind(this)}\n    inputProps={{\n     autoFocus: true,\n   }} \n   />\n  </InputGroup>\n \n  <Row>\n    <Col xs=\"6\">\n      <Input\n        color=\"primary\"\n        className=\"px-4 btn btn-primary\"\n        disabled={!this.state.username ? true : false }\n        type=\"submit\"\n        value=\"Genrate OTP\"\n      />\n    </Col>\n  </Row>\n</Form>);\n\n\nvar enterOtpScreen=( <Form>\n                <h1>{t(\"SIGN_IN_TO_YOUR_ACCOUNT\")}</h1>\n                <InputGroup className=\"mb-3\">\n                  <InputGroupAddon addonType=\"prepend\">\n                  <Label for=\"mobile\">{t(\"PHONE\")}</Label>\n                  </InputGroupAddon>\n                  <PhoneInput\n                    disabled\n                     country={constants.IndiaCode}\n                     value={this.state.country_code+this.state.username}\n                     onChange={(password)=>this.setState({password})}\n               />\n                </InputGroup>\n                <InputGroup className=\"mb-4\">\n                  <InputGroupAddon addonType=\"prepend\">\n                    <InputGroupText>\n                      <i className=\"icon-lock\"></i>\n                    </InputGroupText>\n                  </InputGroupAddon>\n                  <Input\n                    type=\"text\"\n                    placeholder=\"OTP\"\n                    autoFocus\n                    value={this.state.password}\n                    onChange={this.handleInputChange}\n                    name=\"password\"\n                  />\n                </InputGroup>\n                <Row>\n                  <Col xs=\"6\">\n                    <Input\n                      color=\"primary\"\n                      className=\"px-4 btn btn-primary\"\n                      disabled={!this.state.password ? true : false }\n                      type=\"submit\"\n                      value=\"Login\"\n                    />\n                    <ToastContainer />\n                  </Col>\n                </Row>\n              </Form>);\n                  return (\n                    <div>\n                      <ToastContainer />\n                      {\n                        this.state.showOTP? \n                        <div className=\"app flex-row align-items-center\">\n                   <form className=\"col-12\" onSubmit={this.state.showOTPEntryScreen? this.login:this.genrateOTPlogin.bind(this)\n                       }>\n                     <Container>\n                       <Row className=\"justify-content-center\">\n                         <Col md=\"8\">\n                           <CardGroup>\n                             <Card className=\"p-4\">\n                               <CardBody>\n                                  {this.state.showOTPEntryScreen? enterOtpScreen:mobileNoLogin }               \n                               </CardBody>\n                             </Card>\n                           </CardGroup>\n                         </Col>\n                       </Row>\n                     </Container>\n                   </form>\n                 </div>  :mailLogin    }\n                    </div>\n                   );\n                 }\n               }\n\nLogin.propTypes = {\n  classes: PropTypes.object.isRequired\n};\n\nexport default (withTranslation(\"translations\")(Login));\n\n\n"]},"metadata":{},"sourceType":"module"}