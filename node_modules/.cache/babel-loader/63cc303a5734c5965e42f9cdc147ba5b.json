{"ast":null,"code":"import _classCallCheck from \"/home/divyas/mindfire-assignment-react/react/reactbaserepo/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/divyas/mindfire-assignment-react/react/reactbaserepo/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _assertThisInitialized from \"/home/divyas/mindfire-assignment-react/react/reactbaserepo/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"/home/divyas/mindfire-assignment-react/react/reactbaserepo/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _createSuper from \"/home/divyas/mindfire-assignment-react/react/reactbaserepo/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";\nvar _jsxFileName = \"/home/divyas/mindfire-assignment-react/react/reactbaserepo/src/views/Pages/Login/ForgotPassword.js\";\nimport React, { Component } from \"react\";\nimport { Label, Input } from 'reactstrap';\nimport { Modal, ModalHeader, ModalBody } from 'reactstrap';\nimport authentication from \"../../../utils/authentication\";\nimport { ToastContainer } from \"react-toastify\";\nimport \"react-toastify/dist/ReactToastify.css\";\nimport SimpleReactValidator from 'simple-react-validator';\nimport validate from \"../../../utils/validations\";\nvar authenticationService = new authentication();\n\nvar ForgotPassword = /*#__PURE__*/function (_React$Component) {\n  _inherits(ForgotPassword, _React$Component);\n\n  var _super = _createSuper(ForgotPassword);\n\n  function ForgotPassword(props) {\n    var _this;\n\n    _classCallCheck(this, ForgotPassword);\n\n    _this = _super.call(this, props);\n    _this.validator = new SimpleReactValidator({\n      autoForceUpdate: _assertThisInitialized(_this)\n    });\n    _this.state = {\n      email: \"\"\n    };\n    _this.handleSubmit = _this.handleSubmit.bind(_assertThisInitialized(_this));\n    _this.handleInputChange = _this.handleInputChange.bind(_assertThisInitialized(_this));\n    return _this;\n  }\n\n  _createClass(ForgotPassword, [{\n    key: \"handleInputChange\",\n    value: function handleInputChange(e) {\n      var id = e.target.id;\n\n      switch (id) {\n        case 'email':\n          this.setState({\n            email: e.target.value\n          });\n\n        default:\n          console.log('undefined field');\n          break;\n      }\n    }\n  }, {\n    key: \"handleSubmit\",\n    value: function handleSubmit() {\n      if (validate.validate(this.validator)) {\n        this.forgotPassword();\n      }\n    }\n  }, {\n    key: \"forgotPassword\",\n    value: function forgotPassword() {\n      var _this2 = this;\n\n      authenticationService.forgotPassword(this.state.email).then(function (response) {\n        if (response.status === 200) {\n          _this2.props.toggleForgotPasswordModal();\n        }\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this3 = this;\n\n      var closebtn = /*#__PURE__*/React.createElement(\"button\", {\n        className: \"close\",\n        onClick: this.props.toggleForgotPasswordModal,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 26\n        }\n      }, \"\\xD7\");\n      return /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(ToastContainer, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 13\n        }\n      }), /*#__PURE__*/React.createElement(Modal, {\n        isOpen: this.props.toggleForgotPasswordModal,\n        size: \"sm\",\n        toggle: this.props.toggleForgotPasswordModal,\n        className: \"modal-dialog\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(ModalHeader, {\n        close: closebtn,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 17\n        }\n      }, \" Forgot Password \"), /*#__PURE__*/React.createElement(ModalBody, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"position-relative form-group\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(Label, {\n        for: \"email\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 15\n        }\n      }, \"E-Mail\"), /*#__PURE__*/React.createElement(Input, {\n        type: \"text\",\n        name: \"email\",\n        onChange: this.handleInputChange,\n        id: \"email\",\n        placeholder: \"Enter Email\",\n        value: this.state.email,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 15\n        }\n      }), this.validator.message('email', this.state.email, validate.required)), /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 15\n        }\n      }, /*#__PURE__*/React.createElement(\"button\", {\n        type: \"submit\",\n        className: \"btn btn-primary btn-md\",\n        onClick: function onClick(e) {\n          return _this3.handleSubmit(e);\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 11\n        }\n      }, \"Reset Password\")))));\n    }\n  }]);\n\n  return ForgotPassword;\n}(React.Component);\n\nexport default ForgotPassword;","map":{"version":3,"sources":["/home/divyas/mindfire-assignment-react/react/reactbaserepo/src/views/Pages/Login/ForgotPassword.js"],"names":["React","Component","Label","Input","Modal","ModalHeader","ModalBody","authentication","ToastContainer","SimpleReactValidator","validate","authenticationService","ForgotPassword","props","validator","autoForceUpdate","state","email","handleSubmit","bind","handleInputChange","e","id","target","setState","value","console","log","forgotPassword","then","response","status","toggleForgotPasswordModal","closebtn","message","required"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport { Label, Input} from 'reactstrap';\nimport { Modal, ModalHeader, ModalBody } from 'reactstrap';\nimport authentication from \"../../../utils/authentication\";\nimport { ToastContainer } from \"react-toastify\";\nimport \"react-toastify/dist/ReactToastify.css\";\nimport SimpleReactValidator from 'simple-react-validator';\nimport validate from \"../../../utils/validations\"\nconst authenticationService = new authentication();\n\nclass ForgotPassword extends React.Component {\n    constructor (props) {\n        super(props);\n        this.validator = new SimpleReactValidator({autoForceUpdate: this});\n        this.state = {\n            email : \"\",\n          }\n          this.handleSubmit = this.handleSubmit.bind(this);\n          this.handleInputChange = this.handleInputChange.bind(this)\n        }\n\n    handleInputChange(e) {\n        let id = e.target.id\n        switch (id) {\n          case 'email':\n            this.setState({ email: e.target.value});\n          default:\n            console.log('undefined field');\n            break;\n        }\n      }\n      handleSubmit() {\n        if (validate.validate(this.validator)) {\n          this.forgotPassword()\n        }\n      }\n\n      forgotPassword () {\n        authenticationService.forgotPassword(this.state.email).then((response) => {\n          if (response.status === 200) {\n            this.props.toggleForgotPasswordModal();\n          } \n        });\n      }\n\n    render () {\n        const closebtn = <button className=\"close\" onClick={this.props.toggleForgotPasswordModal}>&times;</button>;\n        return (\n            <div>\n            <ToastContainer />\n            <Modal isOpen={this.props.toggleForgotPasswordModal}\n                size=\"sm\"\n                toggle={this.props.toggleForgotPasswordModal}\n                className=\"modal-dialog\"\n            >\n                <ModalHeader close={closebtn}> Forgot Password </ModalHeader>\n                <ModalBody >\n            <div className=\"position-relative form-group\">\n              <Label for=\"email\">E-Mail</Label>\n              <Input type=\"text\"  name=\"email\" onChange={this.handleInputChange} id=\"email\" placeholder=\"Enter Email\" value={this.state.email}/>\n              {this.validator.message('email', this.state.email, validate.required)}\n              </div>\n              <div>\n          <button type=\"submit\" className=\"btn btn-primary btn-md\" onClick={(e) => this.handleSubmit(e)}>Reset Password</button>\n          </div>\n                </ModalBody>\n            </Modal>\n            </div>\n        )\n    }\n  }\n\n  export default ForgotPassword\n\n  "]},"metadata":{},"sourceType":"module"}