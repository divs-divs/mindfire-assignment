{"ast":null,"code":"import _regeneratorRuntime from \"/app/mindfire-assignment/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/app/mindfire-assignment/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"/app/mindfire-assignment/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/app/mindfire-assignment/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _assertThisInitialized from \"/app/mindfire-assignment/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"/app/mindfire-assignment/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _createSuper from \"/app/mindfire-assignment/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";\nvar _jsxFileName = \"/app/mindfire-assignment/src/views/components/SourceCustomer/editSourceCustomer.js\";\nimport React, { Component } from 'react';\nimport { Label, Input } from 'reactstrap';\nimport HttpTransferService from \"../../../utils/httptransfer\";\nimport { ToastContainer } from \"react-toastify\";\nimport SimpleReactValidator from 'simple-react-validator';\nimport validate from \"../../../utils/validations\";\nimport PhoneInput from 'react-phone-input-2';\nimport 'react-phone-input-2/lib/style.css';\nimport constant from '../../../constants/constant';\nimport { withTranslation } from \"react-i18next\";\nimport PropTypes from \"prop-types\";\nvar httptransfer = new HttpTransferService();\n\nvar EditSourceCustomer = /*#__PURE__*/function (_Component) {\n  _inherits(EditSourceCustomer, _Component);\n\n  var _super = _createSuper(EditSourceCustomer);\n\n  function EditSourceCustomer(props) {\n    var _this;\n\n    _classCallCheck(this, EditSourceCustomer);\n\n    _this = _super.call(this, props);\n    _this.validator = new SimpleReactValidator({\n      autoForceUpdate: _assertThisInitialized(_this)\n    });\n    _this.handleInputChange = _this.handleInputChange.bind(_assertThisInitialized(_this));\n    _this.getEntityAdditional = _this.getEntityAdditional.bind(_assertThisInitialized(_this));\n    _this.setEntityAdditional = _this.setEntityAdditional.bind(_assertThisInitialized(_this));\n    _this.initialState = {\n      name: \"\",\n      state: \"\",\n      email: \"\",\n      city: \"\",\n      pincode: \"\",\n      contact: \"\",\n      stateList: [],\n      cityList: [],\n      contacttype: \"MOBILE\",\n      address_line_1: '',\n      pan: '',\n      fssai: '',\n      type: '',\n      statusList: [{\n        id: 'DEACTIVATED',\n        name: 'DEACTIVATED'\n      }, {\n        id: 'ACTIVE',\n        name: 'ACTIVE'\n      }, {\n        id: 'DELAYED_PAYEMNT',\n        name: 'DELAYED_PAYEMNT'\n      }],\n      status: ''\n    };\n    _this.state = _this.initialState;\n    return _this;\n  }\n\n  _createClass(EditSourceCustomer, [{\n    key: \"handleInputChange\",\n    value: function handleInputChange(e, index, value) {\n      var id = e.target.id;\n\n      switch (id) {\n        case 'name':\n          this.setState({\n            name: e.target.value\n          });\n          break;\n\n        case 'state':\n          this.setState({\n            state: e.target.value\n          });\n          this.getCity(e.target.value);\n          break;\n\n        case 'city':\n          this.setState({\n            city: e.target.value\n          });\n          break;\n\n        case 'pincode':\n          this.setState({\n            pincode: e.target.value\n          });\n          break;\n\n        case 'address_line_1':\n          this.setState({\n            address_line_1: e.target.value\n          });\n          break;\n\n        case 'type':\n          this.setState({\n            type: e.target.value\n          });\n          break;\n\n        case 'pan':\n          this.setState({\n            pan: e.target.value\n          });\n          break;\n\n        case 'fssai':\n          this.setState({\n            fssai: e.target.value\n          });\n          break;\n\n        case 'status':\n          this.setState({\n            status: e.target.value\n          });\n          break;\n\n        default:\n          console.log('undefined field');\n          break;\n      }\n    }\n  }, {\n    key: \"createUserJson\",\n    value: function createUserJson() {\n      var userJson = {\n        name: validate.capitalizeText(this.state.name),\n        type: this.state.type ? this.state.type : this.props.type,\n        state_id: this.state.state,\n        city_id: this.state.city,\n        status: this.state.status,\n        pincode: this.state.pincode,\n        address_line_1: validate.capitalizeText(this.state.address_line_1),\n        contacts: [{\n          contact: this.state.contact,\n          type: this.state.contacttype\n        }]\n      };\n      return userJson;\n    }\n  }, {\n    key: \"SubmitEditCustomer\",\n    value: function SubmitEditCustomer(event) {\n      if (validate.validate(this.validator)) {\n        this.editEntity();\n      }\n    }\n  }, {\n    key: \"editEntity\",\n    value: function editEntity() {\n      var _this2 = this;\n\n      var userJson = {};\n      userJson = this.createUserJson();\n      httptransfer.updateSourceCustomerEntity(userJson, this.props.sourceCustomerDetails.entity_id).then(function (response) {\n        if (response.status === 200) {\n          if (_this2.props.type === constant.TRANSPORTER) {\n            _this2.setEntityAdditional();\n          } else {\n            _this2.props.closeModal();\n          }\n        }\n      });\n    }\n  }, {\n    key: \"componentDidMount\",\n    value: function () {\n      var _componentDidMount = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n        var _this3 = this;\n\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.next = 2;\n                return this.getEntityAdditional();\n\n              case 2:\n                this.setState({\n                  name: this.props.sourceCustomerDetails.name,\n                  pincode: this.props.sourceCustomerDetails.pincode,\n                  state: this.props.sourceCustomerDetails.state_details.state_id,\n                  city: this.props.sourceCustomerDetails.city_details.city_id,\n                  status: this.props.sourceCustomerDetails.status,\n                  contact: this.props.sourceCustomerDetails.contact[0].contact.replace(constant.plus, ''),\n                  address_line_1: this.props.sourceCustomerDetails.address_line_1,\n                  type: this.props.sourceCustomerDetails.type\n                });\n                document.getElementById('name').value = this.props.sourceCustomerDetails.name;\n\n                if (this.props.type === constant.TRANSPORTER) {\n                  document.getElementById('type').value = this.props.sourceCustomerDetails.type;\n                }\n\n                document.getElementById('status').value = this.state.status;\n                document.getElementById('contact').value = this.state.contact;\n                document.getElementById('pincode').value = this.props.sourceCustomerDetails.pincode;\n                document.getElementById('address_line_1').value = this.props.sourceCustomerDetails.address_line_1;\n                this.getStateList().then(function (response) {\n                  document.getElementById('state').value = _this3.props.sourceCustomerDetails.state_details.state_id;\n\n                  _this3.getCity(_this3.props.sourceCustomerDetails.state_details.state_id).then(function (response) {\n                    document.getElementById('city').value = _this3.props.sourceCustomerDetails.city_details.city_id;\n                  });\n                });\n\n              case 10:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n\n      function componentDidMount() {\n        return _componentDidMount.apply(this, arguments);\n      }\n\n      return componentDidMount;\n    }()\n  }, {\n    key: \"getEntityAdditional\",\n    value: function getEntityAdditional() {\n      var _this4 = this;\n\n      var params = {\n        entity_id: [this.props.sourceCustomerDetails.entity_id]\n      };\n      httptransfer.queryEntityAdditionalAttributes(params).then(function (response) {\n        if (response.status === 200) {\n          if (response.data.entities.length) {\n            var values = response.data.entities[0].additional_attributes;\n            document.getElementById('pan').value = values.pan_number;\n            document.getElementById('fssai').value = values.fssai_number;\n\n            _this4.setState({\n              pan: values.pan_number,\n              fssai: values.fssai_number\n            });\n          }\n        }\n      });\n    }\n  }, {\n    key: \"setEntityAdditional\",\n    value: function setEntityAdditional() {\n      var _this5 = this;\n\n      var params = {\n        \"pan_number\": this.state.fssai,\n        \"fssai_number\": this.state.pan\n      };\n      httptransfer.updateEntityAdditionalAttributes(params, this.props.sourceCustomerDetails.entity_id).then(function (response) {\n        _this5.props.closeModal();\n      });\n    }\n  }, {\n    key: \"getStateList\",\n    value: function getStateList() {\n      var _this6 = this;\n\n      return new Promise(function (resolve, reject) {\n        httptransfer.getStateList().then(function (response) {\n          _this6.setState({\n            stateList: response.data.states\n          });\n\n          resolve(response);\n        });\n      });\n    }\n  }, {\n    key: \"getCity\",\n    value: function getCity(state_id) {\n      var _this7 = this;\n\n      return new Promise(function (resolve, reject) {\n        httptransfer.getCityList({\n          state_id: [state_id]\n        }).then(function (response) {\n          _this7.setState({\n            cityList: response.data.cities\n          });\n\n          resolve(response);\n        });\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this8 = this;\n\n      var t = this.props.t;\n      var statesOptions = this.state.stateList.length ? this.state.stateList.map(function (element) {\n        return /*#__PURE__*/React.createElement(\"option\", {\n          key: element.state_name,\n          value: element.state_id,\n          __self: _this8,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 217,\n            columnNumber: 43\n          }\n        }, element.state_name);\n      }) : [];\n      var cityOptions = this.state.cityList.length ? this.state.cityList.map(function (element) {\n        return /*#__PURE__*/React.createElement(\"option\", {\n          key: element.city_name,\n          value: element.city_id,\n          __self: _this8,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 220,\n            columnNumber: 42\n          }\n        }, element.city_name);\n      }) : [];\n      var statusList = this.state.statusList.length ? this.state.statusList.map(function (element) {\n        return /*#__PURE__*/React.createElement(\"option\", {\n          key: element.id,\n          value: element.id,\n          __self: _this8,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 223,\n            columnNumber: 44\n          }\n        }, element.name);\n      }) : [];\n      return /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 227,\n          columnNumber: 7\n        }\n      }, /*#__PURE__*/React.createElement(ToastContainer, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 228,\n          columnNumber: 9\n        }\n      }), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"position-relative form-group\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 229,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(Label, {\n        for: \"name\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 230,\n          columnNumber: 11\n        }\n      }, t(\"NAME\")), /*#__PURE__*/React.createElement(Input, {\n        type: \"text\",\n        className: \"text-capitalize\",\n        onChange: this.handleInputChange,\n        id: \"name\",\n        placeholder: \"Enter your name\",\n        required: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 231,\n          columnNumber: 11\n        }\n      }), this.validator.message('name', this.state.name, validate.required)), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"my-0 position-relative row form-group\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 234,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"col-12\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 235,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"position-relative form-group\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 236,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(Label, {\n        for: \"address_line_1\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 237,\n          columnNumber: 15\n        }\n      }, t(\"ADDRESS\")), /*#__PURE__*/React.createElement(Input, {\n        type: \"text\",\n        onChange: this.handleInputChange,\n        className: \"text-capitalize\",\n        id: \"address_line_1\",\n        placeholder: \"Enter Address\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 238,\n          columnNumber: 15\n        }\n      }), this.validator.message('address_line_1', this.state.address_line_1, validate.required))), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"col-4\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 242,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"position-relative form-group\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 243,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(Label, {\n        for: \"state\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 244,\n          columnNumber: 15\n        }\n      }, t(\"STATE\")), /*#__PURE__*/React.createElement(\"select\", {\n        id: \"state\",\n        onChange: this.handleInputChange,\n        className: \"form-control\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 245,\n          columnNumber: 15\n        }\n      }, /*#__PURE__*/React.createElement(\"option\", {\n        defaultValue: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 246,\n          columnNumber: 17\n        }\n      }, \"Choose state\"), statesOptions), this.validator.message('state', this.state.state, validate.required))), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"col-4\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 252,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"position-relative form-group\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 253,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(Label, {\n        for: \"city\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 254,\n          columnNumber: 15\n        }\n      }, t(\"CITY\")), /*#__PURE__*/React.createElement(\"select\", {\n        disabled: cityOptions.length ? false : true,\n        id: \"city\",\n        onChange: this.handleInputChange,\n        className: \"form-control\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 255,\n          columnNumber: 15\n        }\n      }, /*#__PURE__*/React.createElement(\"option\", {\n        value: \"\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 256,\n          columnNumber: 17\n        }\n      }, \"Choose city\"), cityOptions), this.validator.message('city', this.state.city, validate.required))), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"col-4\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 262,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"position-relative form-group\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 263,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(Label, {\n        for: \"pincode\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 264,\n          columnNumber: 13\n        }\n      }, t(\"PINCODE\")), /*#__PURE__*/React.createElement(Input, {\n        type: \"number\",\n        onChange: this.handleInputChange,\n        className: \"form-control\",\n        id: \"pincode\",\n        placeholder: \"Enter Pincode\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 265,\n          columnNumber: 13\n        }\n      }), this.validator.message('pincode', this.state.pincode, validate.requiredPincode))), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"col-12\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 269,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"position-relative form-group\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 270,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(Label, {\n        for: \"pincode\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 271,\n          columnNumber: 15\n        }\n      }, t(\"STATUS\")), /*#__PURE__*/React.createElement(\"select\", {\n        id: \"status\",\n        onChange: this.handleInputChange,\n        className: \"form-control\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 272,\n          columnNumber: 15\n        }\n      }, /*#__PURE__*/React.createElement(\"option\", {\n        value: \"\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 273,\n          columnNumber: 17\n        }\n      }, \"Choose Status\"), statusList), this.validator.message('status', this.state.status, validate.required)))), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"position-relative form-group\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 280,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(Label, {\n        for: \"contact\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 281,\n          columnNumber: 11\n        }\n      }, t(\"CONTACT\")), /*#__PURE__*/React.createElement(Input, {\n        id: \"contact\",\n        onChange: this.handleInputChange,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 282,\n          columnNumber: 11\n        }\n      }), this.validator.message('contact', this.state.contact, validate.phone)), this.props.type === constant.TRANSPORTER ? /*#__PURE__*/React.createElement(\"div\", {\n        className: \"my-0 position-relative row form-group\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 290,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"col-6\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 291,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"position-relative form-group\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 292,\n          columnNumber: 15\n        }\n      }, /*#__PURE__*/React.createElement(Label, {\n        for: \"pan\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 293,\n          columnNumber: 17\n        }\n      }, t(\"pan\")), /*#__PURE__*/React.createElement(Input, {\n        type: \"text\",\n        className: \"form-control\",\n        onChange: this.handleInputChange,\n        id: \"pan\",\n        placeholder: \"Enter PAN\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 294,\n          columnNumber: 17\n        }\n      }))), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"col-6\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 297,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"position-relative form-group\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 298,\n          columnNumber: 15\n        }\n      }, /*#__PURE__*/React.createElement(Label, {\n        for: \"fssai\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 299,\n          columnNumber: 15\n        }\n      }, t(\"fssai\")), /*#__PURE__*/React.createElement(Input, {\n        type: \"text\",\n        onChange: this.handleInputChange,\n        className: \"form-control\",\n        id: \"fssai\",\n        placeholder: \"Enter FSSAI\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 300,\n          columnNumber: 15\n        }\n      })))) : null, /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 306,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(\"button\", {\n        type: \"submit\",\n        className: \"btn btn-primary btn-md\",\n        onClick: this.SubmitEditCustomer.bind(this),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 307,\n          columnNumber: 11\n        }\n      }, t(\"UPDATE\"))));\n    }\n  }]);\n\n  return EditSourceCustomer;\n}(Component);\n\nEditSourceCustomer.propTypes = {\n  classes: PropTypes.object.isRequired\n};\nexport default withTranslation(\"translations\")(EditSourceCustomer);","map":{"version":3,"sources":["/app/mindfire-assignment/src/views/components/SourceCustomer/editSourceCustomer.js"],"names":["React","Component","Label","Input","HttpTransferService","ToastContainer","SimpleReactValidator","validate","PhoneInput","constant","withTranslation","PropTypes","httptransfer","EditSourceCustomer","props","validator","autoForceUpdate","handleInputChange","bind","getEntityAdditional","setEntityAdditional","initialState","name","state","email","city","pincode","contact","stateList","cityList","contacttype","address_line_1","pan","fssai","type","statusList","id","status","e","index","value","target","setState","getCity","console","log","userJson","capitalizeText","state_id","city_id","contacts","event","editEntity","createUserJson","updateSourceCustomerEntity","sourceCustomerDetails","entity_id","then","response","TRANSPORTER","closeModal","state_details","city_details","replace","plus","document","getElementById","getStateList","params","queryEntityAdditionalAttributes","data","entities","length","values","additional_attributes","pan_number","fssai_number","updateEntityAdditionalAttributes","Promise","resolve","reject","states","getCityList","cities","t","statesOptions","map","element","state_name","cityOptions","city_name","message","required","requiredPincode","phone","SubmitEditCustomer","propTypes","classes","object","isRequired"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { Label, Input } from 'reactstrap';\nimport HttpTransferService from \"../../../utils/httptransfer\";\nimport { ToastContainer } from \"react-toastify\";\nimport SimpleReactValidator from 'simple-react-validator';\nimport validate from \"../../../utils/validations\"\nimport PhoneInput from 'react-phone-input-2'\nimport 'react-phone-input-2/lib/style.css'\nimport constant from '../../../constants/constant';\nimport {  withTranslation } from \"react-i18next\";\nimport PropTypes from \"prop-types\";\n\n\nconst httptransfer = new HttpTransferService();\n\nclass EditSourceCustomer extends Component {\n\n  constructor(props) {\n    super(props);\n    this.validator = new SimpleReactValidator({autoForceUpdate: this});\n    this.handleInputChange = this.handleInputChange.bind(this);\n    this.getEntityAdditional = this.getEntityAdditional.bind(this);\n    this.setEntityAdditional = this.setEntityAdditional.bind(this);\n    this.initialState = {\n      name : \"\",\n      state : \"\",\n      email : \"\",\n      city : \"\",\n      pincode : \"\",\n      contact:\"\",\n      stateList: [],\n      cityList: [],\n      contacttype:\"MOBILE\",\n      address_line_1: '',\n      pan: '',\n      fssai: '',\n      type: '',\n      statusList: [\n        {id: 'DEACTIVATED' , name: 'DEACTIVATED'},\n        {id: 'ACTIVE' , name: 'ACTIVE'},\n        {id: 'DELAYED_PAYEMNT' , name: 'DELAYED_PAYEMNT'}\n      ],\n      status: ''\n    }\n    this.state = this.initialState;\n  };\n\n  handleInputChange(e, index, value) {\n    let id = e.target.id\n    switch (id) {\n      case 'name':\n        this.setState({ name: e.target.value });\n        break;\n      case 'state':\n        this.setState({ state: e.target.value  });\n        this.getCity(e.target.value);\n        break;\n      case 'city':\n        this.setState({ city:  e.target.value  });\n        break;\n      case 'pincode':\n        this.setState({ pincode: e.target.value});\n        break;\n      case 'address_line_1':\n        this.setState({ address_line_1: e.target.value });\n        break;\n      case 'type': \n        this.setState({ type: e.target.value });\n        break;\n      case 'pan': \n        this.setState({ pan: e.target.value });\n        break;\n      case 'fssai': \n        this.setState({ fssai: e.target.value });\n        break;\n      case 'status': \n        this.setState({ status: e.target.value });\n        break;\n      default:\n        console.log('undefined field');\n        break;\n    }\n  }\n\n  createUserJson() {\n    var userJson = {\n      name: validate.capitalizeText(this.state.name),\n      type: this.state.type ? this.state.type : this.props.type,\n      state_id: this.state.state,\n      city_id: this.state.city,\n      status: this.state.status,\n      pincode: this.state.pincode,\n      address_line_1: validate.capitalizeText(this.state.address_line_1),\n      contacts: [\n        {\n          contact: this.state.contact,\n          type: this.state.contacttype\n        }\n      ]\n    }\n    return userJson\n  }\n\n  SubmitEditCustomer(event) {\n    if (validate.validate(this.validator)) {\n      this.editEntity()\n    }\n  }\n  \n  editEntity(){\n    var userJson = {}\n    userJson = this.createUserJson()\n    httptransfer.updateSourceCustomerEntity(userJson, this.props.sourceCustomerDetails.entity_id)\n      .then(response => {\n        if (response.status === 200) {\n          if (this.props.type === constant.TRANSPORTER) {\n            this.setEntityAdditional()\n          } else {\n            this.props.closeModal()\n          }\n        } \n        \n    });\n  }\n\n\n  async componentDidMount() {\n    await this.getEntityAdditional()\n    this.setState({\n      name: this.props.sourceCustomerDetails.name,\n      pincode: this.props.sourceCustomerDetails.pincode,\n      state: this.props.sourceCustomerDetails.state_details.state_id,\n      city: this.props.sourceCustomerDetails.city_details.city_id,\n      status: this.props.sourceCustomerDetails.status,\n      contact: this.props.sourceCustomerDetails.contact[0].contact.replace(constant.plus, ''),\n      address_line_1: this.props.sourceCustomerDetails.address_line_1,\n      type: this.props.sourceCustomerDetails.type\n    })\n    document.getElementById('name').value = this.props.sourceCustomerDetails.name\n    if (this.props.type === constant.TRANSPORTER) {\n      document.getElementById('type').value = this.props.sourceCustomerDetails.type\n    }\n    document.getElementById('status').value = this.state.status\n    document.getElementById('contact').value = this.state.contact\n    document.getElementById('pincode').value = this.props.sourceCustomerDetails.pincode\n    document.getElementById('address_line_1').value = this.props.sourceCustomerDetails.address_line_1\n    this.getStateList()\n    .then(response => {\n      document.getElementById('state').value = this.props.sourceCustomerDetails.state_details.state_id\n      this.getCity(this.props.sourceCustomerDetails.state_details.state_id)\n        .then(response => {\n          document.getElementById('city').value = this.props.sourceCustomerDetails.city_details.city_id\n        })\n    })\n  }\n\n  getEntityAdditional () {\n    var params = {\n      entity_id: [this.props.sourceCustomerDetails.entity_id]\n    }\n    httptransfer.queryEntityAdditionalAttributes(params)\n    .then(response => {\n      if (response.status === 200) {\n        if (response.data.entities.length) {\n          let values = response.data.entities[0].additional_attributes\n          document.getElementById('pan').value = values.pan_number\n          document.getElementById('fssai').value = values.fssai_number\n          this.setState({\n            pan: values.pan_number,\n            fssai: values.fssai_number\n          })\n        }\n      }\n    })\n  }\n\n  setEntityAdditional () {\n    var params ={\n        \"pan_number\": this.state.fssai,\n        \"fssai_number\": this.state.pan,\n    }\n    httptransfer.updateEntityAdditionalAttributes(params, this.props.sourceCustomerDetails.entity_id)\n    .then(response => {\n      this.props.closeModal();\n    })\n  }\n\n\n\n  getStateList () {\n    return new Promise((resolve, reject) => {\n      httptransfer.getStateList()\n      .then(response => {\n        this.setState({\n          stateList: response.data.states\n        })\n        resolve(response)\n      })\n    })\n  }\n\n  getCity (state_id) {\n    return new Promise((resolve, reject) => {\n      httptransfer.getCityList({state_id: [state_id]})\n        .then(response => {\n          this.setState({\n            cityList: response.data.cities\n          })\n          resolve(response)\n        })\n    })\n  }\n\n  render() {\n    const {t}=this.props;\n    let statesOptions = this.state.stateList.length ? \n      this.state.stateList.map(element => <option key={element.state_name} value={element.state_id}>{element.state_name}</option>) :\n      []\n    let cityOptions = this.state.cityList.length ? \n      this.state.cityList.map(element => <option key={element.city_name} value={element.city_id}>{element.city_name}</option>) :\n      []\n    let statusList = this.state.statusList.length ? \n      this.state.statusList.map(element => <option key={element.id} value={element.id}>{element.name}</option>) :\n      []\n\n    return (\n      <div>\n        <ToastContainer/>\n        <div className=\"position-relative form-group\">\n          <Label for=\"name\">{t(\"NAME\")}</Label>\n          <Input type=\"text\" className=\"text-capitalize\" onChange={this.handleInputChange} id=\"name\" placeholder=\"Enter your name\" required/>\n          {this.validator.message('name', this.state.name, validate.required)}\n        </div>\n        <div className=\"my-0 position-relative row form-group\">\n          <div className=\"col-12\">\n            <div className=\"position-relative form-group\">\n              <Label for=\"address_line_1\">{t(\"ADDRESS\")}</Label>\n              <Input type=\"text\"  onChange={this.handleInputChange} className=\"text-capitalize\" id=\"address_line_1\" placeholder=\"Enter Address\"/>\n              {this.validator.message('address_line_1', this.state.address_line_1, validate.required)}\n            </div>    \n          </div>\n          <div className=\"col-4\">\n            <div className=\"position-relative form-group\">\n              <Label for=\"state\">{t(\"STATE\")}</Label>\n              <select id=\"state\"  onChange={this.handleInputChange} className=\"form-control\">\n                <option defaultValue>Choose state</option>\n                {statesOptions}\n              </select>\n              {this.validator.message('state', this.state.state, validate.required)}\n            </div>\n          </div>\n          <div className=\"col-4\">\n            <div className=\"position-relative form-group\">\n              <Label for=\"city\">{t(\"CITY\")}</Label>\n              <select disabled={cityOptions.length ? false : true} id=\"city\"  onChange={this.handleInputChange} className=\"form-control\">\n                <option value=\"\">Choose city</option>\n                {cityOptions}\n              </select>\n              {this.validator.message('city', this.state.city, validate.required)}\n            </div>\n          </div>\n          <div className=\"col-4\">\n            <div className=\"position-relative form-group\">\n            <Label for=\"pincode\">{t(\"PINCODE\")}</Label>\n            <Input type=\"number\"  onChange={this.handleInputChange} className=\"form-control\" id=\"pincode\" placeholder=\"Enter Pincode\"/>\n            {this.validator.message('pincode', this.state.pincode, validate.requiredPincode)}\n            </div>     \n          </div>\n          <div className=\"col-12\">\n            <div className=\"position-relative form-group\">\n              <Label for=\"pincode\">{t(\"STATUS\")}</Label>\n              <select  id=\"status\"  onChange={this.handleInputChange} className=\"form-control\">\n                <option value=\"\">Choose Status</option>\n                {statusList}\n              </select>\n              {this.validator.message('status', this.state.status, validate.required)}\n            </div>     \n          </div>\n        </div>\n        <div className=\"position-relative form-group\">\n          <Label for=\"contact\">{t(\"CONTACT\")}</Label>\n          <Input\n            id=\"contact\"\n            onChange={this.handleInputChange}\n          />\n          {this.validator.message('contact', this.state.contact, validate.phone)}\n        </div>\n        {\n        this.props.type === constant.TRANSPORTER ?\n          <div className=\"my-0 position-relative row form-group\">\n            <div className=\"col-6\">\n              <div className=\"position-relative form-group\">\n                <Label for=\"pan\">{t(\"pan\")}</Label>\n                <Input type=\"text\" className=\"form-control\" onChange={this.handleInputChange} id=\"pan\" placeholder=\"Enter PAN\"/>\n              </div>\n            </div>\n            <div className=\"col-6\">\n              <div className=\"position-relative form-group\">\n              <Label for=\"fssai\">{t(\"fssai\")}</Label>\n              <Input type=\"text\"  onChange={this.handleInputChange} className=\"form-control\" id=\"fssai\" placeholder=\"Enter FSSAI\"/>\n              </div>     \n            </div>\n          </div>\n        : null\n        }\n        <div>\n          <button type=\"submit\" className=\"btn btn-primary btn-md\" onClick={this.SubmitEditCustomer.bind(this)}>{t(\"UPDATE\")}</button>\n        </div>\n      </div>  \n    )\n  }\n}\n\nEditSourceCustomer.propTypes = {\n  classes: PropTypes.object.isRequired\n};\n\nexport default (withTranslation(\"translations\")(EditSourceCustomer));\n"]},"metadata":{},"sourceType":"module"}