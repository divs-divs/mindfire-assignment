{"ast":null,"code":"import _defineProperty from \"/home/divyas/mindfire-assignment/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _classCallCheck from \"/home/divyas/mindfire-assignment/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/divyas/mindfire-assignment/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _inherits from \"/home/divyas/mindfire-assignment/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _createSuper from \"/home/divyas/mindfire-assignment/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";\nvar _jsxFileName = \"/home/divyas/mindfire-assignment/src/views/components/Profile/Password.js\";\nimport React, { Component } from 'react';\nimport { Card, CardBody, CardTitle, CardText, Button, Form, FormGroup, Label, Input, Jumbotron, Container } from 'reactstrap';\nimport constant from \"../../../constants/constant\";\nimport HttpTransferService from \"../../../utils/httptransfer\";\nimport { ToastContainer } from \"react-toastify\";\nimport \"react-toastify/dist/ReactToastify.css\";\nimport AuthenticationService from '../../../utils/authentication';\nimport { Redirect } from \"react-router-dom\";\nvar authentication = new AuthenticationService();\nvar httptransfer = new HttpTransferService();\n\nvar Password = /*#__PURE__*/function (_React$Component) {\n  _inherits(Password, _React$Component);\n\n  var _super = _createSuper(Password);\n\n  function Password(props) {\n    var _this;\n\n    _classCallCheck(this, Password);\n\n    _this = _super.call(this, props);\n\n    _this.componentDidMount = function () {\n      var userName = authentication.getUserInfo();\n\n      _this.setState({\n        name: JSON.parse(userName).first_name\n      });\n    };\n\n    _this.handleChange = function (event) {\n      _this.setState(_defineProperty({}, event.target.name, event.target.value));\n    };\n\n    _this.state = {\n      recentPassword: '',\n      newPassword: '',\n      confirmPassword: '',\n      name: '',\n      redirect: false\n    };\n    return _this;\n  }\n\n  _createClass(Password, [{\n    key: \"handlePasswordChange\",\n    value: function handlePasswordChange() {\n      var _this2 = this;\n\n      var createPasswordJson = {};\n      var userId = localStorage.getItem(\"user_info\");\n      var user_id = JSON.parse(userId).user_id;\n      createPasswordJson['old_password'] = this.state.recentPassword;\n      createPasswordJson['new_password'] = this.state.newPassword;\n      var entity_id = constant.ENTITY_ID;\n\n      if (this.state.newPassword === this.state.confirmPassword) {\n        httptransfer.passwordChange(createPasswordJson, entity_id, user_id).then(function (response) {\n          if (response.status === 200) {\n            localStorage.setItem(\"change_password\", false);\n\n            _this2.setState({\n              redirect: true\n            });\n          }\n        });\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var redirect = this.state.redirect;\n\n      if (redirect) {\n        window.location = \"/profile\";\n      }\n\n      return /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 5\n        }\n      }, /*#__PURE__*/React.createElement(Jumbotron, {\n        fluid: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 7\n        }\n      }, /*#__PURE__*/React.createElement(Container, {\n        fluid: true,\n        id: \"base-container\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(CardBody, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(CardTitle, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 15\n        }\n      }, /*#__PURE__*/React.createElement(\"span\", {\n        className: \"d-flex\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 26\n        }\n      }, /*#__PURE__*/React.createElement(\"h5\", {\n        className: \"mt-3 font-weight-bold\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 52\n        }\n      }, \"Hello\"), /*#__PURE__*/React.createElement(\"h1\", {\n        className: \"ml-3 font-weight-bold\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 100\n        }\n      }, this.state.name), \" \")), /*#__PURE__*/React.createElement(CardText, {\n        className: \"mt-5\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 15\n        }\n      }, /*#__PURE__*/React.createElement(\"b\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 42\n        }\n      }, \"Change your password\")), /*#__PURE__*/React.createElement(Form, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 15\n        }\n      }, /*#__PURE__*/React.createElement(FormGroup, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(Label, {\n        for: \"Recent Password\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 25\n        }\n      }, \"Current Password\", /*#__PURE__*/React.createElement(\"span\", {\n        className: \"text-danger pl-1\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 70\n        }\n      }, \"*\")), /*#__PURE__*/React.createElement(Input, {\n        type: \"password\",\n        name: \"recentPassword\",\n        id: \"rPassword\",\n        required: true,\n        onChange: this.handleChange.bind(this),\n        placeholder: \"Current Password\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 25\n        }\n      })), /*#__PURE__*/React.createElement(FormGroup, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(Label, {\n        for: \"New Password\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 25\n        }\n      }, \"New Password\", /*#__PURE__*/React.createElement(\"span\", {\n        className: \"text-danger pl-1\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 63\n        }\n      }, \"*\")), /*#__PURE__*/React.createElement(Input, {\n        type: \"password\",\n        required: true,\n        name: \"newPassword\",\n        onChange: this.handleChange.bind(this),\n        id: \"cPassword\",\n        placeholder: \"New Password\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 25\n        }\n      })), /*#__PURE__*/React.createElement(FormGroup, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(Label, {\n        for: \"Confirm Password\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 25\n        }\n      }, \"Confirm Password\", /*#__PURE__*/React.createElement(\"span\", {\n        className: \"text-danger pl-1\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 71\n        }\n      }, \"*\")), /*#__PURE__*/React.createElement(Input, {\n        type: \"password\",\n        required: true,\n        name: \"confirmPassword\",\n        onChange: this.handleChange.bind(this),\n        id: \"confirmPassword\",\n        placeholder: \"Confirm Password\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 25\n        }\n      }))), /*#__PURE__*/React.createElement(Button, {\n        type: \"button\",\n        className: \"btn btn-primary bg-primary btn-lg float-right\",\n        onClick: this.handlePasswordChange.bind(this),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 15\n        }\n      }, \"Update\")))), /*#__PURE__*/React.createElement(ToastContainer, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 7\n        }\n      }));\n    }\n  }]);\n\n  return Password;\n}(React.Component);\n\nexport default Password;","map":{"version":3,"sources":["/home/divyas/mindfire-assignment/src/views/components/Profile/Password.js"],"names":["React","Component","Card","CardBody","CardTitle","CardText","Button","Form","FormGroup","Label","Input","Jumbotron","Container","constant","HttpTransferService","ToastContainer","AuthenticationService","Redirect","authentication","httptransfer","Password","props","componentDidMount","userName","getUserInfo","setState","name","JSON","parse","first_name","handleChange","event","target","value","state","recentPassword","newPassword","confirmPassword","redirect","createPasswordJson","userId","localStorage","getItem","user_id","entity_id","ENTITY_ID","passwordChange","then","response","status","setItem","window","location","bind","handlePasswordChange"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { Card, CardBody, CardTitle,  CardText, Button,Form, FormGroup, Label, Input, Jumbotron, Container } from 'reactstrap';\nimport constant from \"../../../constants/constant\";\nimport HttpTransferService from \"../../../utils/httptransfer\";\nimport { ToastContainer } from \"react-toastify\";\nimport \"react-toastify/dist/ReactToastify.css\";\nimport AuthenticationService from '../../../utils/authentication';\nimport { Redirect } from \"react-router-dom\";\nconst  authentication = new AuthenticationService()\n\nconst httptransfer = new HttpTransferService();\n\n\nclass Password extends React.Component {\n\n  \n    constructor(props) {\n      super(props);\n      this.state = {\n        recentPassword:'',\n        newPassword:'',\n        confirmPassword:'',\n        name : '',\n        redirect: false\n      }\n    };\n\n    componentDidMount  = () => {\n      var userName =authentication.getUserInfo()\n      this.setState({\n        name : JSON.parse(userName).first_name\n      })\n  }\n\n\n  handleChange = (event) =>  {\n    this.setState({\n        [event.target.name]: event.target.value\n      })\n}\n\n\n  handlePasswordChange () {\n    var createPasswordJson ={}\n    var userId =localStorage.getItem(\"user_info\")\n    var user_id = JSON.parse(userId).user_id\n    createPasswordJson['old_password'] = this.state.recentPassword\n    createPasswordJson['new_password'] = this.state.newPassword   \n    var entity_id = constant.ENTITY_ID;\n    if (this.state.newPassword === this.state.confirmPassword) {\n    httptransfer.passwordChange(createPasswordJson, entity_id, user_id)\n      .then(response => {\n        if (response.status === 200) {\n          localStorage.setItem(\"change_password\",false);\n          this.setState({\n            redirect : true\n          })\n        } \n      })\n    }\n  }\n\n    render() {\n      const { redirect } = this.state;\n\n      if (redirect) {\n        window.location=\"/profile\";\n      }\n        return (\n    <div>\n      <Jumbotron fluid >\n        <Container fluid id='base-container'> \n            <CardBody>\n              <CardTitle><span  className='d-flex'><h5 className=\"mt-3 font-weight-bold\">Hello</h5><h1 className=\"ml-3 font-weight-bold\">{this.state.name}</h1> </span></CardTitle>\n              <CardText className=\"mt-5\"><b>Change your password</b></CardText>\n              <Form >\n                    <FormGroup>\n                        <Label for=\"Recent Password\">Current Password<span className=\"text-danger pl-1\">*</span></Label>\n                        <Input type=\"password\" name=\"recentPassword\" id=\"rPassword\" required onChange = {this.handleChange.bind(this)} placeholder=\"Current Password\" />\n                    </FormGroup>\n                    <FormGroup>\n                        <Label for=\"New Password\">New Password<span className=\"text-danger pl-1\">*</span></Label>\n                        <Input type=\"password\" required name=\"newPassword\" onChange = {this.handleChange.bind(this)} id=\"cPassword\" placeholder=\"New Password\"/>\n                    </FormGroup>\n                    <FormGroup>\n                        <Label for=\"Confirm Password\">Confirm Password<span className=\"text-danger pl-1\">*</span></Label>\n                        <Input type=\"password\" required name=\"confirmPassword\" onChange = {this.handleChange.bind(this)} id=\"confirmPassword\" placeholder=\"Confirm Password\"/>\n                    </FormGroup>\n                  </Form>\n              <Button type=\"button\" className=\"btn btn-primary bg-primary btn-lg float-right\"  onClick = {this.handlePasswordChange.bind(this)}>Update</Button>\n            </CardBody>\n        </Container>\n      </Jumbotron>\n      <ToastContainer />\n    </div>    \n    )\n    }\n\n}\n\nexport default Password;"]},"metadata":{},"sourceType":"module"}